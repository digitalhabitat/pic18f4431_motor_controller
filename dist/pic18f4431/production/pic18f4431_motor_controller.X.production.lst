

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr  1 05:50:04 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24  0000                     
    25                           ; Version 2.05
    26                           ; Generated 20/12/2018 GMT
    27                           ; 
    28                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4431 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     _TXREG	set	4013
    60  0000                     _TXSTA	set	4012
    61  0000                     _SPBRG1	set	4015
    62  0000                     _BAUDCONbits	set	4010
    63  0000                     _RCSTA1bits	set	4011
    64  0000                     _TXSTA1bits	set	4012
    65  0000                     _TRISCbits	set	3988
    66  0000                     _TRISBbits	set	3987
    67  0000                     _PORTBbits	set	3969
    68  0000                     _TXIF	set	31988
    69                           
    70                           	psect	smallconst
    71  000300                     __psmallconst:
    72                           	opt callstack 0
    73  000300  00                 	db	0
    74  000301                     STR_1:
    75  000301  68                 	db	104	;'h'
    76  000302  65                 	db	101	;'e'
    77  000303  6C                 	db	108	;'l'
    78  000304  6C                 	db	108	;'l'
    79  000305  6F                 	db	111	;'o'
    80  000306  20                 	db	32
    81  000307  77                 	db	119	;'w'
    82  000308  6F                 	db	111	;'o'
    83  000309  72                 	db	114	;'r'
    84  00030A  6C                 	db	108	;'l'
    85  00030B  64                 	db	100	;'d'
    86  00030C  21                 	db	33
    87  00030D  2F                 	db	47
    88  00030E  72                 	db	114	;'r'
    89  00030F  2F                 	db	47
    90  000310  6E                 	db	110	;'n'
    91  000311  00                 	db	0
    92                           
    93                           ; #config settings
    94  000312  00                 	db	0	; dummy byte at the end
    95  0000                     
    96                           	psect	cinit
    97  0005D0                     __pcinit:
    98                           	opt callstack 0
    99  0005D0                     start_initialization:
   100                           	opt callstack 0
   101  0005D0                     __initialization:
   102                           	opt callstack 0
   103                           
   104                           ; Clear objects allocated to COMRAM (40 bytes)
   105  0005D0  EE00  F001         	lfsr	0,__pbssCOMRAM
   106  0005D4  0E28               	movlw	40
   107  0005D6                     clear_0:
   108  0005D6  6AEE               	clrf	postinc0,c
   109  0005D8  06E8               	decf	wreg,f,c
   110  0005DA  E1FD               	bnz	clear_0
   111  0005DC                     end_of_initialization:
   112                           	opt callstack 0
   113  0005DC                     __end_of__initialization:
   114                           	opt callstack 0
   115  0005DC  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   116  0005DE  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   117  0005E0  0E00               	movlw	low (__Lsmallconst shr (0+16))
   118  0005E2  6EF8               	movwf	tblptru,c
   119  0005E4  0E03               	movlw	high __Lsmallconst
   120  0005E6  6EF7               	movwf	tblptrh,c
   121  0005E8  0100               	movlb	0
   122  0005EA  EF8A  F001         	goto	_main	;jump to C main() function
   123                           
   124                           	psect	bssCOMRAM
   125  000001                     __pbssCOMRAM:
   126                           	opt callstack 0
   127  000001                     	ds	32
   128  000021                     _nout:
   129                           	opt callstack 0
   130  000021                     	ds	2
   131  000023                     _width:
   132                           	opt callstack 0
   133  000023                     	ds	2
   134  000025                     _prec:
   135                           	opt callstack 0
   136  000025                     	ds	2
   137  000027                     _flags:
   138                           	opt callstack 0
   139  000027                     	ds	2
   140                           
   141                           	psect	cstackCOMRAM
   142  000029                     __pcstackCOMRAM:
   143                           	opt callstack 0
   144  000029                     ??_low_isr:
   145  000029                     
   146                           ; 1 bytes @ 0x0
   147  000029                     	ds	1
   148  00002A                     putch@byte:
   149                           	opt callstack 0
   150                           
   151                           ; 1 bytes @ 0x1
   152  00002A                     	ds	1
   153  00002B                     fputc@c:
   154                           	opt callstack 0
   155                           
   156                           ; 2 bytes @ 0x2
   157  00002B                     	ds	2
   158  00002D                     fputc@fp:
   159                           	opt callstack 0
   160                           
   161                           ; 2 bytes @ 0x4
   162  00002D                     	ds	2
   163  00002F                     ??_fputc:
   164                           
   165                           ; 1 bytes @ 0x6
   166  00002F                     	ds	5
   167  000034                     ?_vfpfcnvrt:
   168                           	opt callstack 0
   169  000034                     vfpfcnvrt@fp:
   170                           	opt callstack 0
   171                           
   172                           ; 2 bytes @ 0xB
   173  000034                     	ds	2
   174  000036                     vfpfcnvrt@fmt:
   175                           	opt callstack 0
   176                           
   177                           ; 2 bytes @ 0xD
   178  000036                     	ds	2
   179  000038                     vfpfcnvrt@ap:
   180                           	opt callstack 0
   181                           
   182                           ; 2 bytes @ 0xF
   183  000038                     	ds	2
   184  00003A                     ?_vfprintf:
   185                           	opt callstack 0
   186  00003A                     vfprintf@fp:
   187                           	opt callstack 0
   188                           
   189                           ; 2 bytes @ 0x11
   190  00003A                     	ds	2
   191  00003C                     vfprintf@fmt:
   192                           	opt callstack 0
   193                           
   194                           ; 2 bytes @ 0x13
   195  00003C                     	ds	2
   196  00003E                     vfprintf@ap:
   197                           	opt callstack 0
   198                           
   199                           ; 2 bytes @ 0x15
   200  00003E                     	ds	2
   201  000040                     vfprintf@cfmt:
   202                           	opt callstack 0
   203                           
   204                           ; 2 bytes @ 0x17
   205  000040                     	ds	2
   206  000042                     ?_printf:
   207                           	opt callstack 0
   208  000042                     printf@fmt:
   209                           	opt callstack 0
   210                           
   211                           ; 2 bytes @ 0x19
   212  000042                     	ds	2
   213  000044                     
   214                           ; 1 bytes @ 0x1B
   215  000044                     	ds	2
   216  000046                     printf@ap:
   217                           	opt callstack 0
   218                           
   219                           ; 2 bytes @ 0x1D
   220  000046                     	ds	2
   221  000048                     ??_main:
   222                           
   223                           ; 1 bytes @ 0x1F
   224  000048                     	ds	2
   225                           
   226 ;;
   227 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   228 ;;
   229 ;; *************** function _main *****************
   230 ;; Defined at:
   231 ;;		line 35 in file "main.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;  val             2    0        int 
   236 ;;  x               1    0        unsigned char 
   237 ;; Return value:  Size  Location     Type
   238 ;;                  1    wreg      void 
   239 ;; Registers used:
   240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   241 ;; Tracked objects:
   242 ;;		On entry : 0/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   246 ;;      Params:         0       0       0       0
   247 ;;      Locals:         2       0       0       0
   248 ;;      Temps:          2       0       0       0
   249 ;;      Totals:         4       0       0       0
   250 ;;Total ram usage:        4 bytes
   251 ;; Hardware stack levels required when called:    7
   252 ;; This function calls:
   253 ;;		_ConfigureOscillator
   254 ;;		_InitApp
   255 ;;		_printf
   256 ;; This function is called by:
   257 ;;		Startup code after reset
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261                           	psect	text0
   262  000314                     __ptext0:
   263                           	opt callstack 0
   264  000314                     _main:
   265                           	opt callstack 24
   266                           
   267                           ;main.c: 38:     ConfigureOscillator();
   268                           
   269                           ;incstack = 0
   270  000314  EC13  F003         	call	_ConfigureOscillator	;wreg free
   271                           
   272                           ;main.c: 41:     InitApp();
   273  000318  EC0D  F003         	call	_InitApp	;wreg free
   274  00031C                     l979:
   275                           
   276                           ;main.c: 50:     {;main.c: 52:         printf("hello world!/r/n");
   277  00031C  0E01               	movlw	low STR_1
   278  00031E  6E42               	movwf	printf@fmt,c
   279  000320  0E03               	movlw	high STR_1
   280  000322  6E43               	movwf	printf@fmt+1,c
   281  000324  ECD5  F002         	call	_printf	;wreg free
   282                           
   283                           ;main.c: 53:         PORTBbits.RB0 = 1;
   284  000328  8081               	bsf	3969,0,c	;volatile
   285                           
   286                           ;main.c: 54:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   287  00032A  0E02               	movlw	2
   288  00032C  6E49               	movwf	(??_main+1)& (0+255),c
   289  00032E  0EE8               	movlw	232
   290  000330  6E48               	movwf	??_main& (0+255),c
   291  000332  0E52               	movlw	82
   292  000334                     u167:
   293  000334  0004               	clrwdt	
   294  000336  2EE8               	decfsz	wreg,f,c
   295  000338  D7FD               	bra	u167
   296  00033A  2E48               	decfsz	??_main& (0+255),f,c
   297  00033C  D7FB               	bra	u167
   298  00033E  2E49               	decfsz	(??_main+1)& (0+255),f,c
   299  000340  D7F9               	bra	u167
   300                           
   301                           ;main.c: 55:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   302  000342  0E02               	movlw	2
   303  000344  6E49               	movwf	(??_main+1)& (0+255),c
   304  000346  0EE8               	movlw	232
   305  000348  6E48               	movwf	??_main& (0+255),c
   306  00034A  0E52               	movlw	82
   307  00034C                     u177:
   308  00034C  0004               	clrwdt	
   309  00034E  2EE8               	decfsz	wreg,f,c
   310  000350  D7FD               	bra	u177
   311  000352  2E48               	decfsz	??_main& (0+255),f,c
   312  000354  D7FB               	bra	u177
   313  000356  2E49               	decfsz	(??_main+1)& (0+255),f,c
   314  000358  D7F9               	bra	u177
   315                           
   316                           ;main.c: 56:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   317  00035A  0E02               	movlw	2
   318  00035C  6E49               	movwf	(??_main+1)& (0+255),c
   319  00035E  0EE8               	movlw	232
   320  000360  6E48               	movwf	??_main& (0+255),c
   321  000362  0E52               	movlw	82
   322  000364                     u187:
   323  000364  0004               	clrwdt	
   324  000366  2EE8               	decfsz	wreg,f,c
   325  000368  D7FD               	bra	u187
   326  00036A  2E48               	decfsz	??_main& (0+255),f,c
   327  00036C  D7FB               	bra	u187
   328  00036E  2E49               	decfsz	(??_main+1)& (0+255),f,c
   329  000370  D7F9               	bra	u187
   330                           
   331                           ;main.c: 57:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   332  000372  0E02               	movlw	2
   333  000374  6E49               	movwf	(??_main+1)& (0+255),c
   334  000376  0EE8               	movlw	232
   335  000378  6E48               	movwf	??_main& (0+255),c
   336  00037A  0E52               	movlw	82
   337  00037C                     u197:
   338  00037C  0004               	clrwdt	
   339  00037E  2EE8               	decfsz	wreg,f,c
   340  000380  D7FD               	bra	u197
   341  000382  2E48               	decfsz	??_main& (0+255),f,c
   342  000384  D7FB               	bra	u197
   343  000386  2E49               	decfsz	(??_main+1)& (0+255),f,c
   344  000388  D7F9               	bra	u197
   345                           
   346                           ;main.c: 58:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   347  00038A  0E02               	movlw	2
   348  00038C  6E49               	movwf	(??_main+1)& (0+255),c
   349  00038E  0EE8               	movlw	232
   350  000390  6E48               	movwf	??_main& (0+255),c
   351  000392  0E52               	movlw	82
   352  000394                     u207:
   353  000394  0004               	clrwdt	
   354  000396  2EE8               	decfsz	wreg,f,c
   355  000398  D7FD               	bra	u207
   356  00039A  2E48               	decfsz	??_main& (0+255),f,c
   357  00039C  D7FB               	bra	u207
   358  00039E  2E49               	decfsz	(??_main+1)& (0+255),f,c
   359  0003A0  D7F9               	bra	u207
   360                           
   361                           ;main.c: 60:         PORTBbits.RB0 = 0;
   362  0003A2  9081               	bcf	3969,0,c	;volatile
   363                           
   364                           ;main.c: 61:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   365  0003A4  0E02               	movlw	2
   366  0003A6  6E49               	movwf	(??_main+1)& (0+255),c
   367  0003A8  0EE8               	movlw	232
   368  0003AA  6E48               	movwf	??_main& (0+255),c
   369  0003AC  0E52               	movlw	82
   370  0003AE                     u217:
   371  0003AE  0004               	clrwdt	
   372  0003B0  2EE8               	decfsz	wreg,f,c
   373  0003B2  D7FD               	bra	u217
   374  0003B4  2E48               	decfsz	??_main& (0+255),f,c
   375  0003B6  D7FB               	bra	u217
   376  0003B8  2E49               	decfsz	(??_main+1)& (0+255),f,c
   377  0003BA  D7F9               	bra	u217
   378                           
   379                           ;main.c: 62:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   380  0003BC  0E02               	movlw	2
   381  0003BE  6E49               	movwf	(??_main+1)& (0+255),c
   382  0003C0  0EE8               	movlw	232
   383  0003C2  6E48               	movwf	??_main& (0+255),c
   384  0003C4  0E52               	movlw	82
   385  0003C6                     u227:
   386  0003C6  0004               	clrwdt	
   387  0003C8  2EE8               	decfsz	wreg,f,c
   388  0003CA  D7FD               	bra	u227
   389  0003CC  2E48               	decfsz	??_main& (0+255),f,c
   390  0003CE  D7FB               	bra	u227
   391  0003D0  2E49               	decfsz	(??_main+1)& (0+255),f,c
   392  0003D2  D7F9               	bra	u227
   393                           
   394                           ;main.c: 63:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   395  0003D4  0E02               	movlw	2
   396  0003D6  6E49               	movwf	(??_main+1)& (0+255),c
   397  0003D8  0EE8               	movlw	232
   398  0003DA  6E48               	movwf	??_main& (0+255),c
   399  0003DC  0E52               	movlw	82
   400  0003DE                     u237:
   401  0003DE  0004               	clrwdt	
   402  0003E0  2EE8               	decfsz	wreg,f,c
   403  0003E2  D7FD               	bra	u237
   404  0003E4  2E48               	decfsz	??_main& (0+255),f,c
   405  0003E6  D7FB               	bra	u237
   406  0003E8  2E49               	decfsz	(??_main+1)& (0+255),f,c
   407  0003EA  D7F9               	bra	u237
   408                           
   409                           ;main.c: 64:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   410  0003EC  0E02               	movlw	2
   411  0003EE  6E49               	movwf	(??_main+1)& (0+255),c
   412  0003F0  0EE8               	movlw	232
   413  0003F2  6E48               	movwf	??_main& (0+255),c
   414  0003F4  0E52               	movlw	82
   415  0003F6                     u247:
   416  0003F6  0004               	clrwdt	
   417  0003F8  2EE8               	decfsz	wreg,f,c
   418  0003FA  D7FD               	bra	u247
   419  0003FC  2E48               	decfsz	??_main& (0+255),f,c
   420  0003FE  D7FB               	bra	u247
   421  000400  2E49               	decfsz	(??_main+1)& (0+255),f,c
   422  000402  D7F9               	bra	u247
   423                           
   424                           ;main.c: 65:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   425  000404  0E02               	movlw	2
   426  000406  6E49               	movwf	(??_main+1)& (0+255),c
   427  000408  0EE8               	movlw	232
   428  00040A  6E48               	movwf	??_main& (0+255),c
   429  00040C  0E52               	movlw	82
   430  00040E                     u257:
   431  00040E  0004               	clrwdt	
   432  000410  2EE8               	decfsz	wreg,f,c
   433  000412  D7FD               	bra	u257
   434  000414  2E48               	decfsz	??_main& (0+255),f,c
   435  000416  D7FB               	bra	u257
   436  000418  2E49               	decfsz	(??_main+1)& (0+255),f,c
   437  00041A  D7F9               	bra	u257
   438  00041C  D77F               	goto	l979
   439  00041E                     __end_of_main:
   440                           	opt callstack 0
   441                           
   442 ;; *************** function _printf *****************
   443 ;; Defined at:
   444 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;  fmt             2   25[COMRAM] PTR const unsigned char 
   447 ;;		 -> STR_1(17), 
   448 ;; Auto vars:     Size  Location     Type
   449 ;;  ap              2   29[COMRAM] PTR void [1]
   450 ;;		 -> ?_printf(2), 
   451 ;;  ret             2    0        int 
   452 ;; Return value:  Size  Location     Type
   453 ;;                  2   25[COMRAM] int 
   454 ;; Registers used:
   455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   461 ;;      Params:         2       0       0       0
   462 ;;      Locals:         4       0       0       0
   463 ;;      Temps:          0       0       0       0
   464 ;;      Totals:         6       0       0       0
   465 ;;Total ram usage:        6 bytes
   466 ;; Hardware stack levels used:    1
   467 ;; Hardware stack levels required when called:    6
   468 ;; This function calls:
   469 ;;		_vfprintf
   470 ;; This function is called by:
   471 ;;		_main
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475                           	psect	text1
   476  0005AA                     __ptext1:
   477                           	opt callstack 0
   478  0005AA                     _printf:
   479                           	opt callstack 24
   480                           
   481                           ;incstack = 0
   482  0005AA  0E44               	movlw	low (?_printf+2)
   483  0005AC  6E46               	movwf	printf@ap,c
   484  0005AE  0E00               	movlw	high (?_printf+2)
   485  0005B0  6E47               	movwf	printf@ap+1,c
   486  0005B2  0E00               	movlw	0
   487  0005B4  6E3A               	movwf	vfprintf@fp,c
   488  0005B6  0E00               	movlw	0
   489  0005B8  6E3B               	movwf	vfprintf@fp+1,c
   490  0005BA  C042  F03C         	movff	printf@fmt,vfprintf@fmt
   491  0005BE  C043  F03D         	movff	printf@fmt+1,vfprintf@fmt+1
   492  0005C2  0E46               	movlw	low printf@ap
   493  0005C4  6E3E               	movwf	vfprintf@ap,c
   494  0005C6  0E00               	movlw	high printf@ap
   495  0005C8  6E3F               	movwf	vfprintf@ap+1,c
   496  0005CA  ECAC  F002         	call	_vfprintf	;wreg free
   497  0005CE  0012               	return		;funcret
   498  0005D0                     __end_of_printf:
   499                           	opt callstack 0
   500                           
   501 ;; *************** function _vfprintf *****************
   502 ;; Defined at:
   503 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
   506 ;;		 -> NULL(0), 
   507 ;;  fmt             2   19[COMRAM] PTR const unsigned char 
   508 ;;		 -> STR_1(17), 
   509 ;;  ap              2   21[COMRAM] PTR PTR void 
   510 ;;		 -> printf@ap(2), 
   511 ;; Auto vars:     Size  Location     Type
   512 ;;  cfmt            2   23[COMRAM] PTR unsigned char 
   513 ;;		 -> STR_1(17), 
   514 ;; Return value:  Size  Location     Type
   515 ;;                  2   17[COMRAM] int 
   516 ;; Registers used:
   517 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   523 ;;      Params:         6       0       0       0
   524 ;;      Locals:         2       0       0       0
   525 ;;      Temps:          0       0       0       0
   526 ;;      Totals:         8       0       0       0
   527 ;;Total ram usage:        8 bytes
   528 ;; Hardware stack levels used:    1
   529 ;; Hardware stack levels required when called:    5
   530 ;; This function calls:
   531 ;;		_vfpfcnvrt
   532 ;; This function is called by:
   533 ;;		_printf
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	text2
   538  000558                     __ptext2:
   539                           	opt callstack 0
   540  000558                     _vfprintf:
   541                           	opt callstack 24
   542                           
   543                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
   544                           
   545                           ;incstack = 0
   546  000558  C03C  F040         	movff	vfprintf@fmt,vfprintf@cfmt
   547  00055C  C03D  F041         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   548                           
   549                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
   550  000560  0E00               	movlw	0
   551  000562  6E22               	movwf	_nout+1,c
   552  000564  0E00               	movlw	0
   553  000566  6E21               	movwf	_nout,c
   554                           
   555                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
   556  000568  D012               	goto	l967
   557  00056A                     l965:
   558                           
   559                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
   560  00056A  C03A  F034         	movff	vfprintf@fp,vfpfcnvrt@fp
   561  00056E  C03B  F035         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   562  000572  0E40               	movlw	low vfprintf@cfmt
   563  000574  6E36               	movwf	vfpfcnvrt@fmt,c
   564  000576  0E00               	movlw	high vfprintf@cfmt
   565  000578  6E37               	movwf	vfpfcnvrt@fmt+1,c
   566  00057A  C03E  F038         	movff	vfprintf@ap,vfpfcnvrt@ap
   567  00057E  C03F  F039         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   568  000582  EC0F  F002         	call	_vfpfcnvrt	;wreg free
   569  000586  5034               	movf	?_vfpfcnvrt,w,c
   570  000588  2621               	addwf	_nout,f,c
   571  00058A  5035               	movf	?_vfpfcnvrt+1,w,c
   572  00058C  2222               	addwfc	_nout+1,f,c
   573  00058E                     l967:
   574                           
   575                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
   576  00058E  C040  FFF6         	movff	vfprintf@cfmt,tblptrl
   577  000592  C041  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   578  000596                     	if	0	;tblptru may be non-zero
   579  000596                     	endif
   580  000596                     	if	0	;tblptru may be non-zero
   581  000596                     	endif
   582  000596  0008               	tblrd		*
   583  000598  50F5               	movf	tablat,w,c
   584  00059A  0900               	iorlw	0
   585  00059C  A4D8               	btfss	status,2,c
   586  00059E  D7E5               	goto	l965
   587                           
   588                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
   589  0005A0  C021  F03A         	movff	_nout,?_vfprintf
   590  0005A4  C022  F03B         	movff	_nout+1,?_vfprintf+1
   591  0005A8  0012               	return		;funcret
   592  0005AA                     __end_of_vfprintf:
   593                           	opt callstack 0
   594                           
   595 ;; *************** function _vfpfcnvrt *****************
   596 ;; Defined at:
   597 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
   600 ;;		 -> NULL(0), 
   601 ;;  fmt             2   13[COMRAM] PTR PTR unsigned char 
   602 ;;		 -> vfprintf@cfmt(2), 
   603 ;;  ap              2   15[COMRAM] PTR PTR void 
   604 ;;		 -> printf@ap(2), 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  llu             8    0        unsigned long long 
   607 ;;  ll              8    0        long long 
   608 ;;  f               4    0        long long 
   609 ;;  vp              3    0        PTR void 
   610 ;;  ct              3    0        unsigned char [3]
   611 ;;  cp              3    0        PTR unsigned char 
   612 ;;  i               2    0        int 
   613 ;;  done            2    0        int 
   614 ;;  c               1    0        unsigned char 
   615 ;; Return value:  Size  Location     Type
   616 ;;                  2   11[COMRAM] int 
   617 ;; Registers used:
   618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   624 ;;      Params:         6       0       0       0
   625 ;;      Locals:         0       0       0       0
   626 ;;      Temps:          0       0       0       0
   627 ;;      Totals:         6       0       0       0
   628 ;;Total ram usage:        6 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; Hardware stack levels required when called:    4
   631 ;; This function calls:
   632 ;;		_fputc
   633 ;; This function is called by:
   634 ;;		_vfprintf
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           	psect	text3
   639  00041E                     __ptext3:
   640                           	opt callstack 0
   641  00041E                     _vfpfcnvrt:
   642                           	opt callstack 24
   643                           
   644                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
   645                           
   646                           ;incstack = 0
   647  00041E  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   648  000422  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   649  000426  CFDE FFF6          	movff	postinc2,tblptrl
   650  00042A  CFDD FFF7          	movff	postdec2,tblptrh
   651  00042E                     	if	0	;tblptru may be non-zero
   652  00042E                     	endif
   653  00042E                     	if	0	;tblptru may be non-zero
   654  00042E                     	endif
   655  00042E  0008               	tblrd		*
   656  000430  50F5               	movf	tablat,w,c
   657  000432  0A25               	xorlw	37
   658  000434  A4D8               	btfss	status,2,c
   659  000436  D040               	goto	l953
   660                           
   661                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
   662  000438  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   663  00043C  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   664  000440  2ADE               	incf	postinc2,f,c
   665  000442  0E00               	movlw	0
   666  000444  22DD               	addwfc	postdec2,f,c
   667                           
   668                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
   669  000446  0E00               	movlw	0
   670  000448  6E24               	movwf	_width+1,c
   671  00044A  0E00               	movlw	0
   672  00044C  6E23               	movwf	_width,c
   673  00044E  C023  F027         	movff	_width,_flags
   674  000452  C024  F028         	movff	_width+1,_flags+1
   675                           
   676                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
   677  000456  6825               	setf	_prec,c
   678  000458  6826               	setf	_prec+1,c
   679                           
   680                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
   681  00045A  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   682  00045E  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   683  000462  CFDE FFF6          	movff	postinc2,tblptrl
   684  000466  CFDD FFF7          	movff	postdec2,tblptrh
   685  00046A                     	if	0	;tblptru may be non-zero
   686  00046A                     	endif
   687  00046A                     	if	0	;tblptru may be non-zero
   688  00046A                     	endif
   689  00046A  0008               	tblrd		*
   690  00046C  50F5               	movf	tablat,w,c
   691  00046E  0A25               	xorlw	37
   692  000470  A4D8               	btfss	status,2,c
   693  000472  D016               	goto	l947
   694                           
   695                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
   696  000474  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   697  000478  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   698  00047C  2ADE               	incf	postinc2,f,c
   699  00047E  0E00               	movlw	0
   700  000480  22DD               	addwfc	postdec2,f,c
   701                           
   702                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
   703  000482  0E00               	movlw	0
   704  000484  6E2C               	movwf	fputc@c+1,c
   705  000486  0E25               	movlw	37
   706  000488  6E2B               	movwf	fputc@c,c
   707  00048A  C034  F02D         	movff	vfpfcnvrt@fp,fputc@fp
   708  00048E  C035  F02E         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   709  000492  EC76  F002         	call	_fputc	;wreg free
   710  000496                     l943:
   711                           
   712                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
   713  000496  0E00               	movlw	0
   714  000498  6E35               	movwf	?_vfpfcnvrt+1,c
   715  00049A  0E01               	movlw	1
   716  00049C  6E34               	movwf	?_vfpfcnvrt,c
   717  00049E  0012               	return	
   718  0004A0                     l947:
   719                           
   720                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
   721  0004A0  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   722  0004A4  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   723  0004A8  2ADE               	incf	postinc2,f,c
   724  0004AA  0E00               	movlw	0
   725  0004AC  22DD               	addwfc	postdec2,f,c
   726                           
   727                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
   728  0004AE  0E00               	movlw	0
   729  0004B0  6E35               	movwf	?_vfpfcnvrt+1,c
   730  0004B2  0E00               	movlw	0
   731  0004B4  6E34               	movwf	?_vfpfcnvrt,c
   732  0004B6  0012               	return	
   733  0004B8                     l953:
   734                           
   735                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
   736  0004B8  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   737  0004BC  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   738  0004C0  CFDE FFF6          	movff	postinc2,tblptrl
   739  0004C4  CFDD FFF7          	movff	postdec2,tblptrh
   740  0004C8                     	if	0	;tblptru may be non-zero
   741  0004C8                     	endif
   742  0004C8                     	if	0	;tblptru may be non-zero
   743  0004C8                     	endif
   744  0004C8  0008               	tblrd		*
   745  0004CA  50F5               	movf	tablat,w,c
   746  0004CC  6E2B               	movwf	fputc@c,c
   747  0004CE  6A2C               	clrf	fputc@c+1,c
   748  0004D0  C034  F02D         	movff	vfpfcnvrt@fp,fputc@fp
   749  0004D4  C035  F02E         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   750  0004D8  EC76  F002         	call	_fputc	;wreg free
   751                           
   752                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
   753  0004DC  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   754  0004E0  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   755  0004E4  2ADE               	incf	postinc2,f,c
   756  0004E6  0E00               	movlw	0
   757  0004E8  22DD               	addwfc	postdec2,f,c
   758  0004EA  D7D5               	goto	l943
   759  0004EC                     __end_of_vfpfcnvrt:
   760                           	opt callstack 0
   761                           
   762 ;; *************** function _fputc *****************
   763 ;; Defined at:
   764 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;  c               2    2[COMRAM] int 
   767 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
   768 ;;		 -> NULL(0), 
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  2    2[COMRAM] int 
   773 ;; Registers used:
   774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   780 ;;      Params:         4       0       0       0
   781 ;;      Locals:         0       0       0       0
   782 ;;      Temps:          5       0       0       0
   783 ;;      Totals:         9       0       0       0
   784 ;;Total ram usage:        9 bytes
   785 ;; Hardware stack levels used:    1
   786 ;; Hardware stack levels required when called:    3
   787 ;; This function calls:
   788 ;;		_putch
   789 ;; This function is called by:
   790 ;;		_vfpfcnvrt
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           	psect	text4
   795  0004EC                     __ptext4:
   796                           	opt callstack 0
   797  0004EC                     _fputc:
   798                           	opt callstack 24
   799                           
   800                           ;incstack = 0
   801  0004EC  502D               	movf	fputc@fp,w,c
   802  0004EE  102E               	iorwf	fputc@fp+1,w,c
   803  0004F0  B4D8               	btfsc	status,2,c
   804  0004F2  D004               	goto	u100
   805  0004F4  502D               	movf	fputc@fp,w,c
   806  0004F6  102E               	iorwf	fputc@fp+1,w,c
   807  0004F8  A4D8               	btfss	status,2,c
   808  0004FA  D004               	goto	l921
   809  0004FC                     u100:
   810  0004FC  502B               	movf	fputc@c,w,c
   811  0004FE  EC04  F003         	call	_putch
   812  000502  0012               	return	
   813  000504                     l921:
   814  000504  EE20 F004          	lfsr	2,4
   815  000508  502D               	movf	fputc@fp,w,c
   816  00050A  26D9               	addwf	fsr2l,f,c
   817  00050C  502E               	movf	fputc@fp+1,w,c
   818  00050E  22DA               	addwfc	fsr2h,f,c
   819  000510  50DE               	movf	postinc2,w,c
   820  000512  10DE               	iorwf	postinc2,w,c
   821  000514  B4D8               	btfsc	status,2,c
   822  000516  D016               	goto	u120
   823  000518  EE20 F004          	lfsr	2,4
   824  00051C  502D               	movf	fputc@fp,w,c
   825  00051E  26D9               	addwf	fsr2l,f,c
   826  000520  502E               	movf	fputc@fp+1,w,c
   827  000522  22DA               	addwfc	fsr2h,f,c
   828  000524  EE10 F002          	lfsr	1,2
   829  000528  502D               	movf	fputc@fp,w,c
   830  00052A  26E1               	addwf	fsr1l,f,c
   831  00052C  502E               	movf	fputc@fp+1,w,c
   832  00052E  22E2               	addwfc	fsr1h,f,c
   833  000530  50DE               	movf	postinc2,w,c
   834  000532  5CE6               	subwf	postinc1,w,c
   835  000534  50E6               	movf	postinc1,w,c
   836  000536  0A80               	xorlw	128
   837  000538  6E33               	movwf	(??_fputc+4)& (0+255),c
   838  00053A  50DE               	movf	postinc2,w,c
   839  00053C  0A80               	xorlw	128
   840  00053E  5833               	subwfb	(??_fputc+4)& (0+255),w,c
   841  000540  B0D8               	btfsc	status,0,c
   842  000542  0012               	return	
   843  000544                     u120:
   844  000544  EE20 F002          	lfsr	2,2
   845  000548  502D               	movf	fputc@fp,w,c
   846  00054A  26D9               	addwf	fsr2l,f,c
   847  00054C  502E               	movf	fputc@fp+1,w,c
   848  00054E  22DA               	addwfc	fsr2h,f,c
   849  000550  2ADE               	incf	postinc2,f,c
   850  000552  0E00               	movlw	0
   851  000554  22DD               	addwfc	postdec2,f,c
   852  000556  0012               	return		;funcret
   853  000558                     __end_of_fputc:
   854                           	opt callstack 0
   855                           
   856 ;; *************** function _putch *****************
   857 ;; Defined at:
   858 ;;		line 69 in file "user.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;  byte            1    wreg     unsigned char 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  byte            1    1[COMRAM] unsigned char 
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg, status,2
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   872 ;;      Params:         0       0       0       0
   873 ;;      Locals:         1       0       0       0
   874 ;;      Temps:          0       0       0       0
   875 ;;      Totals:         1       0       0       0
   876 ;;Total ram usage:        1 bytes
   877 ;; Hardware stack levels used:    1
   878 ;; Hardware stack levels required when called:    2
   879 ;; This function calls:
   880 ;;		Nothing
   881 ;; This function is called by:
   882 ;;		_fputc
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text5
   887  000608                     __ptext5:
   888                           	opt callstack 0
   889  000608                     _putch:
   890                           	opt callstack 24
   891                           
   892                           ;incstack = 0
   893                           ;putch@byte stored from wreg
   894  000608  6E2A               	movwf	putch@byte,c
   895                           
   896                           ;user.c: 70:     TXSTA = 0x26;
   897  00060A  0E26               	movlw	38
   898  00060C  6EAC               	movwf	4012,c	;volatile
   899                           
   900                           ;user.c: 71:     RCSTA1bits.SPEN = 1;
   901  00060E  8EAB               	bsf	4011,7,c	;volatile
   902  000610                     l60:
   903  000610  A89E               	btfss	3998,4,c	;volatile
   904  000612  D7FE               	goto	l60
   905                           
   906                           ;user.c: 73:     TXREG = byte;
   907  000614  C02A  FFAD         	movff	putch@byte,4013	;volatile
   908  000618  0012               	return		;funcret
   909  00061A                     __end_of_putch:
   910                           	opt callstack 0
   911                           
   912 ;; *************** function _InitApp *****************
   913 ;; Defined at:
   914 ;;		line 29 in file "user.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;		None
   917 ;; Auto vars:     Size  Location     Type
   918 ;;		None
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		wreg, status,2, cstack
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   928 ;;      Params:         0       0       0       0
   929 ;;      Locals:         0       0       0       0
   930 ;;      Temps:          0       0       0       0
   931 ;;      Totals:         0       0       0       0
   932 ;;Total ram usage:        0 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; Hardware stack levels required when called:    3
   935 ;; This function calls:
   936 ;;		_init_usart
   937 ;; This function is called by:
   938 ;;		_main
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	text6
   943  00061A                     __ptext6:
   944                           	opt callstack 0
   945  00061A                     _InitApp:
   946                           	opt callstack 27
   947                           
   948                           ;user.c: 34:     TRISBbits.TRISB0 = 0;
   949                           
   950                           ;incstack = 0
   951  00061A  9093               	bcf	3987,0,c	;volatile
   952                           
   953                           ;user.c: 37:     init_usart();
   954  00061C  ECF7  F002         	call	_init_usart	;wreg free
   955  000620  0012               	return		;funcret
   956  000622                     __end_of_InitApp:
   957                           	opt callstack 0
   958                           
   959 ;; *************** function _init_usart *****************
   960 ;; Defined at:
   961 ;;		line 44 in file "user.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, status,2
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   975 ;;      Params:         0       0       0       0
   976 ;;      Locals:         0       0       0       0
   977 ;;      Temps:          0       0       0       0
   978 ;;      Totals:         0       0       0       0
   979 ;;Total ram usage:        0 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; Hardware stack levels required when called:    2
   982 ;; This function calls:
   983 ;;		Nothing
   984 ;; This function is called by:
   985 ;;		_InitApp
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text7
   990  0005EE                     __ptext7:
   991                           	opt callstack 0
   992  0005EE                     _init_usart:
   993                           	opt callstack 27
   994                           
   995                           ;user.c: 47:     TRISCbits.RC6 = 0;
   996                           
   997                           ;incstack = 0
   998  0005EE  9C94               	bcf	3988,6,c	;volatile
   999                           
  1000                           ;user.c: 48:     TRISCbits.RC7 = 1;
  1001  0005F0  8E94               	bsf	3988,7,c	;volatile
  1002                           
  1003                           ;user.c: 50:     TXSTA1bits.SYNC = 0;
  1004  0005F2  98AC               	bcf	4012,4,c	;volatile
  1005                           
  1006                           ;user.c: 51:     TXSTA1bits.TX9 = 0;
  1007  0005F4  9CAC               	bcf	4012,6,c	;volatile
  1008                           
  1009                           ;user.c: 52:     TXSTA1bits.TXEN = 1;
  1010  0005F6  8AAC               	bsf	4012,5,c	;volatile
  1011                           
  1012                           ;user.c: 54:     RCSTA1bits.RX9 = 0;
  1013  0005F8  9CAB               	bcf	4011,6,c	;volatile
  1014                           
  1015                           ;user.c: 55:     RCSTA1bits.CREN = 1;
  1016  0005FA  88AB               	bsf	4011,4,c	;volatile
  1017                           
  1018                           ;user.c: 56:     RCSTA1bits.SPEN = 1;
  1019  0005FC  8EAB               	bsf	4011,7,c	;volatile
  1020                           
  1021                           ;user.c: 59:     BAUDCONbits.BRG16 = 0;
  1022  0005FE  96AA               	bcf	4010,3,c	;volatile
  1023                           
  1024                           ;user.c: 60:     TXSTA1bits.BRGH = 0;
  1025  000600  94AC               	bcf	4012,2,c	;volatile
  1026                           
  1027                           ;user.c: 61:     SPBRG1 = 129;
  1028  000602  0E81               	movlw	129
  1029  000604  6EAF               	movwf	4015,c	;volatile
  1030  000606  0012               	return		;funcret
  1031  000608                     __end_of_init_usart:
  1032                           	opt callstack 0
  1033                           
  1034 ;; *************** function _ConfigureOscillator *****************
  1035 ;; Defined at:
  1036 ;;		line 24 in file "system.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  1    wreg      void 
  1043 ;; Registers used:
  1044 ;;		None
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1050 ;;      Params:         0       0       0       0
  1051 ;;      Locals:         0       0       0       0
  1052 ;;      Temps:          0       0       0       0
  1053 ;;      Totals:         0       0       0       0
  1054 ;;Total ram usage:        0 bytes
  1055 ;; Hardware stack levels used:    1
  1056 ;; Hardware stack levels required when called:    2
  1057 ;; This function calls:
  1058 ;;		Nothing
  1059 ;; This function is called by:
  1060 ;;		_main
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           	psect	text8
  1065  000626                     __ptext8:
  1066                           	opt callstack 0
  1067  000626                     _ConfigureOscillator:
  1068                           	opt callstack 28
  1069                           
  1070                           ;incstack = 0
  1071  000626  0012               	return		;funcret
  1072  000628                     __end_of_ConfigureOscillator:
  1073                           	opt callstack 0
  1074                           
  1075 ;; *************** function _low_isr *****************
  1076 ;; Defined at:
  1077 ;;		line 67 in file "interrupts.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		None
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1091 ;;      Params:         0       0       0       0
  1092 ;;      Locals:         0       0       0       0
  1093 ;;      Temps:          1       0       0       0
  1094 ;;      Totals:         1       0       0       0
  1095 ;;Total ram usage:        1 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    1
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		Interrupt level 1
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	intcodelo
  1106  000018                     __pintcodelo:
  1107                           	opt callstack 0
  1108  000018                     _low_isr:
  1109                           	opt callstack 24
  1110                           
  1111                           ;incstack = 0
  1112  000018  804A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  1113  00001A  CFE0 F029          	movff	bsr,??_low_isr
  1114  00001E  C029  FFE0         	movff	??_low_isr,bsr
  1115  000022  904A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  1116  000024  0010               	retfie	
  1117  000026                     __end_of_low_isr:
  1118                           	opt callstack 0
  1119                           
  1120 ;; *************** function _high_isr *****************
  1121 ;; Defined at:
  1122 ;;		line 27 in file "interrupts.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		None
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1136 ;;      Params:         0       0       0       0
  1137 ;;      Locals:         0       0       0       0
  1138 ;;      Temps:          0       0       0       0
  1139 ;;      Totals:         0       0       0       0
  1140 ;;Total ram usage:        0 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; This function calls:
  1143 ;;		Nothing
  1144 ;; This function is called by:
  1145 ;;		Interrupt level 2
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	intcode
  1150  000008                     __pintcode:
  1151                           	opt callstack 0
  1152  000008                     _high_isr:
  1153                           	opt callstack 24
  1154                           
  1155                           ;incstack = 0
  1156  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1157  00000A  EF11  F003         	goto	int_func
  1158                           
  1159                           	psect	intcode_body
  1160  000622                     __pintcode_body:
  1161                           	opt callstack 24
  1162  000622                     int_func:
  1163                           	opt callstack 24
  1164  000622  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1165  000624  0011               	retfie		f
  1166  000626                     __end_of_high_isr:
  1167                           	opt callstack 0
  1168                           
  1169                           	psect	rparam
  1170  0000                     
  1171                           	psect	temp
  1172  00004A                     btemp:
  1173                           	opt callstack 0
  1174  00004A                     	ds	1
  1175  0000                     int$flags	set	btemp
  1176  0000                     wtemp8	set	btemp+1
  1177  0000                     ttemp5	set	btemp+1
  1178  0000                     ttemp6	set	btemp+4
  1179  0000                     ttemp7	set	btemp+8
  1180                           tosu	equ	0xFFF
  1181                           tosh	equ	0xFFE
  1182                           tosl	equ	0xFFD
  1183                           stkptr	equ	0xFFC
  1184                           pclatu	equ	0xFFB
  1185                           pclath	equ	0xFFA
  1186                           pcl	equ	0xFF9
  1187                           tblptru	equ	0xFF8
  1188                           tblptrh	equ	0xFF7
  1189                           tblptrl	equ	0xFF6
  1190                           tablat	equ	0xFF5
  1191                           prodh	equ	0xFF4
  1192                           prodl	equ	0xFF3
  1193                           indf0	equ	0xFEF
  1194                           postinc0	equ	0xFEE
  1195                           postdec0	equ	0xFED
  1196                           preinc0	equ	0xFEC
  1197                           plusw0	equ	0xFEB
  1198                           fsr0h	equ	0xFEA
  1199                           fsr0l	equ	0xFE9
  1200                           wreg	equ	0xFE8
  1201                           indf1	equ	0xFE7
  1202                           postinc1	equ	0xFE6
  1203                           postdec1	equ	0xFE5
  1204                           preinc1	equ	0xFE4
  1205                           plusw1	equ	0xFE3
  1206                           fsr1h	equ	0xFE2
  1207                           fsr1l	equ	0xFE1
  1208                           bsr	equ	0xFE0
  1209                           indf2	equ	0xFDF
  1210                           postinc2	equ	0xFDE
  1211                           postdec2	equ	0xFDD
  1212                           preinc2	equ	0xFDC
  1213                           plusw2	equ	0xFDB
  1214                           fsr2h	equ	0xFDA
  1215                           fsr2l	equ	0xFD9
  1216                           status	equ	0xFD8


Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      75
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    S867_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1636
                                             31 COMRAM     4     4      0
                _ConfigureOscillator
                            _InitApp
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2    1635
                                             25 COMRAM     6     4      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    1507
                                             17 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    34      6    1157
                                             11 COMRAM     6     0      6
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     731
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
                         _init_usart
 ---------------------------------------------------------------------------------
 (2) _init_usart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _low_isr                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
     _init_usart
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      4B       1       79.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4B       3        0.0%
DATA                 0      0      4B      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr  1 05:50:04 2019

                          l60 0610                            bsr 000FE0                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                           l921 0504                           l943 0496  
                         l953 04B8                           l947 04A0                           l965 056A  
                         l967 058E                           l979 031C                  __CFG_CPB$OFF 000000  
                         u100 04FC                           u120 0544                           u207 0394  
                         u217 03AE                           u227 03C6                           u237 03DE  
                         u247 03F6                           u167 0334                           u257 040E  
                         u177 034C                  __CFG_CPD$OFF 000000                           u187 0364  
                         u197 037C                           wreg 000FE8                    _TXSTA1bits 000FAC  
                __CFG_IESO$ON 000000                  __CFG_LVP$OFF 000000                          STR_1 0301  
                        _TXIF 007CF4                 __CFG_FCMEN$ON 000000                          _dbuf 0001  
                        _main 0314                          _prec 0025                          _nout 0021  
                        fsr1h 000FE2                          fsr2h 000FDA                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 004A                          start 0026  
                ___param_bank 000000               __end_of_InitApp 0622                         ?_main 0029  
                vfpfcnvrt@fmt 0036                         _TXREG 000FAD                         _TXSTA 000FAC  
         _ConfigureOscillator 0626                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                         _flags 0027                         _fputc 04EC  
                       _width 0023                         _putch 0608               __end_of_low_isr 0026  
              __CFG_BOREN$OFF 000000                         tablat 000FF5                         ttemp5 004B  
                       ttemp6 004E                         ttemp7 0052                         status 000FD8  
                       wtemp8 004B          ?_ConfigureOscillator 0029                __CFG_MCLRE$OFF 000000  
             __initialization 05D0                __CFG_HPOL$HIGH 000000                  __end_of_main 041E  
              __CFG_LPOL$HIGH 000000                        ??_main 0048                 __activetblptr 000001  
                      ?_fputc 002B                        ?_putch 0029                __CFG_WDTEN$OFF 000000  
                      _SPBRG1 000FAF                __CFG_WINEN$OFF 000000                     ??_InitApp 002A  
       ??_ConfigureOscillator 002A                __CFG_SSPMX$RC7 000000                  vfprintf@cfmt 0040  
            __end_of_high_isr 0626                __CFG_STVREN$ON 000000                        clear_0 05D6  
                      _printf 05AA                        fputc@c 002B                  __mediumconst 0000  
                   ??_low_isr 0029                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8              __end_of_vfprintf 05AA                    __accesstop 0060  
     __end_of__initialization 05DC               __CFG_FLTAMX$RC1 000000                 ___rparam_used 000001  
             __CFG_T1OSCMX$ON 000000                __pcstackCOMRAM 0029                 __end_of_fputc 0558  
               __end_of_putch 061A                       ??_fputc 002F                       ??_putch 002A  
             __CFG_WDPS$32768 000000                       ?_printf 0042               __CFG_PWM4MX$RB5 000000  
          __size_of_vfpfcnvrt 00CE                     ?_high_isr 0029               __CFG_PWMPIN$OFF 000000  
                     _InitApp 061A               __CFG_PWRTEN$OFF 000000                       __Hparam 0000  
                     __Lparam 0000                     ?_vfprintf 003A                  __psmallconst 0300  
                     __pcinit 05D0                       __ramtop 0300                    _init_usart 05EE  
                     __ptext0 0314                       __ptext1 05AA                       __ptext2 0558  
                     __ptext3 041E                       __ptext4 04EC                       __ptext5 0608  
                     __ptext6 061A                       __ptext7 05EE                       __ptext8 0626  
             __size_of_printf 0026                       _low_isr 0018                    ??_high_isr 0029  
              __pintcode_body 0622          end_of_initialization 05DC                       fputc@fp 002D  
                     int_func 0622             __end_of_vfpfcnvrt 04EC                       postdec2 000FDD  
                     postinc0 000FEE                       postinc1 000FE6                       postinc2 000FDE  
                  ??_vfprintf 0040                     _PORTBbits 000F81                     _TRISBbits 000F93  
                   _TRISCbits 000F94   __end_of_ConfigureOscillator 0628              __CFG_EXCLKMX$RC3 000000  
                 vfpfcnvrt@ap 0038                   vfpfcnvrt@fp 0034                   _BAUDCONbits 000FAA  
                 ?_init_usart 0029                __end_of_printf 05D0           start_initialization 05D0  
                 vfprintf@fmt 003C                      ??_printf 0044                   __pbssCOMRAM 0001  
           __size_of_high_isr 061E           __size_of_init_usart 001A                      ?_InitApp 0029  
                   __pintcode 0008                   __pintcodelo 0018             __size_of_vfprintf 0052  
                 __smallconst 0300                      ?_low_isr 0029                __size_of_fputc 006C  
              __size_of_putch 0012                     _vfpfcnvrt 041E              __size_of_InitApp 0008  
                    __Hrparam 0000                    vfprintf@ap 003E                      __Lrparam 0000  
                  vfprintf@fp 003A                  __Lsmallconst 0300                    ?_vfpfcnvrt 0034  
                ??_init_usart 002A              __size_of_low_isr 000E                      _high_isr 0008  
               __size_of_main 010A            __end_of_init_usart 0608  __size_of_ConfigureOscillator 0002  
                    int$flags 004A                      _vfprintf 0558                     printf@fmt 0042  
                   putch@byte 002A                      intlevel1 0000                      intlevel2 0000  
                  _RCSTA1bits 000FAB                      printf@ap 0046                   ??_vfpfcnvrt 003A  
