

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Apr 14 21:15:56 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           ; Version 2.05
    61                           ; Generated 20/12/2018 GMT
    62                           ; 
    63                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4431 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     _TMR0	set	4054
    95  0000                     _TXREG	set	4013
    96  0000                     _TXSTA	set	4012
    97  0000                     _RCONbits	set	4048
    98  0000                     _T0CONbits	set	4053
    99  0000                     _SPBRG1	set	4015
   100  0000                     _BAUDCONbits	set	4010
   101  0000                     _RCSTA1bits	set	4011
   102  0000                     _TXSTA1bits	set	4012
   103  0000                     _TRISCbits	set	3988
   104  0000                     _TRISDbits	set	3989
   105  0000                     _PWMCON1	set	3950
   106  0000                     _PWMCON0bits	set	3951
   107  0000                     _PTCON1bits	set	3966
   108  0000                     _PTCON0bits	set	3967
   109  0000                     _LATE	set	3981
   110  0000                     _LATD	set	3980
   111  0000                     _LATB	set	3978
   112  0000                     _LATA	set	3977
   113  0000                     _TRISD	set	3989
   114  0000                     _PORTE	set	3972
   115  0000                     _PORTD	set	3971
   116  0000                     _PORTB	set	3969
   117  0000                     _PORTA	set	3968
   118  0000                     _PORTDbits	set	3971
   119  0000                     _INTCONbits	set	4082
   120  0000                     _PDC3L	set	3955
   121  0000                     _PDC3H	set	3954
   122  0000                     _PDC2L	set	3957
   123  0000                     _PDC2H	set	3956
   124  0000                     _PDC1L	set	3959
   125  0000                     _PDC1H	set	3958
   126  0000                     _PDC0L	set	3961
   127  0000                     _PDC0H	set	3960
   128  0000                     _PTPERL	set	3963
   129  0000                     _PTPERH	set	3962
   130  0000                     _PTCON1	set	3966
   131  0000                     _PTCON0	set	3967
   132  0000                     _PORTBbits	set	3969
   133  0000                     _PWMCON0	set	3951
   134  0000                     _TRISB	set	3987
   135  0000                     _TXIF	set	31988
   136                           
   137                           	psect	smallconst
   138  000300                     __psmallconst:
   139                           	opt callstack 0
   140  000300  00                 	db	0
   141  000301                     STR_2:
   142  000301  64                 	db	100	;'d'
   143  000302  75                 	db	117	;'u'
   144  000303  74                 	db	116	;'t'
   145  000304  79                 	db	121	;'y'
   146  000305  63                 	db	99	;'c'
   147  000306  79                 	db	121	;'y'
   148  000307  63                 	db	99	;'c'
   149  000308  6C                 	db	108	;'l'
   150  000309  65                 	db	101	;'e'
   151  00030A  50                 	db	80	;'P'
   152  00030B  72                 	db	114	;'r'
   153  00030C  65                 	db	101	;'e'
   154  00030D  63                 	db	99	;'c'
   155  00030E  65                 	db	101	;'e'
   156  00030F  6E                 	db	110	;'n'
   157  000310  74                 	db	116	;'t'
   158  000311  20                 	db	32
   159  000312  3D                 	db	61	;'='
   160  000313  20                 	db	32
   161  000314  25                 	db	37
   162  000315  6C                 	db	108	;'l'
   163  000316  69                 	db	105	;'i'
   164  000317  20                 	db	32
   165  000318  0D                 	db	13
   166  000319  0A                 	db	10
   167  00031A  00                 	db	0
   168  00031B                     STR_3:
   169  00031B  64                 	db	100	;'d'
   170  00031C  75                 	db	117	;'u'
   171  00031D  74                 	db	116	;'t'
   172  00031E  79                 	db	121	;'y'
   173  00031F  63                 	db	99	;'c'
   174  000320  79                 	db	121	;'y'
   175  000321  6C                 	db	108	;'l'
   176  000322  65                 	db	101	;'e'
   177  000323  20                 	db	32
   178  000324  3D                 	db	61	;'='
   179  000325  20                 	db	32
   180  000326  25                 	db	37
   181  000327  64                 	db	100	;'d'
   182  000328  20                 	db	32
   183  000329  0D                 	db	13
   184  00032A  0A                 	db	10
   185  00032B  00                 	db	0
   186  00032C                     STR_4:
   187  00032C  50                 	db	80	;'P'
   188  00032D  44                 	db	68	;'D'
   189  00032E  43                 	db	67	;'C'
   190  00032F  4F                 	db	79	;'O'
   191  000330  48                 	db	72	;'H'
   192  000331  3A                 	db	58	;':'
   193  000332  20                 	db	32
   194  000333  25                 	db	37
   195  000334  64                 	db	100	;'d'
   196  000335  0D                 	db	13
   197  000336  0A                 	db	10
   198  000337  00                 	db	0
   199  000338                     STR_5:
   200  000338  50                 	db	80	;'P'
   201  000339  44                 	db	68	;'D'
   202  00033A  43                 	db	67	;'C'
   203  00033B  4F                 	db	79	;'O'
   204  00033C  4C                 	db	76	;'L'
   205  00033D  3A                 	db	58	;':'
   206  00033E  20                 	db	32
   207  00033F  25                 	db	37
   208  000340  64                 	db	100	;'d'
   209  000341  0D                 	db	13
   210  000342  0A                 	db	10
   211  000343  00                 	db	0
   212  000344                     STR_1:
   213  000344  50                 	db	80	;'P'
   214  000345  57                 	db	87	;'W'
   215  000346  4D                 	db	77	;'M'
   216  000347  20                 	db	32
   217  000348  45                 	db	69	;'E'
   218  000349  72                 	db	114	;'r'
   219  00034A  72                 	db	114	;'r'
   220  00034B  6F                 	db	111	;'o'
   221  00034C  72                 	db	114	;'r'
   222  00034D  00                 	db	0
   223  00034E                     STR_6:
   224  00034E  74                 	db	116	;'t'
   225  00034F  3A                 	db	58	;':'
   226  000350  20                 	db	32
   227  000351  25                 	db	37
   228  000352  64                 	db	100	;'d'
   229  000353  0D                 	db	13
   230  000354  0A                 	db	10
   231  000355  00                 	db	0
   232  000356                     STR_7:
   233  000356  6C                 	db	108	;'l'
   234  000357  64                 	db	100	;'d'
   235  000358  00                 	db	0
   236  000359                     STR_11:
   237  000359  6C                 	db	108	;'l'
   238  00035A  69                 	db	105	;'i'
   239  00035B  00                 	db	0
   240  0000                     
   241                           ; #config settings
   242  00035C  00                 	db	0	; dummy byte at the end
   243  0000                     
   244                           	psect	cinit
   245  001FA0                     __pcinit:
   246                           	opt callstack 0
   247  001FA0                     start_initialization:
   248                           	opt callstack 0
   249  001FA0                     __initialization:
   250                           	opt callstack 0
   251                           
   252                           ; Clear objects allocated to BANK1 (36 bytes)
   253  001FA0  EE01  F02C         	lfsr	0,__pbssBANK1
   254  001FA4  0E24               	movlw	36
   255  001FA6                     clear_0:
   256  001FA6  6AEE               	clrf	postinc0,c
   257  001FA8  06E8               	decf	wreg,f,c
   258  001FAA  E1FD               	bnz	clear_0
   259                           
   260                           ; Clear objects allocated to BANK0 (8 bytes)
   261  001FAC  EE00  F0D4         	lfsr	0,__pbssBANK0
   262  001FB0  0E08               	movlw	8
   263  001FB2                     clear_1:
   264  001FB2  6AEE               	clrf	postinc0,c
   265  001FB4  06E8               	decf	wreg,f,c
   266  001FB6  E1FD               	bnz	clear_1
   267  001FB8                     end_of_initialization:
   268                           	opt callstack 0
   269  001FB8                     __end_of__initialization:
   270                           	opt callstack 0
   271  001FB8  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   272  001FBA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   273  001FBC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   274  001FBE  6EF8               	movwf	tblptru,c
   275  001FC0  0E03               	movlw	high __Lsmallconst
   276  001FC2  6EF7               	movwf	tblptrh,c
   277  001FC4  0100               	movlb	0
   278  001FC6  EF8E  F006         	goto	_main	;jump to C main() function
   279                           
   280                           	psect	bssBANK0
   281  0000D4                     __pbssBANK0:
   282                           	opt callstack 0
   283  0000D4                     _width:
   284                           	opt callstack 0
   285  0000D4                     	ds	2
   286  0000D6                     _prec:
   287                           	opt callstack 0
   288  0000D6                     	ds	2
   289  0000D8                     _flags:
   290                           	opt callstack 0
   291  0000D8                     	ds	2
   292  0000DA                     _timer0_var:
   293                           	opt callstack 0
   294  0000DA                     	ds	2
   295                           
   296                           	psect	bssBANK1
   297  00012C                     __pbssBANK1:
   298                           	opt callstack 0
   299  00012C                     _nout:
   300                           	opt callstack 0
   301  00012C                     	ds	2
   302  00012E                     _PWMPeriod:
   303                           	opt callstack 0
   304  00012E                     	ds	2
   305  000130                     _dbuf:
   306                           	opt callstack 0
   307  000130                     	ds	32
   308                           
   309                           	psect	cstackBANK1
   310  000100                     __pcstackBANK1:
   311                           	opt callstack 0
   312  000100                     ??_vfpfcnvrt:
   313                           
   314                           ; 1 bytes @ 0x0
   315  000100                     	ds	14
   316  00010E                     ?_vfprintf:
   317                           	opt callstack 0
   318  00010E                     vfprintf@fp:
   319                           	opt callstack 0
   320                           
   321                           ; 2 bytes @ 0xE
   322  00010E                     	ds	2
   323  000110                     vfprintf@fmt:
   324                           	opt callstack 0
   325                           
   326                           ; 2 bytes @ 0x10
   327  000110                     	ds	2
   328  000112                     vfprintf@ap:
   329                           	opt callstack 0
   330                           
   331                           ; 2 bytes @ 0x12
   332  000112                     	ds	2
   333  000114                     ?_printf:
   334                           	opt callstack 0
   335  000114                     printf@fmt:
   336                           	opt callstack 0
   337                           
   338                           ; 2 bytes @ 0x14
   339  000114                     	ds	4
   340  000118                     printf@ap:
   341                           	opt callstack 0
   342                           
   343                           ; 2 bytes @ 0x18
   344  000118                     	ds	2
   345  00011A                     ??_PWMError:
   346                           
   347                           ; 1 bytes @ 0x1A
   348  00011A                     	ds	2
   349  00011C                     configPWMFreq@freq:
   350                           	opt callstack 0
   351                           
   352                           ; 4 bytes @ 0x1C
   353  00011C                     	ds	4
   354  000120                     ??_configPWMFreq:
   355                           
   356                           ; 1 bytes @ 0x20
   357  000120                     	ds	2
   358  000122                     configPWMFreq@scale:
   359                           	opt callstack 0
   360                           
   361                           ; 2 bytes @ 0x22
   362  000122                     	ds	2
   363  000124                     configPWMFreq@timeBasePreScale:
   364                           	opt callstack 0
   365                           
   366                           ; 2 bytes @ 0x24
   367  000124                     	ds	2
   368  000126                     configPWMFreq@tempLong:
   369                           	opt callstack 0
   370                           
   371                           ; 4 bytes @ 0x26
   372  000126                     	ds	4
   373  00012A                     ??_main:
   374                           
   375                           ; 1 bytes @ 0x2A
   376  00012A                     	ds	2
   377                           
   378                           	psect	cstackBANK0
   379  000060                     __pcstackBANK0:
   380                           	opt callstack 0
   381  000060                     ?i2_vfprintf:
   382                           	opt callstack 0
   383  000060                     i2vfprintf@fp:
   384                           	opt callstack 0
   385                           
   386                           ; 2 bytes @ 0x0
   387  000060                     	ds	2
   388  000062                     i2vfprintf@fmt:
   389                           	opt callstack 0
   390                           
   391                           ; 2 bytes @ 0x2
   392  000062                     	ds	2
   393  000064                     i2vfprintf@ap:
   394                           	opt callstack 0
   395                           
   396                           ; 2 bytes @ 0x4
   397  000064                     	ds	2
   398  000066                     ?i2_printf:
   399                           	opt callstack 0
   400  000066                     i2printf@fmt:
   401                           	opt callstack 0
   402                           
   403                           ; 2 bytes @ 0x6
   404  000066                     	ds	6
   405  00006C                     i2printf@ret:
   406                           	opt callstack 0
   407                           
   408                           ; 2 bytes @ 0xC
   409  00006C                     	ds	2
   410  00006E                     i2printf@ap:
   411                           	opt callstack 0
   412                           
   413                           ; 2 bytes @ 0xE
   414  00006E                     	ds	2
   415  000070                     setPDC0@dutyCyclePercent:
   416                           	opt callstack 0
   417                           
   418                           ; 4 bytes @ 0x10
   419  000070                     	ds	4
   420  000074                     ??_setPDC0:
   421                           
   422                           ; 1 bytes @ 0x14
   423  000074                     	ds	2
   424  000076                     setPDC0@dutyCycle:
   425                           	opt callstack 0
   426                           
   427                           ; 2 bytes @ 0x16
   428  000076                     	ds	2
   429  000078                     setPDC0@dutyCycleQC:
   430                           	opt callstack 0
   431                           
   432                           ; 2 bytes @ 0x18
   433  000078                     	ds	2
   434  00007A                     ??_high_isr:
   435                           
   436                           ; 1 bytes @ 0x1A
   437  00007A                     	ds	9
   438  000083                     ??_low_isr:
   439                           
   440                           ; 1 bytes @ 0x23
   441  000083                     	ds	1
   442  000084                     ?_strlen:
   443                           	opt callstack 0
   444  000084                     ?_strncmp:
   445                           	opt callstack 0
   446  000084                     ?___awdiv:
   447                           	opt callstack 0
   448  000084                     ?___lldiv:
   449                           	opt callstack 0
   450  000084                     ?___aldiv:
   451                           	opt callstack 0
   452  000084                     ?___aodiv:
   453                           	opt callstack 0
   454  000084                     ?___aomod:
   455                           	opt callstack 0
   456  000084                     enablePWM@PWM_BITMASK:
   457                           	opt callstack 0
   458  000084                     putch@byte:
   459                           	opt callstack 0
   460  000084                     ___awdiv@dividend:
   461                           	opt callstack 0
   462  000084                     strlen@s:
   463                           	opt callstack 0
   464  000084                     strncmp@_l:
   465                           	opt callstack 0
   466  000084                     ___lldiv@dividend:
   467                           	opt callstack 0
   468  000084                     ___aldiv@dividend:
   469                           	opt callstack 0
   470  000084                     ___aodiv@dividend:
   471                           	opt callstack 0
   472  000084                     ___aomod@dividend:
   473                           	opt callstack 0
   474                           
   475                           ; 8 bytes @ 0x24
   476  000084                     	ds	1
   477  000085                     fputc@c:
   478                           	opt callstack 0
   479                           
   480                           ; 2 bytes @ 0x25
   481  000085                     	ds	1
   482  000086                     ___awdiv@divisor:
   483                           	opt callstack 0
   484  000086                     strlen@a:
   485                           	opt callstack 0
   486  000086                     strncmp@_r:
   487                           	opt callstack 0
   488                           
   489                           ; 2 bytes @ 0x26
   490  000086                     	ds	1
   491  000087                     fputc@fp:
   492                           	opt callstack 0
   493                           
   494                           ; 2 bytes @ 0x27
   495  000087                     	ds	1
   496  000088                     ___awdiv@counter:
   497                           	opt callstack 0
   498  000088                     strncmp@n:
   499                           	opt callstack 0
   500  000088                     ___lldiv@divisor:
   501                           	opt callstack 0
   502  000088                     ___aldiv@divisor:
   503                           	opt callstack 0
   504                           
   505                           ; 4 bytes @ 0x28
   506  000088                     	ds	1
   507  000089                     ??_fputc:
   508  000089                     ___awdiv@sign:
   509                           	opt callstack 0
   510                           
   511                           ; 1 bytes @ 0x29
   512  000089                     	ds	1
   513  00008A                     ??_strncmp:
   514  00008A                     ___awdiv@quotient:
   515                           	opt callstack 0
   516                           
   517                           ; 2 bytes @ 0x2A
   518  00008A                     	ds	1
   519  00008B                     strncmp@l:
   520                           	opt callstack 0
   521                           
   522                           ; 2 bytes @ 0x2B
   523  00008B                     	ds	1
   524  00008C                     ___aldiv@counter:
   525                           	opt callstack 0
   526  00008C                     ___lldiv@quotient:
   527                           	opt callstack 0
   528  00008C                     ___aodiv@divisor:
   529                           	opt callstack 0
   530  00008C                     ___aomod@divisor:
   531                           	opt callstack 0
   532                           
   533                           ; 8 bytes @ 0x2C
   534  00008C                     	ds	1
   535  00008D                     ___aldiv@sign:
   536                           	opt callstack 0
   537  00008D                     strncmp@r:
   538                           	opt callstack 0
   539                           
   540                           ; 2 bytes @ 0x2D
   541  00008D                     	ds	1
   542  00008E                     fputs@s:
   543                           	opt callstack 0
   544  00008E                     ___aldiv@quotient:
   545                           	opt callstack 0
   546                           
   547                           ; 4 bytes @ 0x2E
   548  00008E                     	ds	2
   549  000090                     ___lldiv@counter:
   550                           	opt callstack 0
   551  000090                     fputs@fp:
   552                           	opt callstack 0
   553                           
   554                           ; 2 bytes @ 0x30
   555  000090                     	ds	2
   556  000092                     fputs@c:
   557                           	opt callstack 0
   558                           
   559                           ; 1 bytes @ 0x32
   560  000092                     	ds	1
   561  000093                     fputs@i:
   562                           	opt callstack 0
   563                           
   564                           ; 2 bytes @ 0x33
   565  000093                     	ds	1
   566  000094                     ___aodiv@counter:
   567                           	opt callstack 0
   568  000094                     ___aomod@counter:
   569                           	opt callstack 0
   570                           
   571                           ; 1 bytes @ 0x34
   572  000094                     	ds	1
   573  000095                     ?_pad:
   574                           	opt callstack 0
   575  000095                     ___aodiv@sign:
   576                           	opt callstack 0
   577  000095                     ___aomod@sign:
   578                           	opt callstack 0
   579  000095                     pad@fp:
   580                           	opt callstack 0
   581                           
   582                           ; 2 bytes @ 0x35
   583  000095                     	ds	1
   584  000096                     ?_abs:
   585                           	opt callstack 0
   586  000096                     abs@a:
   587                           	opt callstack 0
   588  000096                     ___aodiv@quotient:
   589                           	opt callstack 0
   590                           
   591                           ; 8 bytes @ 0x36
   592  000096                     	ds	1
   593  000097                     pad@buf:
   594                           	opt callstack 0
   595                           
   596                           ; 2 bytes @ 0x37
   597  000097                     	ds	1
   598  000098                     ??_abs:
   599                           
   600                           ; 1 bytes @ 0x38
   601  000098                     	ds	1
   602  000099                     pad@p:
   603                           	opt callstack 0
   604                           
   605                           ; 2 bytes @ 0x39
   606  000099                     	ds	2
   607  00009B                     ??_pad:
   608                           
   609                           ; 1 bytes @ 0x3B
   610  00009B                     	ds	1
   611  00009C                     pad@i:
   612                           	opt callstack 0
   613                           
   614                           ; 2 bytes @ 0x3C
   615  00009C                     	ds	2
   616  00009E                     pad@w:
   617                           	opt callstack 0
   618                           
   619                           ; 2 bytes @ 0x3E
   620  00009E                     	ds	2
   621  0000A0                     ?_dtoa:
   622                           	opt callstack 0
   623  0000A0                     dtoa@fp:
   624                           	opt callstack 0
   625                           
   626                           ; 2 bytes @ 0x40
   627  0000A0                     	ds	2
   628  0000A2                     dtoa@d:
   629                           	opt callstack 0
   630                           
   631                           ; 8 bytes @ 0x42
   632  0000A2                     	ds	8
   633  0000AA                     ??_dtoa:
   634                           
   635                           ; 1 bytes @ 0x4A
   636  0000AA                     	ds	8
   637  0000B2                     _dtoa$870:
   638                           	opt callstack 0
   639                           
   640                           ; 2 bytes @ 0x52
   641  0000B2                     	ds	2
   642  0000B4                     dtoa@p:
   643                           	opt callstack 0
   644                           
   645                           ; 2 bytes @ 0x54
   646  0000B4                     	ds	2
   647  0000B6                     dtoa@w:
   648                           	opt callstack 0
   649                           
   650                           ; 2 bytes @ 0x56
   651  0000B6                     	ds	2
   652  0000B8                     dtoa@s:
   653                           	opt callstack 0
   654                           
   655                           ; 2 bytes @ 0x58
   656  0000B8                     	ds	2
   657  0000BA                     dtoa@n:
   658                           	opt callstack 0
   659                           
   660                           ; 8 bytes @ 0x5A
   661  0000BA                     	ds	8
   662  0000C2                     dtoa@i:
   663                           	opt callstack 0
   664                           
   665                           ; 2 bytes @ 0x62
   666  0000C2                     	ds	2
   667  0000C4                     ?_vfpfcnvrt:
   668                           	opt callstack 0
   669  0000C4                     vfpfcnvrt@fp:
   670                           	opt callstack 0
   671                           
   672                           ; 2 bytes @ 0x64
   673  0000C4                     	ds	2
   674  0000C6                     vfpfcnvrt@fmt:
   675                           	opt callstack 0
   676                           
   677                           ; 2 bytes @ 0x66
   678  0000C6                     	ds	2
   679  0000C8                     vfpfcnvrt@ap:
   680                           	opt callstack 0
   681                           
   682                           ; 2 bytes @ 0x68
   683  0000C8                     	ds	2
   684  0000CA                     vfpfcnvrt@ll:
   685                           	opt callstack 0
   686                           
   687                           ; 8 bytes @ 0x6A
   688  0000CA                     	ds	8
   689  0000D2                     vfprintf@cfmt:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0x72
   693  0000D2                     	ds	2
   694  0000D4                     
   695                           ; 1 bytes @ 0x74
   696                           
   697                           	psect	cstackCOMRAM
   698  000001                     __pcstackCOMRAM:
   699                           	opt callstack 0
   700  000001                     ?i2___awdiv:
   701                           	opt callstack 0
   702  000001                     ?i2_strlen:
   703                           	opt callstack 0
   704  000001                     ?i2_strncmp:
   705                           	opt callstack 0
   706  000001                     ?___lmul:
   707                           	opt callstack 0
   708  000001                     ?i2___aodiv:
   709                           	opt callstack 0
   710  000001                     ?i2___aomod:
   711                           	opt callstack 0
   712  000001                     i2putch@byte:
   713                           	opt callstack 0
   714  000001                     i2___awdiv@dividend:
   715                           	opt callstack 0
   716  000001                     i2strlen@s:
   717                           	opt callstack 0
   718  000001                     i2strncmp@_l:
   719                           	opt callstack 0
   720  000001                     ___lmul@multiplier:
   721                           	opt callstack 0
   722  000001                     i2___aodiv@dividend:
   723                           	opt callstack 0
   724  000001                     i2___aomod@dividend:
   725                           	opt callstack 0
   726                           
   727                           ; 8 bytes @ 0x0
   728  000001                     	ds	1
   729  000002                     i2fputc@c:
   730                           	opt callstack 0
   731                           
   732                           ; 2 bytes @ 0x1
   733  000002                     	ds	1
   734  000003                     i2___awdiv@divisor:
   735                           	opt callstack 0
   736  000003                     i2strlen@a:
   737                           	opt callstack 0
   738  000003                     i2strncmp@_r:
   739                           	opt callstack 0
   740                           
   741                           ; 2 bytes @ 0x2
   742  000003                     	ds	1
   743  000004                     i2fputc@fp:
   744                           	opt callstack 0
   745                           
   746                           ; 2 bytes @ 0x3
   747  000004                     	ds	1
   748  000005                     i2___awdiv@counter:
   749                           	opt callstack 0
   750  000005                     i2strncmp@n:
   751                           	opt callstack 0
   752  000005                     ___lmul@multiplicand:
   753                           	opt callstack 0
   754                           
   755                           ; 4 bytes @ 0x4
   756  000005                     	ds	1
   757  000006                     ??i2_fputc:
   758  000006                     i2___awdiv@sign:
   759                           	opt callstack 0
   760                           
   761                           ; 1 bytes @ 0x5
   762  000006                     	ds	1
   763  000007                     ??i2_strncmp:
   764  000007                     i2___awdiv@quotient:
   765                           	opt callstack 0
   766                           
   767                           ; 2 bytes @ 0x6
   768  000007                     	ds	1
   769  000008                     i2strncmp@l:
   770                           	opt callstack 0
   771                           
   772                           ; 2 bytes @ 0x7
   773  000008                     	ds	1
   774  000009                     ___lmul@product:
   775                           	opt callstack 0
   776  000009                     i2___aodiv@divisor:
   777                           	opt callstack 0
   778  000009                     i2___aomod@divisor:
   779                           	opt callstack 0
   780                           
   781                           ; 8 bytes @ 0x8
   782  000009                     	ds	1
   783  00000A                     i2strncmp@r:
   784                           	opt callstack 0
   785                           
   786                           ; 2 bytes @ 0x9
   787  00000A                     	ds	1
   788  00000B                     i2fputs@s:
   789                           	opt callstack 0
   790                           
   791                           ; 2 bytes @ 0xA
   792  00000B                     	ds	2
   793  00000D                     ?i2___aldiv:
   794                           	opt callstack 0
   795  00000D                     i2fputs@fp:
   796                           	opt callstack 0
   797  00000D                     i2___aldiv@dividend:
   798                           	opt callstack 0
   799                           
   800                           ; 4 bytes @ 0xC
   801  00000D                     	ds	2
   802  00000F                     i2fputs@c:
   803                           	opt callstack 0
   804                           
   805                           ; 1 bytes @ 0xE
   806  00000F                     	ds	1
   807  000010                     i2fputs@i:
   808                           	opt callstack 0
   809                           
   810                           ; 2 bytes @ 0xF
   811  000010                     	ds	1
   812  000011                     i2___aodiv@counter:
   813                           	opt callstack 0
   814  000011                     i2___aomod@counter:
   815                           	opt callstack 0
   816  000011                     i2___aldiv@divisor:
   817                           	opt callstack 0
   818                           
   819                           ; 4 bytes @ 0x10
   820  000011                     	ds	1
   821  000012                     ?i2_pad:
   822                           	opt callstack 0
   823  000012                     i2___aodiv@sign:
   824                           	opt callstack 0
   825  000012                     i2___aomod@sign:
   826                           	opt callstack 0
   827  000012                     i2pad@fp:
   828                           	opt callstack 0
   829                           
   830                           ; 2 bytes @ 0x11
   831  000012                     	ds	1
   832  000013                     ?i2_abs:
   833                           	opt callstack 0
   834  000013                     i2abs@a:
   835                           	opt callstack 0
   836  000013                     i2___aodiv@quotient:
   837                           	opt callstack 0
   838                           
   839                           ; 8 bytes @ 0x12
   840  000013                     	ds	1
   841  000014                     i2pad@buf:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x13
   845  000014                     	ds	1
   846  000015                     ??i2_abs:
   847  000015                     i2___aldiv@counter:
   848                           	opt callstack 0
   849                           
   850                           ; 1 bytes @ 0x14
   851  000015                     	ds	1
   852  000016                     i2___aldiv@sign:
   853                           	opt callstack 0
   854  000016                     i2pad@p:
   855                           	opt callstack 0
   856                           
   857                           ; 2 bytes @ 0x15
   858  000016                     	ds	1
   859  000017                     i2___aldiv@quotient:
   860                           	opt callstack 0
   861                           
   862                           ; 4 bytes @ 0x16
   863  000017                     	ds	1
   864  000018                     ??i2_pad:
   865                           
   866                           ; 1 bytes @ 0x17
   867  000018                     	ds	1
   868  000019                     i2pad@i:
   869                           	opt callstack 0
   870                           
   871                           ; 2 bytes @ 0x18
   872  000019                     	ds	2
   873  00001B                     i2pad@w:
   874                           	opt callstack 0
   875                           
   876                           ; 2 bytes @ 0x1A
   877  00001B                     	ds	2
   878  00001D                     ?i2_dtoa:
   879                           	opt callstack 0
   880  00001D                     i2dtoa@fp:
   881                           	opt callstack 0
   882                           
   883                           ; 2 bytes @ 0x1C
   884  00001D                     	ds	2
   885  00001F                     i2dtoa@d:
   886                           	opt callstack 0
   887                           
   888                           ; 8 bytes @ 0x1E
   889  00001F                     	ds	8
   890  000027                     ??i2_dtoa:
   891                           
   892                           ; 1 bytes @ 0x26
   893  000027                     	ds	8
   894  00002F                     i2_dtoa$870:
   895                           	opt callstack 0
   896                           
   897                           ; 2 bytes @ 0x2E
   898  00002F                     	ds	2
   899  000031                     i2dtoa@p:
   900                           	opt callstack 0
   901                           
   902                           ; 2 bytes @ 0x30
   903  000031                     	ds	2
   904  000033                     i2dtoa@w:
   905                           	opt callstack 0
   906                           
   907                           ; 2 bytes @ 0x32
   908  000033                     	ds	2
   909  000035                     i2dtoa@s:
   910                           	opt callstack 0
   911                           
   912                           ; 2 bytes @ 0x34
   913  000035                     	ds	2
   914  000037                     i2dtoa@n:
   915                           	opt callstack 0
   916                           
   917                           ; 8 bytes @ 0x36
   918  000037                     	ds	8
   919  00003F                     i2dtoa@i:
   920                           	opt callstack 0
   921                           
   922                           ; 2 bytes @ 0x3E
   923  00003F                     	ds	2
   924  000041                     ?i2_vfpfcnvrt:
   925                           	opt callstack 0
   926  000041                     i2vfpfcnvrt@fp:
   927                           	opt callstack 0
   928                           
   929                           ; 2 bytes @ 0x40
   930  000041                     	ds	2
   931  000043                     i2vfpfcnvrt@fmt:
   932                           	opt callstack 0
   933                           
   934                           ; 2 bytes @ 0x42
   935  000043                     	ds	2
   936  000045                     i2vfpfcnvrt@ap:
   937                           	opt callstack 0
   938                           
   939                           ; 2 bytes @ 0x44
   940  000045                     	ds	2
   941  000047                     ??i2_vfpfcnvrt:
   942                           
   943                           ; 1 bytes @ 0x46
   944  000047                     	ds	14
   945  000055                     i2vfpfcnvrt@ll:
   946                           	opt callstack 0
   947                           
   948                           ; 8 bytes @ 0x54
   949  000055                     	ds	8
   950  00005D                     i2vfprintf@cfmt:
   951                           	opt callstack 0
   952                           
   953                           ; 2 bytes @ 0x5C
   954  00005D                     	ds	2
   955  00005F                     
   956                           ; 1 bytes @ 0x5E
   957 ;;
   958 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   959 ;;
   960 ;; *************** function _main *****************
   961 ;; Defined at:
   962 ;;		line 37 in file "main.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;		None
   965 ;; Auto vars:     Size  Location     Type
   966 ;;  val             2    0        short 
   967 ;;  x               1    0        unsigned char 
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      void 
   970 ;; Registers used:
   971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   977 ;;      Params:         0       0       0       0
   978 ;;      Locals:         0       0       2       0
   979 ;;      Temps:          0       0       2       0
   980 ;;      Totals:         0       0       4       0
   981 ;;Total ram usage:        4 bytes
   982 ;; Hardware stack levels required when called:   21
   983 ;; This function calls:
   984 ;;		_ConfigureOscillator
   985 ;;		_InitApp
   986 ;;		_configPWMFreq
   987 ;;		_enablePWM
   988 ;; This function is called by:
   989 ;;		Startup code after reset
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text0
   994  000D1C                     __ptext0:
   995                           	opt callstack 0
   996  000D1C                     _main:
   997                           	opt callstack 10
   998                           
   999                           ;main.c: 40:     ConfigureOscillator();
  1000                           
  1001                           ;incstack = 0
  1002  000D1C  EC4D  F010         	call	_ConfigureOscillator	;wreg free
  1003                           
  1004                           ;main.c: 43:     InitApp();
  1005  000D20  EC41  F010         	call	_InitApp	;wreg free
  1006                           
  1007                           ;main.c: 46:     enablePWM(0b00101111 & 0b01111110);
  1008  000D24  0E2E               	movlw	46
  1009  000D26  EC48  F010         	call	_enablePWM
  1010                           
  1011                           ;main.c: 47:     configPWMFreq(10e3);
  1012  000D2A  0E10               	movlw	16
  1013  000D2C  0101               	movlb	1	; () banked
  1014  000D2E  6F1C               	movwf	configPWMFreq@freq& (0+255),b
  1015  000D30  0E27               	movlw	39
  1016  000D32  6F1D               	movwf	(configPWMFreq@freq+1)& (0+255),b
  1017  000D34  0E00               	movlw	0
  1018  000D36  6F1E               	movwf	(configPWMFreq@freq+2)& (0+255),b
  1019  000D38  0E00               	movlw	0
  1020  000D3A  6F1F               	movwf	(configPWMFreq@freq+3)& (0+255),b
  1021  000D3C  EC41  F007         	call	_configPWMFreq	;wreg free
  1022  000D40                     
  1023                           ;main.c: 56:     {;main.c: 59:         _delaywdt((unsigned long)((100)*(20000000L/4000.0
      +                          )));
  1024  000D40  0E02               	movlw	2
  1025  000D42  0101               	movlb	1	; () banked
  1026  000D44  6F2B               	movwf	(??_main+1)& (0+255),b
  1027  000D46  0EE8               	movlw	232
  1028  000D48  6F2A               	movwf	??_main& (0+255),b
  1029  000D4A  0E51               	movlw	81
  1030  000D4C                     u3447:
  1031  000D4C  0004               	clrwdt	
  1032  000D4E  2EE8               	decfsz	wreg,f,c
  1033  000D50  D7FD               	bra	u3447
  1034  000D52  2F2A               	decfsz	??_main& (0+255),f,b
  1035  000D54  D7FB               	bra	u3447
  1036  000D56  2F2B               	decfsz	(??_main+1)& (0+255),f,b
  1037  000D58  D7F9               	bra	u3447
  1038  000D5A  0004               	clrwdt	
  1039  000D5C  F000               	nop	
  1040  000D5E  0004               	clrwdt	
  1041                           
  1042                           ;main.c: 60:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
  1043  000D60  0E02               	movlw	2
  1044  000D62  0101               	movlb	1	; () banked
  1045  000D64  6F2B               	movwf	(??_main+1)& (0+255),b
  1046  000D66  0EE8               	movlw	232
  1047  000D68  6F2A               	movwf	??_main& (0+255),b
  1048  000D6A  0E51               	movlw	81
  1049  000D6C                     u3457:
  1050  000D6C  0004               	clrwdt	
  1051  000D6E  2EE8               	decfsz	wreg,f,c
  1052  000D70  D7FD               	bra	u3457
  1053  000D72  2F2A               	decfsz	??_main& (0+255),f,b
  1054  000D74  D7FB               	bra	u3457
  1055  000D76  2F2B               	decfsz	(??_main+1)& (0+255),f,b
  1056  000D78  D7F9               	bra	u3457
  1057  000D7A  0004               	clrwdt	
  1058  000D7C  F000               	nop	
  1059  000D7E  0004               	clrwdt	
  1060                           
  1061                           ;main.c: 61:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
  1062  000D80  0E02               	movlw	2
  1063  000D82  0101               	movlb	1	; () banked
  1064  000D84  6F2B               	movwf	(??_main+1)& (0+255),b
  1065  000D86  0EE8               	movlw	232
  1066  000D88  6F2A               	movwf	??_main& (0+255),b
  1067  000D8A  0E51               	movlw	81
  1068  000D8C                     u3467:
  1069  000D8C  0004               	clrwdt	
  1070  000D8E  2EE8               	decfsz	wreg,f,c
  1071  000D90  D7FD               	bra	u3467
  1072  000D92  2F2A               	decfsz	??_main& (0+255),f,b
  1073  000D94  D7FB               	bra	u3467
  1074  000D96  2F2B               	decfsz	(??_main+1)& (0+255),f,b
  1075  000D98  D7F9               	bra	u3467
  1076  000D9A  0004               	clrwdt	
  1077  000D9C  F000               	nop	
  1078  000D9E  0004               	clrwdt	
  1079                           
  1080                           ;main.c: 62:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
  1081  000DA0  0E02               	movlw	2
  1082  000DA2  0101               	movlb	1	; () banked
  1083  000DA4  6F2B               	movwf	(??_main+1)& (0+255),b
  1084  000DA6  0EE8               	movlw	232
  1085  000DA8  6F2A               	movwf	??_main& (0+255),b
  1086  000DAA  0E51               	movlw	81
  1087  000DAC                     u3477:
  1088  000DAC  0004               	clrwdt	
  1089  000DAE  2EE8               	decfsz	wreg,f,c
  1090  000DB0  D7FD               	bra	u3477
  1091  000DB2  2F2A               	decfsz	??_main& (0+255),f,b
  1092  000DB4  D7FB               	bra	u3477
  1093  000DB6  2F2B               	decfsz	(??_main+1)& (0+255),f,b
  1094  000DB8  D7F9               	bra	u3477
  1095  000DBA  0004               	clrwdt	
  1096  000DBC  F000               	nop	
  1097  000DBE  0004               	clrwdt	
  1098                           
  1099                           ;main.c: 63:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
  1100  000DC0  0E02               	movlw	2
  1101  000DC2  0101               	movlb	1	; () banked
  1102  000DC4  6F2B               	movwf	(??_main+1)& (0+255),b
  1103  000DC6  0EE8               	movlw	232
  1104  000DC8  6F2A               	movwf	??_main& (0+255),b
  1105  000DCA  0E51               	movlw	81
  1106  000DCC                     u3487:
  1107  000DCC  0004               	clrwdt	
  1108  000DCE  2EE8               	decfsz	wreg,f,c
  1109  000DD0  D7FD               	bra	u3487
  1110  000DD2  2F2A               	decfsz	??_main& (0+255),f,b
  1111  000DD4  D7FB               	bra	u3487
  1112  000DD6  2F2B               	decfsz	(??_main+1)& (0+255),f,b
  1113  000DD8  D7F9               	bra	u3487
  1114  000DDA  0004               	clrwdt	
  1115  000DDC  F000               	nop	
  1116  000DDE  0004               	clrwdt	
  1117                           
  1118                           ;main.c: 65:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
  1119  000DE0  0E02               	movlw	2
  1120  000DE2  0101               	movlb	1	; () banked
  1121  000DE4  6F2B               	movwf	(??_main+1)& (0+255),b
  1122  000DE6  0EE8               	movlw	232
  1123  000DE8  6F2A               	movwf	??_main& (0+255),b
  1124  000DEA  0E51               	movlw	81
  1125  000DEC                     u3497:
  1126  000DEC  0004               	clrwdt	
  1127  000DEE  2EE8               	decfsz	wreg,f,c
  1128  000DF0  D7FD               	bra	u3497
  1129  000DF2  2F2A               	decfsz	??_main& (0+255),f,b
  1130  000DF4  D7FB               	bra	u3497
  1131  000DF6  2F2B               	decfsz	(??_main+1)& (0+255),f,b
  1132  000DF8  D7F9               	bra	u3497
  1133  000DFA  0004               	clrwdt	
  1134  000DFC  F000               	nop	
  1135  000DFE  0004               	clrwdt	
  1136                           
  1137                           ;main.c: 66:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
  1138  000E00  0E02               	movlw	2
  1139  000E02  0101               	movlb	1	; () banked
  1140  000E04  6F2B               	movwf	(??_main+1)& (0+255),b
  1141  000E06  0EE8               	movlw	232
  1142  000E08  6F2A               	movwf	??_main& (0+255),b
  1143  000E0A  0E51               	movlw	81
  1144  000E0C                     u3507:
  1145  000E0C  0004               	clrwdt	
  1146  000E0E  2EE8               	decfsz	wreg,f,c
  1147  000E10  D7FD               	bra	u3507
  1148  000E12  2F2A               	decfsz	??_main& (0+255),f,b
  1149  000E14  D7FB               	bra	u3507
  1150  000E16  2F2B               	decfsz	(??_main+1)& (0+255),f,b
  1151  000E18  D7F9               	bra	u3507
  1152  000E1A  0004               	clrwdt	
  1153  000E1C  F000               	nop	
  1154  000E1E  0004               	clrwdt	
  1155                           
  1156                           ;main.c: 67:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
  1157  000E20  0E02               	movlw	2
  1158  000E22  0101               	movlb	1	; () banked
  1159  000E24  6F2B               	movwf	(??_main+1)& (0+255),b
  1160  000E26  0EE8               	movlw	232
  1161  000E28  6F2A               	movwf	??_main& (0+255),b
  1162  000E2A  0E51               	movlw	81
  1163  000E2C                     u3517:
  1164  000E2C  0004               	clrwdt	
  1165  000E2E  2EE8               	decfsz	wreg,f,c
  1166  000E30  D7FD               	bra	u3517
  1167  000E32  2F2A               	decfsz	??_main& (0+255),f,b
  1168  000E34  D7FB               	bra	u3517
  1169  000E36  2F2B               	decfsz	(??_main+1)& (0+255),f,b
  1170  000E38  D7F9               	bra	u3517
  1171  000E3A  0004               	clrwdt	
  1172  000E3C  F000               	nop	
  1173  000E3E  0004               	clrwdt	
  1174                           
  1175                           ;main.c: 68:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
  1176  000E40  0E02               	movlw	2
  1177  000E42  0101               	movlb	1	; () banked
  1178  000E44  6F2B               	movwf	(??_main+1)& (0+255),b
  1179  000E46  0EE8               	movlw	232
  1180  000E48  6F2A               	movwf	??_main& (0+255),b
  1181  000E4A  0E51               	movlw	81
  1182  000E4C                     u3527:
  1183  000E4C  0004               	clrwdt	
  1184  000E4E  2EE8               	decfsz	wreg,f,c
  1185  000E50  D7FD               	bra	u3527
  1186  000E52  2F2A               	decfsz	??_main& (0+255),f,b
  1187  000E54  D7FB               	bra	u3527
  1188  000E56  2F2B               	decfsz	(??_main+1)& (0+255),f,b
  1189  000E58  D7F9               	bra	u3527
  1190  000E5A  0004               	clrwdt	
  1191  000E5C  F000               	nop	
  1192  000E5E  0004               	clrwdt	
  1193                           
  1194                           ;main.c: 69:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
  1195  000E60  0E02               	movlw	2
  1196  000E62  0101               	movlb	1	; () banked
  1197  000E64  6F2B               	movwf	(??_main+1)& (0+255),b
  1198  000E66  0EE8               	movlw	232
  1199  000E68  6F2A               	movwf	??_main& (0+255),b
  1200  000E6A  0E51               	movlw	81
  1201  000E6C                     u3537:
  1202  000E6C  0004               	clrwdt	
  1203  000E6E  2EE8               	decfsz	wreg,f,c
  1204  000E70  D7FD               	bra	u3537
  1205  000E72  2F2A               	decfsz	??_main& (0+255),f,b
  1206  000E74  D7FB               	bra	u3537
  1207  000E76  2F2B               	decfsz	(??_main+1)& (0+255),f,b
  1208  000E78  D7F9               	bra	u3537
  1209  000E7A  0004               	clrwdt	
  1210  000E7C  F000               	nop	
  1211  000E7E  0004               	clrwdt	
  1212  000E80  D75F               	goto	l3330
  1213  000E82                     __end_of_main:
  1214                           	opt callstack 0
  1215                           
  1216 ;; *************** function _enablePWM *****************
  1217 ;; Defined at:
  1218 ;;		line 35 in file "./motor_pwm.h"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;  PWM_BITMASK     1    wreg     unsigned char 
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  PWM_BITMASK     1   36[BANK0 ] unsigned char 
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1232 ;;      Params:         0       0       0       0
  1233 ;;      Locals:         0       1       0       0
  1234 ;;      Temps:          0       0       0       0
  1235 ;;      Totals:         0       1       0       0
  1236 ;;Total ram usage:        1 bytes
  1237 ;; Hardware stack levels used:    1
  1238 ;; Hardware stack levels required when called:   11
  1239 ;; This function calls:
  1240 ;;		Nothing
  1241 ;; This function is called by:
  1242 ;;		_main
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text1
  1247  002090                     __ptext1:
  1248                           	opt callstack 0
  1249  002090                     _enablePWM:
  1250                           	opt callstack 19
  1251                           
  1252                           ;incstack = 0
  1253                           ;enablePWM@PWM_BITMASK stored from wreg
  1254  002090  0100               	movlb	0	; () banked
  1255  002092  6F84               	movwf	enablePWM@PWM_BITMASK& (0+255),b
  1256                           
  1257                           ;./motor_pwm.h: 62:  PWMCON0=0b11111111 & PWM_BITMASK;
  1258  002094  C084  FF6F         	movff	enablePWM@PWM_BITMASK,3951	;volatile
  1259  002098  0012               	return		;funcret
  1260  00209A                     __end_of_enablePWM:
  1261                           	opt callstack 0
  1262                           
  1263 ;; *************** function _configPWMFreq *****************
  1264 ;; Defined at:
  1265 ;;		line 65 in file "./motor_pwm.h"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;  freq            4   28[BANK1 ] unsigned long 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;  tempLong        4   38[BANK1 ] long 
  1270 ;;  timeBasePreS    2   36[BANK1 ] int 
  1271 ;;  scale           2   34[BANK1 ] int 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1281 ;;      Params:         0       0       4       0
  1282 ;;      Locals:         0       0       8       0
  1283 ;;      Temps:          0       0       2       0
  1284 ;;      Totals:         0       0      14       0
  1285 ;;Total ram usage:       14 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:   20
  1288 ;; This function calls:
  1289 ;;		_PWMError
  1290 ;;		___aldiv
  1291 ;;		___awdiv
  1292 ;;		___lldiv
  1293 ;; This function is called by:
  1294 ;;		_main
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text2
  1299  000E82                     __ptext2:
  1300                           	opt callstack 0
  1301  000E82                     _configPWMFreq:
  1302                           	opt callstack 10
  1303                           
  1304                           ;./motor_pwm.h: 67:  int timeBasePreScale;;./motor_pwm.h: 68:  long tempLong;;./motor_pw
      +                          m.h: 69:  int scale;;./motor_pwm.h: 71:  if (freq > (20000000L/4/2)){
  1305                           
  1306                           ;incstack = 0
  1307  000E82  0101               	movlb	1	; () banked
  1308  000E84  511F               	movf	(configPWMFreq@freq+3)& (0+255),w,b
  1309  000E86  E108               	bnz	u3390
  1310  000E88  0EA1               	movlw	161
  1311  000E8A  5D1C               	subwf	configPWMFreq@freq& (0+255),w,b
  1312  000E8C  0E25               	movlw	37
  1313  000E8E  591D               	subwfb	(configPWMFreq@freq+1)& (0+255),w,b
  1314  000E90  0E26               	movlw	38
  1315  000E92  591E               	subwfb	(configPWMFreq@freq+2)& (0+255),w,b
  1316  000E94  A0D8               	btfss	status,0,c
  1317  000E96  D003               	goto	l3282
  1318  000E98                     u3390:
  1319                           
  1320                           ; BSR set to: 1
  1321                           ;./motor_pwm.h: 72:   PWMError();
  1322  000E98  EC0A  F00F         	call	_PWMError	;wreg free
  1323                           
  1324                           ;./motor_pwm.h: 74:  }
  1325  000E9C  D03A               	goto	l3308
  1326  000E9E                     l3282:
  1327                           
  1328                           ; BSR set to: 1
  1329  000E9E  511F               	movf	(configPWMFreq@freq+3)& (0+255),w,b
  1330  000EA0  111E               	iorwf	(configPWMFreq@freq+2)& (0+255),w,b
  1331  000EA2  E106               	bnz	u3400
  1332  000EA4  0EC5               	movlw	197
  1333  000EA6  5D1C               	subwf	configPWMFreq@freq& (0+255),w,b
  1334  000EA8  0E04               	movlw	4
  1335  000EAA  591D               	subwfb	(configPWMFreq@freq+1)& (0+255),w,b
  1336  000EAC  A0D8               	btfss	status,0,c
  1337  000EAE  D006               	goto	l3288
  1338  000EB0                     u3400:
  1339                           
  1340                           ; BSR set to: 1
  1341                           ;./motor_pwm.h: 76:   timeBasePreScale = 1;
  1342  000EB0  0E00               	movlw	0
  1343  000EB2  6F25               	movwf	(configPWMFreq@timeBasePreScale+1)& (0+255),b
  1344  000EB4  0E01               	movlw	1
  1345  000EB6  6F24               	movwf	configPWMFreq@timeBasePreScale& (0+255),b
  1346                           
  1347                           ; BSR set to: 1
  1348                           ;./motor_pwm.h: 77:   PTCON0 |= 0b00000000;
  1349  000EB8  507F               	movf	3967,w,c	;volatile
  1350                           
  1351                           ;./motor_pwm.h: 78:  }
  1352  000EBA  D02B               	goto	l3308
  1353  000EBC                     l3288:
  1354                           
  1355                           ; BSR set to: 1
  1356  000EBC  511F               	movf	(configPWMFreq@freq+3)& (0+255),w,b
  1357  000EBE  111E               	iorwf	(configPWMFreq@freq+2)& (0+255),w,b
  1358  000EC0  E106               	bnz	u3410
  1359  000EC2  0E32               	movlw	50
  1360  000EC4  5D1C               	subwf	configPWMFreq@freq& (0+255),w,b
  1361  000EC6  0E01               	movlw	1
  1362  000EC8  591D               	subwfb	(configPWMFreq@freq+1)& (0+255),w,b
  1363  000ECA  A0D8               	btfss	status,0,c
  1364  000ECC  D006               	goto	l3294
  1365  000ECE                     u3410:
  1366                           
  1367                           ; BSR set to: 1
  1368                           ;./motor_pwm.h: 80:   timeBasePreScale = 4;
  1369  000ECE  0E00               	movlw	0
  1370  000ED0  6F25               	movwf	(configPWMFreq@timeBasePreScale+1)& (0+255),b
  1371  000ED2  0E04               	movlw	4
  1372  000ED4  6F24               	movwf	configPWMFreq@timeBasePreScale& (0+255),b
  1373                           
  1374                           ; BSR set to: 1
  1375                           ;./motor_pwm.h: 81:   PTCON0 |= 0b00000100;
  1376  000ED6  847F               	bsf	3967,2,c	;volatile
  1377                           
  1378                           ;./motor_pwm.h: 82:  }
  1379  000ED8  D01C               	goto	l3308
  1380  000EDA                     l3294:
  1381                           
  1382                           ; BSR set to: 1
  1383  000EDA  511F               	movf	(configPWMFreq@freq+3)& (0+255),w,b
  1384  000EDC  111E               	iorwf	(configPWMFreq@freq+2)& (0+255),w,b
  1385  000EDE  111D               	iorwf	(configPWMFreq@freq+1)& (0+255),w,b
  1386  000EE0  E104               	bnz	u3420
  1387  000EE2  0E4D               	movlw	77
  1388  000EE4  5D1C               	subwf	configPWMFreq@freq& (0+255),w,b
  1389  000EE6  A0D8               	btfss	status,0,c
  1390  000EE8  D006               	goto	l3300
  1391  000EEA                     u3420:
  1392                           
  1393                           ; BSR set to: 1
  1394                           ;./motor_pwm.h: 84:   timeBasePreScale = 16;
  1395  000EEA  0E00               	movlw	0
  1396  000EEC  6F25               	movwf	(configPWMFreq@timeBasePreScale+1)& (0+255),b
  1397  000EEE  0E10               	movlw	16
  1398  000EF0  6F24               	movwf	configPWMFreq@timeBasePreScale& (0+255),b
  1399                           
  1400                           ; BSR set to: 1
  1401                           ;./motor_pwm.h: 85:   PTCON0 |= 0b00001000;
  1402  000EF2  867F               	bsf	3967,3,c	;volatile
  1403                           
  1404                           ;./motor_pwm.h: 86:  }
  1405  000EF4  D00E               	goto	l3308
  1406  000EF6                     l3300:
  1407                           
  1408                           ; BSR set to: 1
  1409  000EF6  511F               	movf	(configPWMFreq@freq+3)& (0+255),w,b
  1410  000EF8  111E               	iorwf	(configPWMFreq@freq+2)& (0+255),w,b
  1411  000EFA  111D               	iorwf	(configPWMFreq@freq+1)& (0+255),w,b
  1412  000EFC  E104               	bnz	u3430
  1413  000EFE  0E14               	movlw	20
  1414  000F00  5D1C               	subwf	configPWMFreq@freq& (0+255),w,b
  1415  000F02  A0D8               	btfss	status,0,c
  1416  000F04  D7C9               	goto	u3390
  1417  000F06                     u3430:
  1418                           
  1419                           ; BSR set to: 1
  1420                           ;./motor_pwm.h: 88:   timeBasePreScale = 64;
  1421  000F06  0E00               	movlw	0
  1422  000F08  6F25               	movwf	(configPWMFreq@timeBasePreScale+1)& (0+255),b
  1423  000F0A  0E40               	movlw	64
  1424  000F0C  6F24               	movwf	configPWMFreq@timeBasePreScale& (0+255),b
  1425                           
  1426                           ; BSR set to: 1
  1427                           ;./motor_pwm.h: 89:   PTCON0 |= 0b00001100;
  1428  000F0E  0E0C               	movlw	12
  1429  000F10  127F               	iorwf	3967,f,c	;volatile
  1430  000F12                     l3308:
  1431                           
  1432                           ;./motor_pwm.h: 98:  PTCON1 = 0b10000000;
  1433  000F12  0E80               	movlw	128
  1434  000F14  6E7E               	movwf	3966,c	;volatile
  1435                           
  1436                           ;./motor_pwm.h: 102:  scale = timeBasePreScale*4;
  1437  000F16  C124  F120         	movff	configPWMFreq@timeBasePreScale,??_configPWMFreq
  1438  000F1A  C125  F121         	movff	configPWMFreq@timeBasePreScale+1,??_configPWMFreq+1
  1439  000F1E  0101               	movlb	1	; () banked
  1440  000F20  90D8               	bcf	status,0,c
  1441  000F22  3720               	rlcf	??_configPWMFreq& (0+255),f,b
  1442  000F24  3721               	rlcf	(??_configPWMFreq+1)& (0+255),f,b
  1443  000F26  90D8               	bcf	status,0,c
  1444  000F28  3720               	rlcf	??_configPWMFreq& (0+255),f,b
  1445  000F2A  3721               	rlcf	(??_configPWMFreq+1)& (0+255),f,b
  1446  000F2C  C120  F122         	movff	??_configPWMFreq,configPWMFreq@scale
  1447  000F30  C121  F123         	movff	??_configPWMFreq+1,configPWMFreq@scale+1
  1448                           
  1449                           ; BSR set to: 1
  1450                           ;./motor_pwm.h: 103:  tempLong = (20000000L/scale);
  1451  000F34  0E00               	movlw	0
  1452  000F36  0100               	movlb	0	; () banked
  1453  000F38  6F84               	movwf	___aldiv@dividend& (0+255),b
  1454  000F3A  0E2D               	movlw	45
  1455  000F3C  6F85               	movwf	(___aldiv@dividend+1)& (0+255),b
  1456  000F3E  0E31               	movlw	49
  1457  000F40  6F86               	movwf	(___aldiv@dividend+2)& (0+255),b
  1458  000F42  0E01               	movlw	1
  1459  000F44  6F87               	movwf	(___aldiv@dividend+3)& (0+255),b
  1460  000F46  C122  F088         	movff	configPWMFreq@scale,___aldiv@divisor
  1461  000F4A  C123  F089         	movff	configPWMFreq@scale+1,___aldiv@divisor+1
  1462  000F4E  0E00               	movlw	0
  1463  000F50  BF89               	btfsc	(___aldiv@divisor+1)& (0+255),7,b
  1464  000F52  0EFF               	movlw	-1
  1465  000F54  6F8A               	movwf	(___aldiv@divisor+2)& (0+255),b
  1466  000F56  6F8B               	movwf	(___aldiv@divisor+3)& (0+255),b
  1467  000F58  ECDB  F00A         	call	___aldiv	;wreg free
  1468  000F5C  C084  F126         	movff	?___aldiv,configPWMFreq@tempLong
  1469  000F60  C085  F127         	movff	?___aldiv+1,configPWMFreq@tempLong+1
  1470  000F64  C086  F128         	movff	?___aldiv+2,configPWMFreq@tempLong+2
  1471  000F68  C087  F129         	movff	?___aldiv+3,configPWMFreq@tempLong+3
  1472                           
  1473                           ;./motor_pwm.h: 104:  tempLong = tempLong/freq;
  1474  000F6C  C126  F084         	movff	configPWMFreq@tempLong,___lldiv@dividend
  1475  000F70  C127  F085         	movff	configPWMFreq@tempLong+1,___lldiv@dividend+1
  1476  000F74  C128  F086         	movff	configPWMFreq@tempLong+2,___lldiv@dividend+2
  1477  000F78  C129  F087         	movff	configPWMFreq@tempLong+3,___lldiv@dividend+3
  1478  000F7C  C11C  F088         	movff	configPWMFreq@freq,___lldiv@divisor
  1479  000F80  C11D  F089         	movff	configPWMFreq@freq+1,___lldiv@divisor+1
  1480  000F84  C11E  F08A         	movff	configPWMFreq@freq+2,___lldiv@divisor+2
  1481  000F88  C11F  F08B         	movff	configPWMFreq@freq+3,___lldiv@divisor+3
  1482  000F8C  EC94  F00D         	call	___lldiv	;wreg free
  1483  000F90  C084  F126         	movff	?___lldiv,configPWMFreq@tempLong
  1484  000F94  C085  F127         	movff	?___lldiv+1,configPWMFreq@tempLong+1
  1485  000F98  C086  F128         	movff	?___lldiv+2,configPWMFreq@tempLong+2
  1486  000F9C  C087  F129         	movff	?___lldiv+3,configPWMFreq@tempLong+3
  1487                           
  1488                           ;./motor_pwm.h: 105:  PWMPeriod= tempLong-1;
  1489  000FA0  0EFF               	movlw	255
  1490  000FA2  0101               	movlb	1	; () banked
  1491  000FA4  2526               	addwf	configPWMFreq@tempLong& (0+255),w,b
  1492  000FA6  6F2E               	movwf	_PWMPeriod& (0+255),b
  1493  000FA8  0EFF               	movlw	255
  1494  000FAA  2127               	addwfc	(configPWMFreq@tempLong+1)& (0+255),w,b
  1495  000FAC  6F2F               	movwf	(_PWMPeriod+1)& (0+255),b
  1496                           
  1497                           ; BSR set to: 1
  1498                           ;./motor_pwm.h: 106:  PTPERH=PWMPeriod/256;
  1499  000FAE  C12E  F084         	movff	_PWMPeriod,___awdiv@dividend
  1500  000FB2  C12F  F085         	movff	_PWMPeriod+1,___awdiv@dividend+1
  1501  000FB6  0E01               	movlw	1
  1502  000FB8  0100               	movlb	0	; () banked
  1503  000FBA  6F87               	movwf	(___awdiv@divisor+1)& (0+255),b
  1504  000FBC  0E00               	movlw	0
  1505  000FBE  6F86               	movwf	___awdiv@divisor& (0+255),b
  1506  000FC0  EC51  F00D         	call	___awdiv	;wreg free
  1507  000FC4  0100               	movlb	0	; () banked
  1508  000FC6  5184               	movf	?___awdiv& (0+255),w,b
  1509  000FC8  6E7A               	movwf	3962,c	;volatile
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;./motor_pwm.h: 107:  PTPERL=PWMPeriod%256;
  1513  000FCA  C12E  FF7B         	movff	_PWMPeriod,3963	;volatile
  1514                           
  1515                           ; BSR set to: 0
  1516  000FCE  0012               	return		;funcret
  1517  000FD0                     __end_of_configPWMFreq:
  1518                           	opt callstack 0
  1519                           
  1520 ;; *************** function ___lldiv *****************
  1521 ;; Defined at:
  1522 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__lldiv.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  dividend        4   36[BANK0 ] unsigned long 
  1525 ;;  divisor         4   40[BANK0 ] unsigned long 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  quotient        4   44[BANK0 ] unsigned long 
  1528 ;;  counter         1   48[BANK0 ] unsigned char 
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  4   36[BANK0 ] unsigned long 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1538 ;;      Params:         0       8       0       0
  1539 ;;      Locals:         0       5       0       0
  1540 ;;      Temps:          0       0       0       0
  1541 ;;      Totals:         0      13       0       0
  1542 ;;Total ram usage:       13 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:   11
  1545 ;; This function calls:
  1546 ;;		Nothing
  1547 ;; This function is called by:
  1548 ;;		_configPWMFreq
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text3
  1553  001B28                     __ptext3:
  1554                           	opt callstack 0
  1555  001B28                     ___lldiv:
  1556                           	opt callstack 18
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;incstack = 0
  1560  001B28  0E00               	movlw	0
  1561  001B2A  0100               	movlb	0	; () banked
  1562  001B2C  6F8C               	movwf	___lldiv@quotient& (0+255),b
  1563  001B2E  0E00               	movlw	0
  1564  001B30  6F8D               	movwf	(___lldiv@quotient+1)& (0+255),b
  1565  001B32  0E00               	movlw	0
  1566  001B34  6F8E               	movwf	(___lldiv@quotient+2)& (0+255),b
  1567  001B36  0E00               	movlw	0
  1568  001B38  6F8F               	movwf	(___lldiv@quotient+3)& (0+255),b
  1569                           
  1570                           ; BSR set to: 0
  1571  001B3A  5188               	movf	___lldiv@divisor& (0+255),w,b
  1572  001B3C  1189               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  1573  001B3E  118A               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  1574  001B40  118B               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  1575  001B42  B4D8               	btfsc	status,2,c
  1576  001B44  D02A               	goto	l325
  1577                           
  1578                           ; BSR set to: 0
  1579  001B46  0E01               	movlw	1
  1580  001B48  6F90               	movwf	___lldiv@counter& (0+255),b
  1581  001B4A  D006               	goto	l2632
  1582  001B4C                     l2630:
  1583                           
  1584                           ; BSR set to: 0
  1585  001B4C  90D8               	bcf	status,0,c
  1586  001B4E  3788               	rlcf	___lldiv@divisor& (0+255),f,b
  1587  001B50  3789               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  1588  001B52  378A               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  1589  001B54  378B               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  1590  001B56  2B90               	incf	___lldiv@counter& (0+255),f,b
  1591  001B58                     l2632:
  1592                           
  1593                           ; BSR set to: 0
  1594  001B58  AF8B               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  1595  001B5A  D7F8               	goto	l2630
  1596  001B5C                     u2510:
  1597                           
  1598                           ; BSR set to: 0
  1599  001B5C  90D8               	bcf	status,0,c
  1600  001B5E  378C               	rlcf	___lldiv@quotient& (0+255),f,b
  1601  001B60  378D               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  1602  001B62  378E               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  1603  001B64  378F               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  1604                           
  1605                           ; BSR set to: 0
  1606  001B66  5188               	movf	___lldiv@divisor& (0+255),w,b
  1607  001B68  5D84               	subwf	___lldiv@dividend& (0+255),w,b
  1608  001B6A  5189               	movf	(___lldiv@divisor+1)& (0+255),w,b
  1609  001B6C  5985               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  1610  001B6E  518A               	movf	(___lldiv@divisor+2)& (0+255),w,b
  1611  001B70  5986               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  1612  001B72  518B               	movf	(___lldiv@divisor+3)& (0+255),w,b
  1613  001B74  5987               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  1614  001B76  A0D8               	btfss	status,0,c
  1615  001B78  D009               	goto	l2642
  1616                           
  1617                           ; BSR set to: 0
  1618  001B7A  5188               	movf	___lldiv@divisor& (0+255),w,b
  1619  001B7C  5F84               	subwf	___lldiv@dividend& (0+255),f,b
  1620  001B7E  5189               	movf	(___lldiv@divisor+1)& (0+255),w,b
  1621  001B80  5B85               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  1622  001B82  518A               	movf	(___lldiv@divisor+2)& (0+255),w,b
  1623  001B84  5B86               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  1624  001B86  518B               	movf	(___lldiv@divisor+3)& (0+255),w,b
  1625  001B88  5B87               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  1626                           
  1627                           ; BSR set to: 0
  1628  001B8A  818C               	bsf	___lldiv@quotient& (0+255),0,b
  1629  001B8C                     l2642:
  1630                           
  1631                           ; BSR set to: 0
  1632  001B8C  90D8               	bcf	status,0,c
  1633  001B8E  338B               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  1634  001B90  338A               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  1635  001B92  3389               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  1636  001B94  3388               	rrcf	___lldiv@divisor& (0+255),f,b
  1637                           
  1638                           ; BSR set to: 0
  1639  001B96  2F90               	decfsz	___lldiv@counter& (0+255),f,b
  1640  001B98  D7E1               	goto	u2510
  1641  001B9A                     l325:
  1642                           
  1643                           ; BSR set to: 0
  1644  001B9A  C08C  F084         	movff	___lldiv@quotient,?___lldiv
  1645  001B9E  C08D  F085         	movff	___lldiv@quotient+1,?___lldiv+1
  1646  001BA2  C08E  F086         	movff	___lldiv@quotient+2,?___lldiv+2
  1647  001BA6  C08F  F087         	movff	___lldiv@quotient+3,?___lldiv+3
  1648                           
  1649                           ; BSR set to: 0
  1650  001BAA  0012               	return		;funcret
  1651  001BAC                     __end_of___lldiv:
  1652                           	opt callstack 0
  1653                           
  1654 ;; *************** function ___awdiv *****************
  1655 ;; Defined at:
  1656 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  dividend        2   36[BANK0 ] int 
  1659 ;;  divisor         2   38[BANK0 ] int 
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;  quotient        2   42[BANK0 ] int 
  1662 ;;  sign            1   41[BANK0 ] unsigned char 
  1663 ;;  counter         1   40[BANK0 ] unsigned char 
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  2   36[BANK0 ] int 
  1666 ;; Registers used:
  1667 ;;		wreg, status,2, status,0
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1673 ;;      Params:         0       4       0       0
  1674 ;;      Locals:         0       4       0       0
  1675 ;;      Temps:          0       0       0       0
  1676 ;;      Totals:         0       8       0       0
  1677 ;;Total ram usage:        8 bytes
  1678 ;; Hardware stack levels used:    1
  1679 ;; Hardware stack levels required when called:   11
  1680 ;; This function calls:
  1681 ;;		Nothing
  1682 ;; This function is called by:
  1683 ;;		_configPWMFreq
  1684 ;;		_setPDC1
  1685 ;;		_setPDC2
  1686 ;;		_setPDC3
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text4
  1691  001AA2                     __ptext4:
  1692                           	opt callstack 0
  1693  001AA2                     ___awdiv:
  1694                           	opt callstack 18
  1695                           
  1696                           ; BSR set to: 0
  1697                           ;incstack = 0
  1698  001AA2  0E00               	movlw	0
  1699  001AA4  0100               	movlb	0	; () banked
  1700  001AA6  6F89               	movwf	___awdiv@sign& (0+255),b
  1701                           
  1702                           ; BSR set to: 0
  1703  001AA8  AF87               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1704  001AAA  D006               	goto	l2698
  1705                           
  1706                           ; BSR set to: 0
  1707  001AAC  6D86               	negf	___awdiv@divisor& (0+255),b
  1708  001AAE  1F87               	comf	(___awdiv@divisor+1)& (0+255),f,b
  1709  001AB0  B0D8               	btfsc	status,0,c
  1710  001AB2  2B87               	incf	(___awdiv@divisor+1)& (0+255),f,b
  1711                           
  1712                           ; BSR set to: 0
  1713  001AB4  0E01               	movlw	1
  1714  001AB6  6F89               	movwf	___awdiv@sign& (0+255),b
  1715  001AB8                     l2698:
  1716                           
  1717                           ; BSR set to: 0
  1718  001AB8  AF85               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  1719  001ABA  D006               	goto	l2704
  1720                           
  1721                           ; BSR set to: 0
  1722  001ABC  6D84               	negf	___awdiv@dividend& (0+255),b
  1723  001ABE  1F85               	comf	(___awdiv@dividend+1)& (0+255),f,b
  1724  001AC0  B0D8               	btfsc	status,0,c
  1725  001AC2  2B85               	incf	(___awdiv@dividend+1)& (0+255),f,b
  1726                           
  1727                           ; BSR set to: 0
  1728  001AC4  0E01               	movlw	1
  1729  001AC6  1B89               	xorwf	___awdiv@sign& (0+255),f,b
  1730  001AC8                     l2704:
  1731                           
  1732                           ; BSR set to: 0
  1733  001AC8  0E00               	movlw	0
  1734  001ACA  6F8B               	movwf	(___awdiv@quotient+1)& (0+255),b
  1735  001ACC  0E00               	movlw	0
  1736  001ACE  6F8A               	movwf	___awdiv@quotient& (0+255),b
  1737                           
  1738                           ; BSR set to: 0
  1739  001AD0  5186               	movf	___awdiv@divisor& (0+255),w,b
  1740  001AD2  1187               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  1741  001AD4  B4D8               	btfsc	status,2,c
  1742  001AD6  D01C               	goto	l2726
  1743                           
  1744                           ; BSR set to: 0
  1745  001AD8  0E01               	movlw	1
  1746  001ADA  6F88               	movwf	___awdiv@counter& (0+255),b
  1747  001ADC  D004               	goto	l2712
  1748  001ADE                     l2710:
  1749                           
  1750                           ; BSR set to: 0
  1751  001ADE  90D8               	bcf	status,0,c
  1752  001AE0  3786               	rlcf	___awdiv@divisor& (0+255),f,b
  1753  001AE2  3787               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  1754  001AE4  2B88               	incf	___awdiv@counter& (0+255),f,b
  1755  001AE6                     l2712:
  1756                           
  1757                           ; BSR set to: 0
  1758  001AE6  AF87               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1759  001AE8  D7FA               	goto	l2710
  1760  001AEA                     u2620:
  1761                           
  1762                           ; BSR set to: 0
  1763  001AEA  90D8               	bcf	status,0,c
  1764  001AEC  378A               	rlcf	___awdiv@quotient& (0+255),f,b
  1765  001AEE  378B               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  1766                           
  1767                           ; BSR set to: 0
  1768  001AF0  5186               	movf	___awdiv@divisor& (0+255),w,b
  1769  001AF2  5D84               	subwf	___awdiv@dividend& (0+255),w,b
  1770  001AF4  5187               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1771  001AF6  5985               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  1772  001AF8  A0D8               	btfss	status,0,c
  1773  001AFA  D005               	goto	l2722
  1774                           
  1775                           ; BSR set to: 0
  1776  001AFC  5186               	movf	___awdiv@divisor& (0+255),w,b
  1777  001AFE  5F84               	subwf	___awdiv@dividend& (0+255),f,b
  1778  001B00  5187               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1779  001B02  5B85               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  1780                           
  1781                           ; BSR set to: 0
  1782  001B04  818A               	bsf	___awdiv@quotient& (0+255),0,b
  1783  001B06                     l2722:
  1784                           
  1785                           ; BSR set to: 0
  1786  001B06  90D8               	bcf	status,0,c
  1787  001B08  3387               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  1788  001B0A  3386               	rrcf	___awdiv@divisor& (0+255),f,b
  1789                           
  1790                           ; BSR set to: 0
  1791  001B0C  2F88               	decfsz	___awdiv@counter& (0+255),f,b
  1792  001B0E  D7ED               	goto	u2620
  1793  001B10                     l2726:
  1794                           
  1795                           ; BSR set to: 0
  1796  001B10  5189               	movf	___awdiv@sign& (0+255),w,b
  1797  001B12  B4D8               	btfsc	status,2,c
  1798  001B14  D004               	goto	l2730
  1799                           
  1800                           ; BSR set to: 0
  1801  001B16  6D8A               	negf	___awdiv@quotient& (0+255),b
  1802  001B18  1F8B               	comf	(___awdiv@quotient+1)& (0+255),f,b
  1803  001B1A  B0D8               	btfsc	status,0,c
  1804  001B1C  2B8B               	incf	(___awdiv@quotient+1)& (0+255),f,b
  1805  001B1E                     l2730:
  1806                           
  1807                           ; BSR set to: 0
  1808  001B1E  C08A  F084         	movff	___awdiv@quotient,?___awdiv
  1809  001B22  C08B  F085         	movff	___awdiv@quotient+1,?___awdiv+1
  1810                           
  1811                           ; BSR set to: 0
  1812  001B26  0012               	return		;funcret
  1813  001B28                     __end_of___awdiv:
  1814                           	opt callstack 0
  1815                           
  1816 ;; *************** function ___aldiv *****************
  1817 ;; Defined at:
  1818 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aldiv.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;  dividend        4   36[BANK0 ] long 
  1821 ;;  divisor         4   40[BANK0 ] long 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  quotient        4   46[BANK0 ] long 
  1824 ;;  sign            1   45[BANK0 ] unsigned char 
  1825 ;;  counter         1   44[BANK0 ] unsigned char 
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  4   36[BANK0 ] long 
  1828 ;; Registers used:
  1829 ;;		wreg, status,2, status,0
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1835 ;;      Params:         0       8       0       0
  1836 ;;      Locals:         0       6       0       0
  1837 ;;      Temps:          0       0       0       0
  1838 ;;      Totals:         0      14       0       0
  1839 ;;Total ram usage:       14 bytes
  1840 ;; Hardware stack levels used:    1
  1841 ;; Hardware stack levels required when called:   11
  1842 ;; This function calls:
  1843 ;;		Nothing
  1844 ;; This function is called by:
  1845 ;;		_configPWMFreq
  1846 ;;		_setPDC1
  1847 ;;		_setPDC2
  1848 ;;		_setPDC3
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           	psect	text5
  1853  0015B6                     __ptext5:
  1854                           	opt callstack 0
  1855  0015B6                     ___aldiv:
  1856                           	opt callstack 18
  1857                           
  1858                           ; BSR set to: 0
  1859                           ;incstack = 0
  1860  0015B6  0E00               	movlw	0
  1861  0015B8  0100               	movlb	0	; () banked
  1862  0015BA  6F8D               	movwf	___aldiv@sign& (0+255),b
  1863                           
  1864                           ; BSR set to: 0
  1865  0015BC  AF8B               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  1866  0015BE  D00A               	goto	l2654
  1867                           
  1868                           ; BSR set to: 0
  1869  0015C0  1F8B               	comf	(___aldiv@divisor+3)& (0+255),f,b
  1870  0015C2  1F8A               	comf	(___aldiv@divisor+2)& (0+255),f,b
  1871  0015C4  1F89               	comf	(___aldiv@divisor+1)& (0+255),f,b
  1872  0015C6  6D88               	negf	___aldiv@divisor& (0+255),b
  1873  0015C8  0E00               	movlw	0
  1874  0015CA  2389               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  1875  0015CC  238A               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  1876  0015CE  238B               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  1877                           
  1878                           ; BSR set to: 0
  1879  0015D0  0E01               	movlw	1
  1880  0015D2  6F8D               	movwf	___aldiv@sign& (0+255),b
  1881  0015D4                     l2654:
  1882                           
  1883                           ; BSR set to: 0
  1884  0015D4  AF87               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  1885  0015D6  D00A               	goto	l2660
  1886                           
  1887                           ; BSR set to: 0
  1888  0015D8  1F87               	comf	(___aldiv@dividend+3)& (0+255),f,b
  1889  0015DA  1F86               	comf	(___aldiv@dividend+2)& (0+255),f,b
  1890  0015DC  1F85               	comf	(___aldiv@dividend+1)& (0+255),f,b
  1891  0015DE  6D84               	negf	___aldiv@dividend& (0+255),b
  1892  0015E0  0E00               	movlw	0
  1893  0015E2  2385               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  1894  0015E4  2386               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  1895  0015E6  2387               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  1896                           
  1897                           ; BSR set to: 0
  1898  0015E8  0E01               	movlw	1
  1899  0015EA  1B8D               	xorwf	___aldiv@sign& (0+255),f,b
  1900  0015EC                     l2660:
  1901                           
  1902                           ; BSR set to: 0
  1903  0015EC  0E00               	movlw	0
  1904  0015EE  6F8E               	movwf	___aldiv@quotient& (0+255),b
  1905  0015F0  0E00               	movlw	0
  1906  0015F2  6F8F               	movwf	(___aldiv@quotient+1)& (0+255),b
  1907  0015F4  0E00               	movlw	0
  1908  0015F6  6F90               	movwf	(___aldiv@quotient+2)& (0+255),b
  1909  0015F8  0E00               	movlw	0
  1910  0015FA  6F91               	movwf	(___aldiv@quotient+3)& (0+255),b
  1911                           
  1912                           ; BSR set to: 0
  1913  0015FC  5188               	movf	___aldiv@divisor& (0+255),w,b
  1914  0015FE  1189               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  1915  001600  118A               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  1916  001602  118B               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  1917  001604  B4D8               	btfsc	status,2,c
  1918  001606  D02A               	goto	l2682
  1919                           
  1920                           ; BSR set to: 0
  1921  001608  0E01               	movlw	1
  1922  00160A  6F8C               	movwf	___aldiv@counter& (0+255),b
  1923  00160C  D006               	goto	l2668
  1924  00160E                     l2666:
  1925                           
  1926                           ; BSR set to: 0
  1927  00160E  90D8               	bcf	status,0,c
  1928  001610  3788               	rlcf	___aldiv@divisor& (0+255),f,b
  1929  001612  3789               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  1930  001614  378A               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  1931  001616  378B               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  1932  001618  2B8C               	incf	___aldiv@counter& (0+255),f,b
  1933  00161A                     l2668:
  1934                           
  1935                           ; BSR set to: 0
  1936  00161A  AF8B               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  1937  00161C  D7F8               	goto	l2666
  1938  00161E                     u2560:
  1939                           
  1940                           ; BSR set to: 0
  1941  00161E  90D8               	bcf	status,0,c
  1942  001620  378E               	rlcf	___aldiv@quotient& (0+255),f,b
  1943  001622  378F               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  1944  001624  3790               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  1945  001626  3791               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  1946                           
  1947                           ; BSR set to: 0
  1948  001628  5188               	movf	___aldiv@divisor& (0+255),w,b
  1949  00162A  5D84               	subwf	___aldiv@dividend& (0+255),w,b
  1950  00162C  5189               	movf	(___aldiv@divisor+1)& (0+255),w,b
  1951  00162E  5985               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  1952  001630  518A               	movf	(___aldiv@divisor+2)& (0+255),w,b
  1953  001632  5986               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  1954  001634  518B               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1955  001636  5987               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  1956  001638  A0D8               	btfss	status,0,c
  1957  00163A  D009               	goto	l2678
  1958                           
  1959                           ; BSR set to: 0
  1960  00163C  5188               	movf	___aldiv@divisor& (0+255),w,b
  1961  00163E  5F84               	subwf	___aldiv@dividend& (0+255),f,b
  1962  001640  5189               	movf	(___aldiv@divisor+1)& (0+255),w,b
  1963  001642  5B85               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  1964  001644  518A               	movf	(___aldiv@divisor+2)& (0+255),w,b
  1965  001646  5B86               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  1966  001648  518B               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1967  00164A  5B87               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  1968                           
  1969                           ; BSR set to: 0
  1970  00164C  818E               	bsf	___aldiv@quotient& (0+255),0,b
  1971  00164E                     l2678:
  1972                           
  1973                           ; BSR set to: 0
  1974  00164E  90D8               	bcf	status,0,c
  1975  001650  338B               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  1976  001652  338A               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  1977  001654  3389               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  1978  001656  3388               	rrcf	___aldiv@divisor& (0+255),f,b
  1979                           
  1980                           ; BSR set to: 0
  1981  001658  2F8C               	decfsz	___aldiv@counter& (0+255),f,b
  1982  00165A  D7E1               	goto	u2560
  1983  00165C                     l2682:
  1984                           
  1985                           ; BSR set to: 0
  1986  00165C  518D               	movf	___aldiv@sign& (0+255),w,b
  1987  00165E  B4D8               	btfsc	status,2,c
  1988  001660  D008               	goto	l2686
  1989                           
  1990                           ; BSR set to: 0
  1991  001662  1F91               	comf	(___aldiv@quotient+3)& (0+255),f,b
  1992  001664  1F90               	comf	(___aldiv@quotient+2)& (0+255),f,b
  1993  001666  1F8F               	comf	(___aldiv@quotient+1)& (0+255),f,b
  1994  001668  6D8E               	negf	___aldiv@quotient& (0+255),b
  1995  00166A  0E00               	movlw	0
  1996  00166C  238F               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  1997  00166E  2390               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  1998  001670  2391               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  1999  001672                     l2686:
  2000                           
  2001                           ; BSR set to: 0
  2002  001672  C08E  F084         	movff	___aldiv@quotient,?___aldiv
  2003  001676  C08F  F085         	movff	___aldiv@quotient+1,?___aldiv+1
  2004  00167A  C090  F086         	movff	___aldiv@quotient+2,?___aldiv+2
  2005  00167E  C091  F087         	movff	___aldiv@quotient+3,?___aldiv+3
  2006                           
  2007                           ; BSR set to: 0
  2008  001682  0012               	return		;funcret
  2009  001684                     __end_of___aldiv:
  2010                           	opt callstack 0
  2011                           
  2012 ;; *************** function _PWMError *****************
  2013 ;; Defined at:
  2014 ;;		line 20 in file "./motor_pwm.h"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;		None
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  i               2    0        unsigned int 
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      void 
  2021 ;; Registers used:
  2022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2028 ;;      Params:         0       0       0       0
  2029 ;;      Locals:         0       0       0       0
  2030 ;;      Temps:          0       0       2       0
  2031 ;;      Totals:         0       0       2       0
  2032 ;;Total ram usage:        2 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:   19
  2035 ;; This function calls:
  2036 ;;		_printf
  2037 ;; This function is called by:
  2038 ;;		_configPWMFreq
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text6
  2043  001E14                     __ptext6:
  2044                           	opt callstack 0
  2045  001E14                     _PWMError:
  2046                           	opt callstack 10
  2047                           
  2048                           ;./motor_pwm.h: 22:  unsigned int i;;./motor_pwm.h: 23:  TRISB = 0;
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;incstack = 0
  2052  001E14  0E00               	movlw	0
  2053  001E16  6E93               	movwf	3987,c	;volatile
  2054                           
  2055                           ;./motor_pwm.h: 24:  PWMCON0 = 0;
  2056  001E18  0E00               	movlw	0
  2057  001E1A  6E6F               	movwf	3951,c	;volatile
  2058                           
  2059                           ;./motor_pwm.h: 25:  printf("PWM Error");
  2060  001E1C  0E44               	movlw	low STR_1
  2061  001E1E  0101               	movlb	1	; () banked
  2062  001E20  6F14               	movwf	printf@fmt& (0+255),b
  2063  001E22  0E03               	movlw	high STR_1
  2064  001E24  6F15               	movwf	(printf@fmt+1)& (0+255),b
  2065  001E26  ECFA  F00F         	call	_printf	;wreg free
  2066  001E2A                     l3270:
  2067                           
  2068                           ;./motor_pwm.h: 28:   PORTBbits.RB5 = 1;
  2069  001E2A  8A81               	bsf	3969,5,c	;volatile
  2070                           
  2071                           ;./motor_pwm.h: 29:   _delaywdt((unsigned long)((20000000L/5000)*(20000000L/4000.0)));
  2072  001E2C  0E4D               	movlw	77
  2073  001E2E  0101               	movlb	1	; () banked
  2074  001E30  6F1B               	movwf	(??_PWMError+1)& (0+255),b
  2075  001E32  0E26               	movlw	38
  2076  001E34  6F1A               	movwf	??_PWMError& (0+255),b
  2077  001E36  0E05               	movlw	5
  2078  001E38                     u3547:
  2079  001E38  0004               	clrwdt	
  2080  001E3A  2EE8               	decfsz	wreg,f,c
  2081  001E3C  D7FD               	bra	u3547
  2082  001E3E  2F1A               	decfsz	??_PWMError& (0+255),f,b
  2083  001E40  D7FB               	bra	u3547
  2084  001E42  2F1B               	decfsz	(??_PWMError+1)& (0+255),f,b
  2085  001E44  D7F9               	bra	u3547
  2086  001E46  0004               	clrwdt	
  2087                           
  2088                           ;./motor_pwm.h: 30:   PORTBbits.RB5 = 0;
  2089  001E48  9A81               	bcf	3969,5,c	;volatile
  2090                           
  2091                           ;./motor_pwm.h: 31:   _delaywdt((unsigned long)((20000000L/5000)*(20000000L/4000.0)));
  2092  001E4A  0E4D               	movlw	77
  2093  001E4C  0101               	movlb	1	; () banked
  2094  001E4E  6F1B               	movwf	(??_PWMError+1)& (0+255),b
  2095  001E50  0E26               	movlw	38
  2096  001E52  6F1A               	movwf	??_PWMError& (0+255),b
  2097  001E54  0E05               	movlw	5
  2098  001E56                     u3557:
  2099  001E56  0004               	clrwdt	
  2100  001E58  2EE8               	decfsz	wreg,f,c
  2101  001E5A  D7FD               	bra	u3557
  2102  001E5C  2F1A               	decfsz	??_PWMError& (0+255),f,b
  2103  001E5E  D7FB               	bra	u3557
  2104  001E60  2F1B               	decfsz	(??_PWMError+1)& (0+255),f,b
  2105  001E62  D7F9               	bra	u3557
  2106  001E64  0004               	clrwdt	
  2107  001E66  D7E1               	goto	l3270
  2108  001E68                     __end_of_PWMError:
  2109                           	opt callstack 0
  2110                           
  2111 ;; *************** function _printf *****************
  2112 ;; Defined at:
  2113 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  fmt             2   20[BANK1 ] PTR const unsigned char 
  2116 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_3(17), 
  2117 ;;		 -> STR_2(26), STR_1(10), 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  ap              2   24[BANK1 ] PTR void [1]
  2120 ;;		 -> ?_printf(2), 
  2121 ;;  ret             2    0        int 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  2   20[BANK1 ] int 
  2124 ;; Registers used:
  2125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2131 ;;      Params:         0       0       2       0
  2132 ;;      Locals:         0       0       4       0
  2133 ;;      Temps:          0       0       0       0
  2134 ;;      Totals:         0       0       6       0
  2135 ;;Total ram usage:        6 bytes
  2136 ;; Hardware stack levels used:    1
  2137 ;; Hardware stack levels required when called:   18
  2138 ;; This function calls:
  2139 ;;		_vfprintf
  2140 ;; This function is called by:
  2141 ;;		_PWMError
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text7
  2146  001FF4                     __ptext7:
  2147                           	opt callstack 0
  2148  001FF4                     _printf:
  2149                           	opt callstack 10
  2150                           
  2151                           ;incstack = 0
  2152  001FF4  0E16               	movlw	low (?_printf+2)
  2153  001FF6  0101               	movlb	1	; () banked
  2154  001FF8  6F18               	movwf	printf@ap& (0+255),b
  2155  001FFA  0E01               	movlw	high (?_printf+2)
  2156  001FFC  6F19               	movwf	(printf@ap+1)& (0+255),b
  2157                           
  2158                           ; BSR set to: 1
  2159  001FFE  0E00               	movlw	0
  2160  002000  6F0E               	movwf	vfprintf@fp& (0+255),b
  2161  002002  0E00               	movlw	0
  2162  002004  6F0F               	movwf	(vfprintf@fp+1)& (0+255),b
  2163  002006  C114  F110         	movff	printf@fmt,vfprintf@fmt
  2164  00200A  C115  F111         	movff	printf@fmt+1,vfprintf@fmt+1
  2165  00200E  0E18               	movlw	low printf@ap
  2166  002010  6F12               	movwf	vfprintf@ap& (0+255),b
  2167  002012  0E01               	movlw	high printf@ap
  2168  002014  6F13               	movwf	(vfprintf@ap+1)& (0+255),b
  2169  002016  EC85  F00E         	call	_vfprintf	;wreg free
  2170  00201A  0012               	return		;funcret
  2171  00201C                     __end_of_printf:
  2172                           	opt callstack 0
  2173                           
  2174 ;; *************** function _vfprintf *****************
  2175 ;; Defined at:
  2176 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  fp              2   14[BANK1 ] PTR struct _IO_FILE
  2179 ;;		 -> NULL(0), 
  2180 ;;  fmt             2   16[BANK1 ] PTR const unsigned char 
  2181 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_3(17), 
  2182 ;;		 -> STR_2(26), STR_1(10), 
  2183 ;;  ap              2   18[BANK1 ] PTR PTR void 
  2184 ;;		 -> printf@ap(2), 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  cfmt            2  114[BANK0 ] PTR unsigned char 
  2187 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_3(17), 
  2188 ;;		 -> STR_2(26), STR_1(10), 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  2   14[BANK1 ] int 
  2191 ;; Registers used:
  2192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2198 ;;      Params:         0       0       6       0
  2199 ;;      Locals:         0       2       0       0
  2200 ;;      Temps:          0       0       0       0
  2201 ;;      Totals:         0       2       6       0
  2202 ;;Total ram usage:        8 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:   17
  2205 ;; This function calls:
  2206 ;;		_vfpfcnvrt
  2207 ;; This function is called by:
  2208 ;;		_printf
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text8
  2213  001D0A                     __ptext8:
  2214                           	opt callstack 0
  2215  001D0A                     _vfprintf:
  2216                           	opt callstack 10
  2217                           
  2218                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  2219                           
  2220                           ;incstack = 0
  2221  001D0A  C110  F0D2         	movff	vfprintf@fmt,vfprintf@cfmt
  2222  001D0E  C111  F0D3         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2223                           
  2224                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  2225  001D12  0E00               	movlw	0
  2226  001D14  0101               	movlb	1	; () banked
  2227  001D16  6F2D               	movwf	(_nout+1)& (0+255),b
  2228  001D18  0E00               	movlw	0
  2229  001D1A  6F2C               	movwf	_nout& (0+255),b
  2230                           
  2231                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2232  001D1C  D017               	goto	l3258
  2233  001D1E                     l3256:
  2234                           
  2235                           ; BSR set to: 1
  2236                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2237  001D1E  C10E  F0C4         	movff	vfprintf@fp,vfpfcnvrt@fp
  2238  001D22  C10F  F0C5         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2239  001D26  0ED2               	movlw	low vfprintf@cfmt
  2240  001D28  0100               	movlb	0	; () banked
  2241  001D2A  6FC6               	movwf	vfpfcnvrt@fmt& (0+255),b
  2242  001D2C  0E00               	movlw	high vfprintf@cfmt
  2243  001D2E  6FC7               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2244  001D30  C112  F0C8         	movff	vfprintf@ap,vfpfcnvrt@ap
  2245  001D34  C113  F0C9         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2246  001D38  ECAF  F001         	call	_vfpfcnvrt	;wreg free
  2247  001D3C  0100               	movlb	0	; () banked
  2248  001D3E  51C4               	movf	?_vfpfcnvrt& (0+255),w,b
  2249  001D40  0101               	movlb	1	; () banked
  2250  001D42  272C               	addwf	_nout& (0+255),f,b
  2251  001D44  0100               	movlb	0	; () banked
  2252  001D46  51C5               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2253  001D48  0101               	movlb	1	; () banked
  2254  001D4A  232D               	addwfc	(_nout+1)& (0+255),f,b
  2255  001D4C                     l3258:
  2256                           
  2257                           ; BSR set to: 1
  2258                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2259  001D4C  C0D2  FFF6         	movff	vfprintf@cfmt,tblptrl
  2260  001D50  C0D3  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2261  001D54                     	if	0	;tblptru may be non-zero
  2262  001D54                     	endif
  2263  001D54                     	if	0	;tblptru may be non-zero
  2264  001D54                     	endif
  2265  001D54  0008               	tblrd		*
  2266  001D56  50F5               	movf	tablat,w,c
  2267  001D58  0900               	iorlw	0
  2268  001D5A  A4D8               	btfss	status,2,c
  2269  001D5C  D7E0               	goto	l3256
  2270                           
  2271                           ; BSR set to: 1
  2272                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  2273  001D5E  C12C  F10E         	movff	_nout,?_vfprintf
  2274  001D62  C12D  F10F         	movff	_nout+1,?_vfprintf+1
  2275                           
  2276                           ; BSR set to: 1
  2277  001D66  0012               	return		;funcret
  2278  001D68                     __end_of_vfprintf:
  2279                           	opt callstack 0
  2280                           
  2281 ;; *************** function _vfpfcnvrt *****************
  2282 ;; Defined at:
  2283 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  fp              2  100[BANK0 ] PTR struct _IO_FILE
  2286 ;;		 -> NULL(0), 
  2287 ;;  fmt             2  102[BANK0 ] PTR PTR unsigned char 
  2288 ;;		 -> vfprintf@cfmt(2), 
  2289 ;;  ap              2  104[BANK0 ] PTR PTR void 
  2290 ;;		 -> printf@ap(2), 
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;  ll              8  106[BANK0 ] long long 
  2293 ;;  llu             8    0        unsigned long long 
  2294 ;;  f               4    0        unsigned long long 
  2295 ;;  vp              3    0        PTR void 
  2296 ;;  ct              3    0        unsigned char [3]
  2297 ;;  cp              3    0        PTR unsigned char 
  2298 ;;  i               2    0        int 
  2299 ;;  done            2    0        int 
  2300 ;;  c               1    0        unsigned char 
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  2  100[BANK0 ] int 
  2303 ;; Registers used:
  2304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2310 ;;      Params:         0       6       0       0
  2311 ;;      Locals:         0       8       0       0
  2312 ;;      Temps:          0       0      14       0
  2313 ;;      Totals:         0      14      14       0
  2314 ;;Total ram usage:       28 bytes
  2315 ;; Hardware stack levels used:    1
  2316 ;; Hardware stack levels required when called:   16
  2317 ;; This function calls:
  2318 ;;		_dtoa
  2319 ;;		_fputc
  2320 ;;		_strncmp
  2321 ;; This function is called by:
  2322 ;;		_vfprintf
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text9
  2327  00035E                     __ptext9:
  2328                           	opt callstack 0
  2329  00035E                     _vfpfcnvrt:
  2330                           	opt callstack 10
  2331                           
  2332                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  2333                           
  2334                           ; BSR set to: 1
  2335                           ;incstack = 0
  2336  00035E  C0C6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2337  000362  C0C7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2338  000366  CFDE FFF6          	movff	postinc2,tblptrl
  2339  00036A  CFDD FFF7          	movff	postdec2,tblptrh
  2340  00036E                     	if	0	;tblptru may be non-zero
  2341  00036E                     	endif
  2342  00036E                     	if	0	;tblptru may be non-zero
  2343  00036E                     	endif
  2344  00036E  0008               	tblrd		*
  2345  000370  50F5               	movf	tablat,w,c
  2346  000372  0A25               	xorlw	37
  2347  000374  A4D8               	btfss	status,2,c
  2348  000376  D126               	goto	l3244
  2349                           
  2350                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2351  000378  C0C6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2352  00037C  C0C7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2353  000380  2ADE               	incf	postinc2,f,c
  2354  000382  0E00               	movlw	0
  2355  000384  22DD               	addwfc	postdec2,f,c
  2356                           
  2357                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  2358  000386  0E00               	movlw	0
  2359  000388  0100               	movlb	0	; () banked
  2360  00038A  6FD5               	movwf	(_width+1)& (0+255),b
  2361  00038C  0E00               	movlw	0
  2362  00038E  6FD4               	movwf	_width& (0+255),b
  2363  000390  C0D4  F0D8         	movff	_width,_flags
  2364  000394  C0D5  F0D9         	movff	_width+1,_flags+1
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  2368  000398  69D6               	setf	_prec& (0+255),b
  2369  00039A  69D7               	setf	(_prec+1)& (0+255),b
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  2373  00039C  C0C6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2374  0003A0  C0C7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2375  0003A4  CFDE FFF6          	movff	postinc2,tblptrl
  2376  0003A8  CFDD FFF7          	movff	postdec2,tblptrh
  2377  0003AC                     	if	0	;tblptru may be non-zero
  2378  0003AC                     	endif
  2379  0003AC                     	if	0	;tblptru may be non-zero
  2380  0003AC                     	endif
  2381  0003AC  0008               	tblrd		*
  2382  0003AE  50F5               	movf	tablat,w,c
  2383  0003B0  0A64               	xorlw	100
  2384  0003B2  B4D8               	btfsc	status,2,c
  2385  0003B4  D00D               	goto	u3340
  2386                           
  2387                           ; BSR set to: 0
  2388  0003B6  C0C6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2389  0003BA  C0C7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2390  0003BE  CFDE FFF6          	movff	postinc2,tblptrl
  2391  0003C2  CFDD FFF7          	movff	postdec2,tblptrh
  2392  0003C6                     	if	0	;tblptru may be non-zero
  2393  0003C6                     	endif
  2394  0003C6                     	if	0	;tblptru may be non-zero
  2395  0003C6                     	endif
  2396  0003C6  0008               	tblrd		*
  2397  0003C8  50F5               	movf	tablat,w,c
  2398  0003CA  0A69               	xorlw	105
  2399  0003CC  A4D8               	btfss	status,2,c
  2400  0003CE  D03F               	goto	l3218
  2401  0003D0                     u3340:
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  2405  0003D0  C0C6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2406  0003D4  C0C7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2407  0003D8  2ADE               	incf	postinc2,f,c
  2408  0003DA  0E00               	movlw	0
  2409  0003DC  22DD               	addwfc	postdec2,f,c
  2410                           
  2411                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  2412  0003DE  C0C8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2413  0003E2  C0C9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2414  0003E6  CFDF F100          	movff	indf2,??_vfpfcnvrt
  2415  0003EA  0E02               	movlw	2
  2416  0003EC  26DE               	addwf	postinc2,f,c
  2417  0003EE  CFDF F101          	movff	indf2,??_vfpfcnvrt+1
  2418  0003F2  0E00               	movlw	0
  2419  0003F4  22DD               	addwfc	postdec2,f,c
  2420  0003F6  C100  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2421  0003FA  C101  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2422  0003FE  CFDE F0CA          	movff	postinc2,vfpfcnvrt@ll
  2423  000402  CFDD F0CB          	movff	postdec2,vfpfcnvrt@ll+1
  2424  000406  0E00               	movlw	0
  2425  000408  BFCB               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2426  00040A  0EFF               	movlw	-1
  2427  00040C  6FCC               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2428  00040E  6FCD               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2429  000410  6FCE               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2430  000412  6FCF               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2431  000414  6FD0               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2432  000416  6FD1               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  2436  000418  C0C4  F0A0         	movff	vfpfcnvrt@fp,dtoa@fp
  2437  00041C  C0C5  F0A1         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2438  000420  C0CA  F0A2         	movff	vfpfcnvrt@ll,dtoa@d
  2439  000424  C0CB  F0A3         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2440  000428  C0CC  F0A4         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2441  00042C  C0CD  F0A5         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2442  000430  C0CE  F0A6         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2443  000434  C0CF  F0A7         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2444  000438  C0D0  F0A8         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2445  00043C  C0D1  F0A9         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2446  000440  EC46  F004         	call	_dtoa	;wreg free
  2447  000444  C0A0  F0C4         	movff	?_dtoa,?_vfpfcnvrt
  2448  000448  C0A1  F0C5         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2449  00044C  0012               	return	
  2450  00044E                     l3218:
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  2454  00044E  C0C6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2455  000452  C0C7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2456  000456  CFDE F084          	movff	postinc2,strncmp@_l
  2457  00045A  CFDD F085          	movff	postdec2,strncmp@_l+1
  2458  00045E  0E56               	movlw	low STR_7
  2459  000460  6F86               	movwf	strncmp@_r& (0+255),b
  2460  000462  0E03               	movlw	high STR_7
  2461  000464  6F87               	movwf	(strncmp@_r+1)& (0+255),b
  2462  000466  0E00               	movlw	0
  2463  000468  6F89               	movwf	(strncmp@n+1)& (0+255),b
  2464  00046A  0E02               	movlw	2
  2465  00046C  6F88               	movwf	strncmp@n& (0+255),b
  2466  00046E  EC0A  F00C         	call	_strncmp	;wreg free
  2467  000472  0100               	movlb	0	; () banked
  2468  000474  5184               	movf	?_strncmp& (0+255),w,b
  2469  000476  1185               	iorwf	(?_strncmp+1)& (0+255),w,b
  2470  000478  B4D8               	btfsc	status,2,c
  2471  00047A  D017               	goto	u3360
  2472                           
  2473                           ; BSR set to: 0
  2474  00047C  C0C6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2475  000480  C0C7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2476  000484  CFDE F084          	movff	postinc2,strncmp@_l
  2477  000488  CFDD F085          	movff	postdec2,strncmp@_l+1
  2478  00048C  0E59               	movlw	low STR_11
  2479  00048E  6F86               	movwf	strncmp@_r& (0+255),b
  2480  000490  0E03               	movlw	high STR_11
  2481  000492  6F87               	movwf	(strncmp@_r+1)& (0+255),b
  2482  000494  0E00               	movlw	0
  2483  000496  6F89               	movwf	(strncmp@n+1)& (0+255),b
  2484  000498  0E02               	movlw	2
  2485  00049A  6F88               	movwf	strncmp@n& (0+255),b
  2486  00049C  EC0A  F00C         	call	_strncmp	;wreg free
  2487  0004A0  0100               	movlb	0	; () banked
  2488  0004A2  5184               	movf	?_strncmp& (0+255),w,b
  2489  0004A4  1185               	iorwf	(?_strncmp+1)& (0+255),w,b
  2490  0004A6  A4D8               	btfss	status,2,c
  2491  0004A8  D05D               	goto	l3228
  2492  0004AA                     u3360:
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  2496  0004AA  0E02               	movlw	2
  2497  0004AC  C0C6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2498  0004B0  C0C7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2499  0004B4  26DE               	addwf	postinc2,f,c
  2500  0004B6  0E00               	movlw	0
  2501  0004B8  22DD               	addwfc	postdec2,f,c
  2502                           
  2503                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  2504  0004BA  C0C8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2505  0004BE  C0C9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2506  0004C2  CFDF F100          	movff	indf2,??_vfpfcnvrt
  2507  0004C6  0E04               	movlw	4
  2508  0004C8  26DE               	addwf	postinc2,f,c
  2509  0004CA  CFDF F101          	movff	indf2,??_vfpfcnvrt+1
  2510  0004CE  0E00               	movlw	0
  2511  0004D0  22DD               	addwfc	postdec2,f,c
  2512  0004D2  C100  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2513  0004D6  C101  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2514  0004DA  CFDE F102          	movff	postinc2,??_vfpfcnvrt+2
  2515  0004DE  CFDE F103          	movff	postinc2,??_vfpfcnvrt+3
  2516  0004E2  CFDE F104          	movff	postinc2,??_vfpfcnvrt+4
  2517  0004E6  CFDE F105          	movff	postinc2,??_vfpfcnvrt+5
  2518  0004EA  C102  F106         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  2519  0004EE  C103  F107         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  2520  0004F2  C104  F108         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  2521  0004F6  C105  F109         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  2522  0004FA  0101               	movlb	1	; () banked
  2523  0004FC  6B0A               	clrf	(??_vfpfcnvrt+10)& (0+255),b
  2524  0004FE  BF09               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,b
  2525  000500  690A               	setf	(??_vfpfcnvrt+10)& (0+255),b
  2526  000502  C10A  F10B         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  2527  000506  C10A  F10C         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  2528  00050A  C10A  F10D         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  2529  00050E  C106  F0CA         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  2530  000512  C107  F0CB         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  2531  000516  C108  F0CC         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  2532  00051A  C109  F0CD         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  2533  00051E  C10A  F0CE         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  2534  000522  C10B  F0CF         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  2535  000526  C10C  F0D0         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  2536  00052A  C10D  F0D1         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  2537                           
  2538                           ; BSR set to: 1
  2539                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 841:             return dtoa(
      +                          fp, ll);
  2540  00052E  C0C4  F0A0         	movff	vfpfcnvrt@fp,dtoa@fp
  2541  000532  C0C5  F0A1         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2542  000536  C0CA  F0A2         	movff	vfpfcnvrt@ll,dtoa@d
  2543  00053A  C0CB  F0A3         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2544  00053E  C0CC  F0A4         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2545  000542  C0CD  F0A5         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2546  000546  C0CE  F0A6         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2547  00054A  C0CF  F0A7         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2548  00054E  C0D0  F0A8         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2549  000552  C0D1  F0A9         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2550  000556  EC46  F004         	call	_dtoa	;wreg free
  2551  00055A  C0A0  F0C4         	movff	?_dtoa,?_vfpfcnvrt
  2552  00055E  C0A1  F0C5         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2553  000562  0012               	return	
  2554  000564                     l3228:
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  2558  000564  C0C6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2559  000568  C0C7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2560  00056C  CFDE FFF6          	movff	postinc2,tblptrl
  2561  000570  CFDD FFF7          	movff	postdec2,tblptrh
  2562  000574                     	if	0	;tblptru may be non-zero
  2563  000574                     	endif
  2564  000574                     	if	0	;tblptru may be non-zero
  2565  000574                     	endif
  2566  000574  0008               	tblrd		*
  2567  000576  50F5               	movf	tablat,w,c
  2568  000578  0A25               	xorlw	37
  2569  00057A  A4D8               	btfss	status,2,c
  2570  00057C  D017               	goto	l3238
  2571                           
  2572                           ; BSR set to: 0
  2573                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  2574  00057E  C0C6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2575  000582  C0C7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2576  000586  2ADE               	incf	postinc2,f,c
  2577  000588  0E00               	movlw	0
  2578  00058A  22DD               	addwfc	postdec2,f,c
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  2582  00058C  0E00               	movlw	0
  2583  00058E  6F86               	movwf	(fputc@c+1)& (0+255),b
  2584  000590  0E25               	movlw	37
  2585  000592  6F85               	movwf	fputc@c& (0+255),b
  2586  000594  C0C4  F087         	movff	vfpfcnvrt@fp,fputc@fp
  2587  000598  C0C5  F088         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2588  00059C  EC18  F00E         	call	_fputc	;wreg free
  2589  0005A0                     l3234:
  2590                           
  2591                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  2592  0005A0  0E00               	movlw	0
  2593  0005A2  0100               	movlb	0	; () banked
  2594  0005A4  6FC5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2595  0005A6  0E01               	movlw	1
  2596  0005A8  6FC4               	movwf	?_vfpfcnvrt& (0+255),b
  2597  0005AA  0012               	return	
  2598  0005AC                     l3238:
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  2602  0005AC  C0C6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2603  0005B0  C0C7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2604  0005B4  2ADE               	incf	postinc2,f,c
  2605  0005B6  0E00               	movlw	0
  2606  0005B8  22DD               	addwfc	postdec2,f,c
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  2610  0005BA  0E00               	movlw	0
  2611  0005BC  6FC5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2612  0005BE  0E00               	movlw	0
  2613  0005C0  6FC4               	movwf	?_vfpfcnvrt& (0+255),b
  2614  0005C2  0012               	return	
  2615  0005C4                     l3244:
  2616                           
  2617                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  2618  0005C4  C0C6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2619  0005C8  C0C7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2620  0005CC  CFDE FFF6          	movff	postinc2,tblptrl
  2621  0005D0  CFDD FFF7          	movff	postdec2,tblptrh
  2622  0005D4                     	if	0	;tblptru may be non-zero
  2623  0005D4                     	endif
  2624  0005D4                     	if	0	;tblptru may be non-zero
  2625  0005D4                     	endif
  2626  0005D4  0008               	tblrd		*
  2627  0005D6  50F5               	movf	tablat,w,c
  2628  0005D8  0100               	movlb	0	; () banked
  2629  0005DA  6F85               	movwf	fputc@c& (0+255),b
  2630  0005DC  6B86               	clrf	(fputc@c+1)& (0+255),b
  2631  0005DE  C0C4  F087         	movff	vfpfcnvrt@fp,fputc@fp
  2632  0005E2  C0C5  F088         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2633  0005E6  EC18  F00E         	call	_fputc	;wreg free
  2634                           
  2635                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  2636  0005EA  C0C6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2637  0005EE  C0C7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2638  0005F2  2ADE               	incf	postinc2,f,c
  2639  0005F4  0E00               	movlw	0
  2640  0005F6  22DD               	addwfc	postdec2,f,c
  2641  0005F8  D7D3               	goto	l3234
  2642  0005FA                     __end_of_vfpfcnvrt:
  2643                           	opt callstack 0
  2644                           
  2645 ;; *************** function _strncmp *****************
  2646 ;; Defined at:
  2647 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  _l              2   36[BANK0 ] PTR const unsigned char 
  2650 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_3(17), 
  2651 ;;		 -> STR_2(26), STR_1(10), 
  2652 ;;  _r              2   38[BANK0 ] PTR const unsigned char 
  2653 ;;		 -> STR_13(3), STR_9(3), 
  2654 ;;  n               2   40[BANK0 ] unsigned int 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  r               2   45[BANK0 ] PTR const unsigned char 
  2657 ;;		 -> STR_13(3), STR_9(3), 
  2658 ;;  l               2   43[BANK0 ] PTR const unsigned char 
  2659 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_3(17), 
  2660 ;;		 -> STR_2(26), STR_1(10), 
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  2   36[BANK0 ] int 
  2663 ;; Registers used:
  2664 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2670 ;;      Params:         0       6       0       0
  2671 ;;      Locals:         0       4       0       0
  2672 ;;      Temps:          0       1       0       0
  2673 ;;      Totals:         0      11       0       0
  2674 ;;Total ram usage:       11 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; Hardware stack levels required when called:   11
  2677 ;; This function calls:
  2678 ;;		Nothing
  2679 ;; This function is called by:
  2680 ;;		_vfpfcnvrt
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text10
  2685  001814                     __ptext10:
  2686                           	opt callstack 0
  2687  001814                     _strncmp:
  2688                           	opt callstack 14
  2689                           
  2690                           ;incstack = 0
  2691  001814  C084  F08B         	movff	strncmp@_l,strncmp@l
  2692  001818  C085  F08C         	movff	strncmp@_l+1,strncmp@l+1
  2693  00181C  C086  F08D         	movff	strncmp@_r,strncmp@r
  2694  001820  C087  F08E         	movff	strncmp@_r+1,strncmp@r+1
  2695  001824  0100               	movlb	0	; () banked
  2696  001826  0788               	decf	strncmp@n& (0+255),f,b
  2697  001828  A0D8               	btfss	status,0,c
  2698  00182A  0789               	decf	(strncmp@n+1)& (0+255),f,b
  2699  00182C  2988               	incf	strncmp@n& (0+255),w,b
  2700  00182E  E10F               	bnz	l3188
  2701  001830  2989               	incf	(strncmp@n+1)& (0+255),w,b
  2702  001832  A4D8               	btfss	status,2,c
  2703  001834  D00C               	goto	l3188
  2704                           
  2705                           ; BSR set to: 0
  2706  001836  0E00               	movlw	0
  2707  001838  6F85               	movwf	(?_strncmp+1)& (0+255),b
  2708  00183A  0E00               	movlw	0
  2709  00183C  6F84               	movwf	?_strncmp& (0+255),b
  2710  00183E  0012               	return	
  2711  001840                     l3186:
  2712                           
  2713                           ; BSR set to: 0
  2714  001840  4B8B               	infsnz	strncmp@l& (0+255),f,b
  2715  001842  2B8C               	incf	(strncmp@l+1)& (0+255),f,b
  2716  001844  4B8D               	infsnz	strncmp@r& (0+255),f,b
  2717  001846  2B8E               	incf	(strncmp@r+1)& (0+255),f,b
  2718  001848  0788               	decf	strncmp@n& (0+255),f,b
  2719  00184A  A0D8               	btfss	status,0,c
  2720  00184C  0789               	decf	(strncmp@n+1)& (0+255),f,b
  2721  00184E                     l3188:
  2722                           
  2723                           ; BSR set to: 0
  2724  00184E  C08B  FFF6         	movff	strncmp@l,tblptrl
  2725  001852  C08C  FFF7         	movff	strncmp@l+1,tblptrh
  2726  001856                     	if	0	;tblptru may be non-zero
  2727  001856                     	endif
  2728  001856                     	if	0	;tblptru may be non-zero
  2729  001856                     	endif
  2730  001856  0008               	tblrd		*
  2731  001858  50F5               	movf	tablat,w,c
  2732  00185A  0900               	iorlw	0
  2733  00185C  B4D8               	btfsc	status,2,c
  2734  00185E  D01D               	goto	u3310
  2735                           
  2736                           ; BSR set to: 0
  2737  001860  C08D  FFF6         	movff	strncmp@r,tblptrl
  2738  001864  C08E  FFF7         	movff	strncmp@r+1,tblptrh
  2739  001868                     	if	0	;tblptru may be non-zero
  2740  001868                     	endif
  2741  001868                     	if	0	;tblptru may be non-zero
  2742  001868                     	endif
  2743  001868  0008               	tblrd		*
  2744  00186A  50F5               	movf	tablat,w,c
  2745  00186C  0900               	iorlw	0
  2746  00186E  B4D8               	btfsc	status,2,c
  2747  001870  D014               	goto	u3310
  2748                           
  2749                           ; BSR set to: 0
  2750  001872  5188               	movf	strncmp@n& (0+255),w,b
  2751  001874  1189               	iorwf	(strncmp@n+1)& (0+255),w,b
  2752  001876  B4D8               	btfsc	status,2,c
  2753  001878  D010               	goto	u3310
  2754                           
  2755                           ; BSR set to: 0
  2756  00187A  C08B  FFF6         	movff	strncmp@l,tblptrl
  2757  00187E  C08C  FFF7         	movff	strncmp@l+1,tblptrh
  2758  001882                     	if	0	;tblptru may be non-zero
  2759  001882                     	endif
  2760  001882                     	if	0	;tblptru may be non-zero
  2761  001882                     	endif
  2762  001882  0008               	tblrd		*
  2763  001884  CFF5 F08A          	movff	tablat,??_strncmp
  2764  001888  C08D  FFF6         	movff	strncmp@r,tblptrl
  2765  00188C  C08E  FFF7         	movff	strncmp@r+1,tblptrh
  2766  001890                     	if	0	;tblptru may be non-zero
  2767  001890                     	endif
  2768  001890                     	if	0	;tblptru may be non-zero
  2769  001890                     	endif
  2770  001890  0008               	tblrd		*
  2771  001892  50F5               	movf	tablat,w,c
  2772  001894  198A               	xorwf	??_strncmp& (0+255),w,b
  2773  001896  B4D8               	btfsc	status,2,c
  2774  001898  D7D3               	goto	l3186
  2775  00189A                     u3310:
  2776                           
  2777                           ; BSR set to: 0
  2778  00189A  C08B  FFF6         	movff	strncmp@l,tblptrl
  2779  00189E  C08C  FFF7         	movff	strncmp@l+1,tblptrh
  2780  0018A2                     	if	0	;tblptru may be non-zero
  2781  0018A2                     	endif
  2782  0018A2                     	if	0	;tblptru may be non-zero
  2783  0018A2                     	endif
  2784  0018A2  0008               	tblrd		*
  2785  0018A4  CFF5 F08A          	movff	tablat,??_strncmp
  2786  0018A8  C08D  FFF6         	movff	strncmp@r,tblptrl
  2787  0018AC  C08E  FFF7         	movff	strncmp@r+1,tblptrh
  2788  0018B0                     	if	0	;tblptru may be non-zero
  2789  0018B0                     	endif
  2790  0018B0                     	if	0	;tblptru may be non-zero
  2791  0018B0                     	endif
  2792  0018B0  0008               	tblrd		*
  2793  0018B2  50F5               	movf	tablat,w,c
  2794  0018B4  5D8A               	subwf	??_strncmp& (0+255),w,b
  2795  0018B6  6F84               	movwf	?_strncmp& (0+255),b
  2796  0018B8  6B85               	clrf	(?_strncmp+1)& (0+255),b
  2797  0018BA  A0D8               	btfss	status,0,c
  2798  0018BC  0785               	decf	(?_strncmp+1)& (0+255),f,b
  2799                           
  2800                           ; BSR set to: 0
  2801  0018BE  0012               	return		;funcret
  2802  0018C0                     __end_of_strncmp:
  2803                           	opt callstack 0
  2804                           
  2805 ;; *************** function _dtoa *****************
  2806 ;; Defined at:
  2807 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  fp              2   64[BANK0 ] PTR struct _IO_FILE
  2810 ;;		 -> NULL(0), 
  2811 ;;  d               8   66[BANK0 ] long long 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  n               8   90[BANK0 ] long long 
  2814 ;;  i               2   98[BANK0 ] int 
  2815 ;;  s               2   88[BANK0 ] int 
  2816 ;;  w               2   86[BANK0 ] int 
  2817 ;;  p               2   84[BANK0 ] int 
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  2   64[BANK0 ] int 
  2820 ;; Registers used:
  2821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2827 ;;      Params:         0      10       0       0
  2828 ;;      Locals:         0      18       0       0
  2829 ;;      Temps:          0       8       0       0
  2830 ;;      Totals:         0      36       0       0
  2831 ;;Total ram usage:       36 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:   15
  2834 ;; This function calls:
  2835 ;;		___aodiv
  2836 ;;		___aomod
  2837 ;;		_abs
  2838 ;;		_pad
  2839 ;; This function is called by:
  2840 ;;		_vfpfcnvrt
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           	psect	text11
  2845  00088C                     __ptext11:
  2846                           	opt callstack 0
  2847  00088C                     _dtoa:
  2848                           	opt callstack 10
  2849                           
  2850                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;incstack = 0
  2854  00088C  C0A2  F0BA         	movff	dtoa@d,dtoa@n
  2855  000890  C0A3  F0BB         	movff	dtoa@d+1,dtoa@n+1
  2856  000894  C0A4  F0BC         	movff	dtoa@d+2,dtoa@n+2
  2857  000898  C0A5  F0BD         	movff	dtoa@d+3,dtoa@n+3
  2858  00089C  C0A6  F0BE         	movff	dtoa@d+4,dtoa@n+4
  2859  0008A0  C0A7  F0BF         	movff	dtoa@d+5,dtoa@n+5
  2860  0008A4  C0A8  F0C0         	movff	dtoa@d+6,dtoa@n+6
  2861  0008A8  C0A9  F0C1         	movff	dtoa@d+7,dtoa@n+7
  2862                           
  2863                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  2864  0008AC  0100               	movlb	0	; () banked
  2865  0008AE  AFC1               	btfss	(dtoa@n+7)& (0+255),7,b
  2866  0008B0  D002               	goto	u3120
  2867  0008B2  0E01               	movlw	1
  2868  0008B4  D001               	goto	u3130
  2869  0008B6                     u3120:
  2870  0008B6  0E00               	movlw	0
  2871  0008B8                     u3130:
  2872  0008B8  6FB8               	movwf	dtoa@s& (0+255),b
  2873  0008BA  6BB9               	clrf	(dtoa@s+1)& (0+255),b
  2874                           
  2875                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  2876  0008BC  51B8               	movf	dtoa@s& (0+255),w,b
  2877  0008BE  11B9               	iorwf	(dtoa@s+1)& (0+255),w,b
  2878  0008C0  B4D8               	btfsc	status,2,c
  2879  0008C2  D010               	goto	l3124
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  2883  0008C4  1FC1               	comf	(dtoa@n+7)& (0+255),f,b
  2884  0008C6  1FC0               	comf	(dtoa@n+6)& (0+255),f,b
  2885  0008C8  1FBF               	comf	(dtoa@n+5)& (0+255),f,b
  2886  0008CA  1FBE               	comf	(dtoa@n+4)& (0+255),f,b
  2887  0008CC  1FBD               	comf	(dtoa@n+3)& (0+255),f,b
  2888  0008CE  1FBC               	comf	(dtoa@n+2)& (0+255),f,b
  2889  0008D0  1FBB               	comf	(dtoa@n+1)& (0+255),f,b
  2890  0008D2  6DBA               	negf	dtoa@n& (0+255),b
  2891  0008D4  0E00               	movlw	0
  2892  0008D6  23BB               	addwfc	(dtoa@n+1)& (0+255),f,b
  2893  0008D8  23BC               	addwfc	(dtoa@n+2)& (0+255),f,b
  2894  0008DA  23BD               	addwfc	(dtoa@n+3)& (0+255),f,b
  2895  0008DC  23BE               	addwfc	(dtoa@n+4)& (0+255),f,b
  2896  0008DE  23BF               	addwfc	(dtoa@n+5)& (0+255),f,b
  2897  0008E0  23C0               	addwfc	(dtoa@n+6)& (0+255),f,b
  2898  0008E2  23C1               	addwfc	(dtoa@n+7)& (0+255),f,b
  2899  0008E4                     l3124:
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  2903  0008E4  AFD7               	btfss	(_prec+1)& (0+255),7,b
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  2907  0008E6  93D8               	bcf	_flags& (0+255),1,b
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  2911  0008E8  BFD7               	btfsc	(_prec+1)& (0+255),7,b
  2912  0008EA  D005               	goto	u3160
  2913  0008EC  51D7               	movf	(_prec+1)& (0+255),w,b
  2914  0008EE  E108               	bnz	l258
  2915  0008F0  05D6               	decf	_prec& (0+255),w,b
  2916  0008F2  B0D8               	btfsc	status,0,c
  2917  0008F4  D005               	goto	l258
  2918  0008F6                     u3160:
  2919                           
  2920                           ; BSR set to: 0
  2921  0008F6  0E00               	movlw	0
  2922  0008F8  6FB5               	movwf	(dtoa@p+1)& (0+255),b
  2923  0008FA  0E01               	movlw	1
  2924  0008FC  6FB4               	movwf	dtoa@p& (0+255),b
  2925  0008FE  D004               	goto	l260
  2926  000900                     l258:
  2927                           
  2928                           ; BSR set to: 0
  2929  000900  C0D6  F0B4         	movff	_prec,dtoa@p
  2930  000904  C0D7  F0B5         	movff	_prec+1,dtoa@p+1
  2931  000908                     l260:
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  2935  000908  C0D4  F0B6         	movff	_width,dtoa@w
  2936  00090C  C0D5  F0B7         	movff	_width+1,dtoa@w+1
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  2940  000910  51B8               	movf	dtoa@s& (0+255),w,b
  2941  000912  11B9               	iorwf	(dtoa@s+1)& (0+255),w,b
  2942  000914  A4D8               	btfss	status,2,c
  2943  000916  D002               	goto	u3180
  2944                           
  2945                           ; BSR set to: 0
  2946  000918  A5D8               	btfss	_flags& (0+255),2,b
  2947  00091A  D003               	goto	l3138
  2948  00091C                     u3180:
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  2952  00091C  07B6               	decf	dtoa@w& (0+255),f,b
  2953  00091E  A0D8               	btfss	status,0,c
  2954  000920  07B7               	decf	(dtoa@w+1)& (0+255),f,b
  2955  000922                     l3138:
  2956                           
  2957                           ; BSR set to: 0
  2958                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  2959  000922  0E00               	movlw	0
  2960  000924  6FC3               	movwf	(dtoa@i+1)& (0+255),b
  2961  000926  0E1F               	movlw	31
  2962  000928  6FC2               	movwf	dtoa@i& (0+255),b
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  2966  00092A  0E00               	movlw	0
  2967  00092C  0101               	movlb	1	; () banked
  2968  00092E  6F4F               	movwf	(_dbuf+31)& (0+255),b
  2969                           
  2970                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2971  000930  D07D               	goto	l3152
  2972  000932                     l3142:
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  2976  000932  07C2               	decf	dtoa@i& (0+255),f,b
  2977  000934  A0D8               	btfss	status,0,c
  2978  000936  07C3               	decf	(dtoa@i+1)& (0+255),f,b
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  2982  000938  0E30               	movlw	low _dbuf
  2983  00093A  25C2               	addwf	dtoa@i& (0+255),w,b
  2984  00093C  6ED9               	movwf	fsr2l,c
  2985  00093E  0E01               	movlw	high _dbuf
  2986  000940  21C3               	addwfc	(dtoa@i+1)& (0+255),w,b
  2987  000942  6EDA               	movwf	fsr2h,c
  2988  000944  C0BA  F084         	movff	dtoa@n,___aomod@dividend
  2989  000948  C0BB  F085         	movff	dtoa@n+1,___aomod@dividend+1
  2990  00094C  C0BC  F086         	movff	dtoa@n+2,___aomod@dividend+2
  2991  000950  C0BD  F087         	movff	dtoa@n+3,___aomod@dividend+3
  2992  000954  C0BE  F088         	movff	dtoa@n+4,___aomod@dividend+4
  2993  000958  C0BF  F089         	movff	dtoa@n+5,___aomod@dividend+5
  2994  00095C  C0C0  F08A         	movff	dtoa@n+6,___aomod@dividend+6
  2995  000960  C0C1  F08B         	movff	dtoa@n+7,___aomod@dividend+7
  2996  000964  0E0A               	movlw	10
  2997  000966  6F8C               	movwf	___aomod@divisor& (0+255),b
  2998  000968  0E00               	movlw	0
  2999  00096A  6F8D               	movwf	(___aomod@divisor+1)& (0+255),b
  3000  00096C  0E00               	movlw	0
  3001  00096E  6F8E               	movwf	(___aomod@divisor+2)& (0+255),b
  3002  000970  0E00               	movlw	0
  3003  000972  6F8F               	movwf	(___aomod@divisor+3)& (0+255),b
  3004  000974  0E00               	movlw	0
  3005  000976  6F90               	movwf	(___aomod@divisor+4)& (0+255),b
  3006  000978  0E00               	movlw	0
  3007  00097A  6F91               	movwf	(___aomod@divisor+5)& (0+255),b
  3008  00097C  0E00               	movlw	0
  3009  00097E  6F92               	movwf	(___aomod@divisor+6)& (0+255),b
  3010  000980  0E00               	movlw	0
  3011  000982  6F93               	movwf	(___aomod@divisor+7)& (0+255),b
  3012  000984  EC31  F009         	call	___aomod	;wreg free
  3013  000988  C084  F0AA         	movff	?___aomod,??_dtoa
  3014  00098C  C085  F0AB         	movff	?___aomod+1,??_dtoa+1
  3015  000990  C086  F0AC         	movff	?___aomod+2,??_dtoa+2
  3016  000994  C087  F0AD         	movff	?___aomod+3,??_dtoa+3
  3017  000998  C088  F0AE         	movff	?___aomod+4,??_dtoa+4
  3018  00099C  C089  F0AF         	movff	?___aomod+5,??_dtoa+5
  3019  0009A0  C08A  F0B0         	movff	?___aomod+6,??_dtoa+6
  3020  0009A4  C08B  F0B1         	movff	?___aomod+7,??_dtoa+7
  3021  0009A8  C0AA  F096         	movff	??_dtoa,abs@a
  3022  0009AC  C0AC  F097         	movff	??_dtoa+2,abs@a+1
  3023  0009B0  EC6E  F00F         	call	_abs	;wreg free
  3024  0009B4  0100               	movlb	0	; () banked
  3025  0009B6  5196               	movf	?_abs& (0+255),w,b
  3026  0009B8  0F30               	addlw	48
  3027  0009BA  6EDF               	movwf	indf2,c
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  3031  0009BC  07B4               	decf	dtoa@p& (0+255),f,b
  3032  0009BE  A0D8               	btfss	status,0,c
  3033  0009C0  07B5               	decf	(dtoa@p+1)& (0+255),f,b
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  3037  0009C2  07B6               	decf	dtoa@w& (0+255),f,b
  3038  0009C4  A0D8               	btfss	status,0,c
  3039  0009C6  07B7               	decf	(dtoa@w+1)& (0+255),f,b
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  3043  0009C8  C0BA  F084         	movff	dtoa@n,___aodiv@dividend
  3044  0009CC  C0BB  F085         	movff	dtoa@n+1,___aodiv@dividend+1
  3045  0009D0  C0BC  F086         	movff	dtoa@n+2,___aodiv@dividend+2
  3046  0009D4  C0BD  F087         	movff	dtoa@n+3,___aodiv@dividend+3
  3047  0009D8  C0BE  F088         	movff	dtoa@n+4,___aodiv@dividend+4
  3048  0009DC  C0BF  F089         	movff	dtoa@n+5,___aodiv@dividend+5
  3049  0009E0  C0C0  F08A         	movff	dtoa@n+6,___aodiv@dividend+6
  3050  0009E4  C0C1  F08B         	movff	dtoa@n+7,___aodiv@dividend+7
  3051  0009E8  0E0A               	movlw	10
  3052  0009EA  6F8C               	movwf	___aodiv@divisor& (0+255),b
  3053  0009EC  0E00               	movlw	0
  3054  0009EE  6F8D               	movwf	(___aodiv@divisor+1)& (0+255),b
  3055  0009F0  0E00               	movlw	0
  3056  0009F2  6F8E               	movwf	(___aodiv@divisor+2)& (0+255),b
  3057  0009F4  0E00               	movlw	0
  3058  0009F6  6F8F               	movwf	(___aodiv@divisor+3)& (0+255),b
  3059  0009F8  0E00               	movlw	0
  3060  0009FA  6F90               	movwf	(___aodiv@divisor+4)& (0+255),b
  3061  0009FC  0E00               	movlw	0
  3062  0009FE  6F91               	movwf	(___aodiv@divisor+5)& (0+255),b
  3063  000A00  0E00               	movlw	0
  3064  000A02  6F92               	movwf	(___aodiv@divisor+6)& (0+255),b
  3065  000A04  0E00               	movlw	0
  3066  000A06  6F93               	movwf	(___aodiv@divisor+7)& (0+255),b
  3067  000A08  ECE8  F007         	call	___aodiv	;wreg free
  3068  000A0C  C084  F0BA         	movff	?___aodiv,dtoa@n
  3069  000A10  C085  F0BB         	movff	?___aodiv+1,dtoa@n+1
  3070  000A14  C086  F0BC         	movff	?___aodiv+2,dtoa@n+2
  3071  000A18  C087  F0BD         	movff	?___aodiv+3,dtoa@n+3
  3072  000A1C  C088  F0BE         	movff	?___aodiv+4,dtoa@n+4
  3073  000A20  C089  F0BF         	movff	?___aodiv+5,dtoa@n+5
  3074  000A24  C08A  F0C0         	movff	?___aodiv+6,dtoa@n+6
  3075  000A28  C08B  F0C1         	movff	?___aodiv+7,dtoa@n+7
  3076  000A2C                     l3152:
  3077                           
  3078                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3079  000A2C  0100               	movlb	0	; () banked
  3080  000A2E  BFC3               	btfsc	(dtoa@i+1)& (0+255),7,b
  3081  000A30  D01F               	goto	u3230
  3082  000A32  51C3               	movf	(dtoa@i+1)& (0+255),w,b
  3083  000A34  E103               	bnz	u3190
  3084  000A36  05C2               	decf	dtoa@i& (0+255),w,b
  3085  000A38  A0D8               	btfss	status,0,c
  3086  000A3A  D01A               	goto	u3230
  3087  000A3C                     u3190:
  3088                           
  3089                           ; BSR set to: 0
  3090  000A3C  51BA               	movf	dtoa@n& (0+255),w,b
  3091  000A3E  11BB               	iorwf	(dtoa@n+1)& (0+255),w,b
  3092  000A40  11BC               	iorwf	(dtoa@n+2)& (0+255),w,b
  3093  000A42  11BD               	iorwf	(dtoa@n+3)& (0+255),w,b
  3094  000A44  11BE               	iorwf	(dtoa@n+4)& (0+255),w,b
  3095  000A46  11BF               	iorwf	(dtoa@n+5)& (0+255),w,b
  3096  000A48  11C0               	iorwf	(dtoa@n+6)& (0+255),w,b
  3097  000A4A  11C1               	iorwf	(dtoa@n+7)& (0+255),w,b
  3098  000A4C  A4D8               	btfss	status,2,c
  3099  000A4E  D771               	goto	l3142
  3100                           
  3101                           ; BSR set to: 0
  3102  000A50  BFB5               	btfsc	(dtoa@p+1)& (0+255),7,b
  3103  000A52  D005               	goto	u3210
  3104  000A54  51B5               	movf	(dtoa@p+1)& (0+255),w,b
  3105  000A56  E102               	bnz	u3211
  3106  000A58  05B4               	decf	dtoa@p& (0+255),w,b
  3107  000A5A  B0D8               	btfsc	status,0,c
  3108  000A5C                     u3211:
  3109  000A5C  D76A               	goto	l3142
  3110  000A5E                     u3210:
  3111                           
  3112                           ; BSR set to: 0
  3113  000A5E  BFB7               	btfsc	(dtoa@w+1)& (0+255),7,b
  3114  000A60  D007               	goto	u3230
  3115  000A62  51B7               	movf	(dtoa@w+1)& (0+255),w,b
  3116  000A64  E103               	bnz	u3220
  3117  000A66  05B6               	decf	dtoa@w& (0+255),w,b
  3118  000A68  A0D8               	btfss	status,0,c
  3119  000A6A  D002               	goto	u3230
  3120  000A6C                     u3220:
  3121                           
  3122                           ; BSR set to: 0
  3123  000A6C  B3D8               	btfsc	_flags& (0+255),1,b
  3124  000A6E  D761               	goto	l3142
  3125  000A70                     u3230:
  3126                           
  3127                           ; BSR set to: 0
  3128                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  3129  000A70  51B8               	movf	dtoa@s& (0+255),w,b
  3130  000A72  11B9               	iorwf	(dtoa@s+1)& (0+255),w,b
  3131  000A74  A4D8               	btfss	status,2,c
  3132  000A76  D002               	goto	u3250
  3133                           
  3134                           ; BSR set to: 0
  3135  000A78  A5D8               	btfss	_flags& (0+255),2,b
  3136  000A7A  D017               	goto	l3176
  3137  000A7C                     u3250:
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  3141  000A7C  07C2               	decf	dtoa@i& (0+255),f,b
  3142  000A7E  A0D8               	btfss	status,0,c
  3143  000A80  07C3               	decf	(dtoa@i+1)& (0+255),f,b
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  3147  000A82  51B8               	movf	dtoa@s& (0+255),w,b
  3148  000A84  11B9               	iorwf	(dtoa@s+1)& (0+255),w,b
  3149  000A86  A4D8               	btfss	status,2,c
  3150  000A88  D004               	goto	l3172
  3151                           
  3152                           ; BSR set to: 0
  3153  000A8A  0E00               	movlw	0
  3154  000A8C  6FB3               	movwf	(_dtoa$870+1)& (0+255),b
  3155  000A8E  0E2B               	movlw	43
  3156  000A90  D003               	goto	L1
  3157  000A92                     l3172:
  3158                           
  3159                           ; BSR set to: 0
  3160  000A92  0E00               	movlw	0
  3161  000A94  6FB3               	movwf	(_dtoa$870+1)& (0+255),b
  3162  000A96  0E2D               	movlw	45
  3163  000A98                     L1:
  3164  000A98  6FB2               	movwf	_dtoa$870& (0+255),b
  3165                           
  3166                           ; BSR set to: 0
  3167  000A9A  0E30               	movlw	low _dbuf
  3168  000A9C  25C2               	addwf	dtoa@i& (0+255),w,b
  3169  000A9E  6ED9               	movwf	fsr2l,c
  3170  000AA0  0E01               	movlw	high _dbuf
  3171  000AA2  21C3               	addwfc	(dtoa@i+1)& (0+255),w,b
  3172  000AA4  6EDA               	movwf	fsr2h,c
  3173  000AA6  C0B2  FFDF         	movff	_dtoa$870,indf2
  3174  000AAA                     l3176:
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  3178  000AAA  C0A0  F095         	movff	dtoa@fp,pad@fp
  3179  000AAE  C0A1  F096         	movff	dtoa@fp+1,pad@fp+1
  3180  000AB2  0E30               	movlw	low _dbuf
  3181  000AB4  25C2               	addwf	dtoa@i& (0+255),w,b
  3182  000AB6  6F97               	movwf	pad@buf& (0+255),b
  3183  000AB8  0E01               	movlw	high _dbuf
  3184  000ABA  21C3               	addwfc	(dtoa@i+1)& (0+255),w,b
  3185  000ABC  6F98               	movwf	(pad@buf+1)& (0+255),b
  3186  000ABE  C0B6  F099         	movff	dtoa@w,pad@p
  3187  000AC2  C0B7  F09A         	movff	dtoa@w+1,pad@p+1
  3188  000AC6  ECB5  F00C         	call	_pad	;wreg free
  3189  000ACA  C095  F0A0         	movff	?_pad,?_dtoa
  3190  000ACE  C096  F0A1         	movff	?_pad+1,?_dtoa+1
  3191  000AD2  0012               	return		;funcret
  3192  000AD4                     __end_of_dtoa:
  3193                           	opt callstack 0
  3194                           
  3195 ;; *************** function _pad *****************
  3196 ;; Defined at:
  3197 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  3200 ;;		 -> NULL(0), 
  3201 ;;  buf             2   55[BANK0 ] PTR unsigned char 
  3202 ;;		 -> dbuf(32), 
  3203 ;;  p               2   57[BANK0 ] int 
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;  w               2   62[BANK0 ] int 
  3206 ;;  i               2   60[BANK0 ] int 
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  2   53[BANK0 ] int 
  3209 ;; Registers used:
  3210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3216 ;;      Params:         0       6       0       0
  3217 ;;      Locals:         0       4       0       0
  3218 ;;      Temps:          0       1       0       0
  3219 ;;      Totals:         0      11       0       0
  3220 ;;Total ram usage:       11 bytes
  3221 ;; Hardware stack levels used:    1
  3222 ;; Hardware stack levels required when called:   14
  3223 ;; This function calls:
  3224 ;;		_fputc
  3225 ;;		_fputs
  3226 ;;		_strlen
  3227 ;; This function is called by:
  3228 ;;		_dtoa
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232                           	psect	text12
  3233  00196A                     __ptext12:
  3234                           	opt callstack 0
  3235  00196A                     _pad:
  3236                           	opt callstack 10
  3237                           
  3238                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  3239                           
  3240                           ;incstack = 0
  3241  00196A  0100               	movlb	0	; () banked
  3242  00196C  A1D8               	btfss	_flags& (0+255),0,b
  3243  00196E  D00A               	goto	l3016
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  3247  001970  C097  F08E         	movff	pad@buf,fputs@s
  3248  001974  C098  F08F         	movff	pad@buf+1,fputs@s+1
  3249  001978  C095  F090         	movff	pad@fp,fputs@fp
  3250  00197C  C096  F091         	movff	pad@fp+1,fputs@fp+1
  3251  001980  EC34  F00F         	call	_fputs	;wreg free
  3252  001984                     l3016:
  3253                           
  3254                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  3255  001984  0100               	movlb	0	; () banked
  3256  001986  BF9A               	btfsc	(pad@p+1)& (0+255),7,b
  3257  001988  D005               	goto	l3020
  3258                           
  3259                           ; BSR set to: 0
  3260  00198A  C099  F09E         	movff	pad@p,pad@w
  3261  00198E  C09A  F09F         	movff	pad@p+1,pad@w+1
  3262  001992  D004               	goto	l247
  3263  001994                     l3020:
  3264                           
  3265                           ; BSR set to: 0
  3266  001994  0E00               	movlw	0
  3267  001996  6F9F               	movwf	(pad@w+1)& (0+255),b
  3268  001998  0E00               	movlw	0
  3269  00199A  6F9E               	movwf	pad@w& (0+255),b
  3270  00199C                     l247:
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  3274  00199C  0E00               	movlw	0
  3275  00199E  6F9D               	movwf	(pad@i+1)& (0+255),b
  3276  0019A0  0E00               	movlw	0
  3277  0019A2  6F9C               	movwf	pad@i& (0+255),b
  3278                           
  3279                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  3280  0019A4  D00D               	goto	l3026
  3281  0019A6                     l3022:
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  3285  0019A6  0E00               	movlw	0
  3286  0019A8  6F86               	movwf	(fputc@c+1)& (0+255),b
  3287  0019AA  0E20               	movlw	32
  3288  0019AC  6F85               	movwf	fputc@c& (0+255),b
  3289  0019AE  C095  F087         	movff	pad@fp,fputc@fp
  3290  0019B2  C096  F088         	movff	pad@fp+1,fputc@fp+1
  3291  0019B6  EC18  F00E         	call	_fputc	;wreg free
  3292                           
  3293                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  3294  0019BA  0100               	movlb	0	; () banked
  3295  0019BC  4B9C               	infsnz	pad@i& (0+255),f,b
  3296  0019BE  2B9D               	incf	(pad@i+1)& (0+255),f,b
  3297  0019C0                     l3026:
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  3301  0019C0  519E               	movf	pad@w& (0+255),w,b
  3302  0019C2  5D9C               	subwf	pad@i& (0+255),w,b
  3303  0019C4  519D               	movf	(pad@i+1)& (0+255),w,b
  3304  0019C6  0A80               	xorlw	128
  3305  0019C8  6F9B               	movwf	??_pad& (0+255),b
  3306  0019CA  519F               	movf	(pad@w+1)& (0+255),w,b
  3307  0019CC  0A80               	xorlw	128
  3308  0019CE  599B               	subwfb	??_pad& (0+255),w,b
  3309  0019D0  A0D8               	btfss	status,0,c
  3310  0019D2  D7E9               	goto	l3022
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  3314  0019D4  B1D8               	btfsc	_flags& (0+255),0,b
  3315  0019D6  D00A               	goto	l3030
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  3319  0019D8  C097  F08E         	movff	pad@buf,fputs@s
  3320  0019DC  C098  F08F         	movff	pad@buf+1,fputs@s+1
  3321  0019E0  C095  F090         	movff	pad@fp,fputs@fp
  3322  0019E4  C096  F091         	movff	pad@fp+1,fputs@fp+1
  3323  0019E8  EC34  F00F         	call	_fputs	;wreg free
  3324  0019EC                     l3030:
  3325                           
  3326                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  3327  0019EC  C097  F084         	movff	pad@buf,strlen@s
  3328  0019F0  C098  F085         	movff	pad@buf+1,strlen@s+1
  3329  0019F4  ECB9  F00F         	call	_strlen	;wreg free
  3330  0019F8  0100               	movlb	0	; () banked
  3331  0019FA  519E               	movf	pad@w& (0+255),w,b
  3332  0019FC  2584               	addwf	?_strlen& (0+255),w,b
  3333  0019FE  6F95               	movwf	?_pad& (0+255),b
  3334  001A00  519F               	movf	(pad@w+1)& (0+255),w,b
  3335  001A02  2185               	addwfc	(?_strlen+1)& (0+255),w,b
  3336  001A04  6F96               	movwf	(?_pad+1)& (0+255),b
  3337                           
  3338                           ; BSR set to: 0
  3339  001A06  0012               	return		;funcret
  3340  001A08                     __end_of_pad:
  3341                           	opt callstack 0
  3342                           
  3343 ;; *************** function _strlen *****************
  3344 ;; Defined at:
  3345 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  s               2   36[BANK0 ] PTR const unsigned char 
  3348 ;;		 -> dbuf(32), 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  a               2   38[BANK0 ] PTR const unsigned char 
  3351 ;;		 -> dbuf(32), 
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  2   36[BANK0 ] unsigned int 
  3354 ;; Registers used:
  3355 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3361 ;;      Params:         0       2       0       0
  3362 ;;      Locals:         0       2       0       0
  3363 ;;      Temps:          0       0       0       0
  3364 ;;      Totals:         0       4       0       0
  3365 ;;Total ram usage:        4 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:   11
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_pad
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text13
  3376  001F72                     __ptext13:
  3377                           	opt callstack 0
  3378  001F72                     _strlen:
  3379                           	opt callstack 12
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;incstack = 0
  3383  001F72  C084  F086         	movff	strlen@s,strlen@a
  3384  001F76  C085  F087         	movff	strlen@s+1,strlen@a+1
  3385  001F7A  D003               	goto	l3006
  3386  001F7C                     l3004:
  3387  001F7C  0100               	movlb	0	; () banked
  3388  001F7E  4B84               	infsnz	strlen@s& (0+255),f,b
  3389  001F80  2B85               	incf	(strlen@s+1)& (0+255),f,b
  3390  001F82                     l3006:
  3391  001F82  C084  FFD9         	movff	strlen@s,fsr2l
  3392  001F86  C085  FFDA         	movff	strlen@s+1,fsr2h
  3393  001F8A  50DF               	movf	indf2,w,c
  3394  001F8C  A4D8               	btfss	status,2,c
  3395  001F8E  D7F6               	goto	l3004
  3396  001F90  0100               	movlb	0	; () banked
  3397  001F92  5186               	movf	strlen@a& (0+255),w,b
  3398  001F94  5D84               	subwf	strlen@s& (0+255),w,b
  3399  001F96  6F84               	movwf	?_strlen& (0+255),b
  3400  001F98  5187               	movf	(strlen@a+1)& (0+255),w,b
  3401  001F9A  5985               	subwfb	(strlen@s+1)& (0+255),w,b
  3402  001F9C  6F85               	movwf	(?_strlen+1)& (0+255),b
  3403                           
  3404                           ; BSR set to: 0
  3405  001F9E  0012               	return		;funcret
  3406  001FA0                     __end_of_strlen:
  3407                           	opt callstack 0
  3408                           
  3409 ;; *************** function _fputs *****************
  3410 ;; Defined at:
  3411 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;  s               2   46[BANK0 ] PTR const unsigned char 
  3414 ;;		 -> dbuf(32), 
  3415 ;;  fp              2   48[BANK0 ] PTR struct _IO_FILE
  3416 ;;		 -> NULL(0), 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  i               2   51[BANK0 ] int 
  3419 ;;  c               1   50[BANK0 ] unsigned char 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  2   46[BANK0 ] int 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3429 ;;      Params:         0       4       0       0
  3430 ;;      Locals:         0       3       0       0
  3431 ;;      Temps:          0       0       0       0
  3432 ;;      Totals:         0       7       0       0
  3433 ;;Total ram usage:        7 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:   13
  3436 ;; This function calls:
  3437 ;;		_fputc
  3438 ;; This function is called by:
  3439 ;;		_pad
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text14
  3444  001E68                     __ptext14:
  3445                           	opt callstack 0
  3446  001E68                     _fputs:
  3447                           	opt callstack 10
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;incstack = 0
  3451  001E68  0E00               	movlw	0
  3452  001E6A  0100               	movlb	0	; () banked
  3453  001E6C  6F94               	movwf	(fputs@i+1)& (0+255),b
  3454  001E6E  0E00               	movlw	0
  3455  001E70  6F93               	movwf	fputs@i& (0+255),b
  3456  001E72  D00C               	goto	l3000
  3457  001E74                     l2996:
  3458                           
  3459                           ; BSR set to: 0
  3460  001E74  C092  F085         	movff	fputs@c,fputc@c
  3461  001E78  6B86               	clrf	(fputc@c+1)& (0+255),b
  3462  001E7A  C090  F087         	movff	fputs@fp,fputc@fp
  3463  001E7E  C091  F088         	movff	fputs@fp+1,fputc@fp+1
  3464  001E82  EC18  F00E         	call	_fputc	;wreg free
  3465  001E86  0100               	movlb	0	; () banked
  3466  001E88  4B93               	infsnz	fputs@i& (0+255),f,b
  3467  001E8A  2B94               	incf	(fputs@i+1)& (0+255),f,b
  3468  001E8C                     l3000:
  3469                           
  3470                           ; BSR set to: 0
  3471  001E8C  5193               	movf	fputs@i& (0+255),w,b
  3472  001E8E  258E               	addwf	fputs@s& (0+255),w,b
  3473  001E90  6ED9               	movwf	fsr2l,c
  3474  001E92  5194               	movf	(fputs@i+1)& (0+255),w,b
  3475  001E94  218F               	addwfc	(fputs@s+1)& (0+255),w,b
  3476  001E96  6EDA               	movwf	fsr2h,c
  3477  001E98  50DF               	movf	indf2,w,c
  3478  001E9A  6F92               	movwf	fputs@c& (0+255),b
  3479  001E9C  5192               	movf	fputs@c& (0+255),w,b
  3480  001E9E  B4D8               	btfsc	status,2,c
  3481  001EA0  0012               	return	
  3482  001EA2  D7E8               	goto	l2996
  3483  001EA4                     __end_of_fputs:
  3484                           	opt callstack 0
  3485                           
  3486 ;; *************** function _fputc *****************
  3487 ;; Defined at:
  3488 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  c               2   37[BANK0 ] int 
  3491 ;;  fp              2   39[BANK0 ] PTR struct _IO_FILE
  3492 ;;		 -> NULL(0), 
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;		None
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  2   37[BANK0 ] int 
  3497 ;; Registers used:
  3498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3504 ;;      Params:         0       4       0       0
  3505 ;;      Locals:         0       0       0       0
  3506 ;;      Temps:          0       5       0       0
  3507 ;;      Totals:         0       9       0       0
  3508 ;;Total ram usage:        9 bytes
  3509 ;; Hardware stack levels used:    1
  3510 ;; Hardware stack levels required when called:   12
  3511 ;; This function calls:
  3512 ;;		_putch
  3513 ;; This function is called by:
  3514 ;;		_pad
  3515 ;;		_vfpfcnvrt
  3516 ;;		_fputs
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text15
  3521  001C30                     __ptext15:
  3522                           	opt callstack 0
  3523  001C30                     _fputc:
  3524                           	opt callstack 13
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;incstack = 0
  3528  001C30  0100               	movlb	0	; () banked
  3529  001C32  5187               	movf	fputc@fp& (0+255),w,b
  3530  001C34  1188               	iorwf	(fputc@fp+1)& (0+255),w,b
  3531  001C36  B4D8               	btfsc	status,2,c
  3532  001C38  D004               	goto	u2890
  3533                           
  3534                           ; BSR set to: 0
  3535  001C3A  5187               	movf	fputc@fp& (0+255),w,b
  3536  001C3C  1188               	iorwf	(fputc@fp+1)& (0+255),w,b
  3537  001C3E  A4D8               	btfss	status,2,c
  3538  001C40  D004               	goto	l2986
  3539  001C42                     u2890:
  3540                           
  3541                           ; BSR set to: 0
  3542  001C42  5185               	movf	fputc@c& (0+255),w,b
  3543  001C44  EC2E  F010         	call	_putch
  3544  001C48  0012               	return	
  3545  001C4A                     l2986:
  3546                           
  3547                           ; BSR set to: 0
  3548  001C4A  EE20 F004          	lfsr	2,4
  3549  001C4E  5187               	movf	fputc@fp& (0+255),w,b
  3550  001C50  26D9               	addwf	fsr2l,f,c
  3551  001C52  5188               	movf	(fputc@fp+1)& (0+255),w,b
  3552  001C54  22DA               	addwfc	fsr2h,f,c
  3553  001C56  50DE               	movf	postinc2,w,c
  3554  001C58  10DE               	iorwf	postinc2,w,c
  3555  001C5A  B4D8               	btfsc	status,2,c
  3556  001C5C  D016               	goto	u2910
  3557                           
  3558                           ; BSR set to: 0
  3559  001C5E  EE20 F004          	lfsr	2,4
  3560  001C62  5187               	movf	fputc@fp& (0+255),w,b
  3561  001C64  26D9               	addwf	fsr2l,f,c
  3562  001C66  5188               	movf	(fputc@fp+1)& (0+255),w,b
  3563  001C68  22DA               	addwfc	fsr2h,f,c
  3564  001C6A  EE10 F002          	lfsr	1,2
  3565  001C6E  5187               	movf	fputc@fp& (0+255),w,b
  3566  001C70  26E1               	addwf	fsr1l,f,c
  3567  001C72  5188               	movf	(fputc@fp+1)& (0+255),w,b
  3568  001C74  22E2               	addwfc	fsr1h,f,c
  3569  001C76  50DE               	movf	postinc2,w,c
  3570  001C78  5CE6               	subwf	postinc1,w,c
  3571  001C7A  50E6               	movf	postinc1,w,c
  3572  001C7C  0A80               	xorlw	128
  3573  001C7E  6F8D               	movwf	(??_fputc+4)& (0+255),b
  3574  001C80  50DE               	movf	postinc2,w,c
  3575  001C82  0A80               	xorlw	128
  3576  001C84  598D               	subwfb	(??_fputc+4)& (0+255),w,b
  3577  001C86  B0D8               	btfsc	status,0,c
  3578  001C88  0012               	return	
  3579  001C8A                     u2910:
  3580                           
  3581                           ; BSR set to: 0
  3582  001C8A  EE20 F002          	lfsr	2,2
  3583  001C8E  5187               	movf	fputc@fp& (0+255),w,b
  3584  001C90  26D9               	addwf	fsr2l,f,c
  3585  001C92  5188               	movf	(fputc@fp+1)& (0+255),w,b
  3586  001C94  22DA               	addwfc	fsr2h,f,c
  3587  001C96  2ADE               	incf	postinc2,f,c
  3588  001C98  0E00               	movlw	0
  3589  001C9A  22DD               	addwfc	postdec2,f,c
  3590  001C9C  0012               	return		;funcret
  3591  001C9E                     __end_of_fputc:
  3592                           	opt callstack 0
  3593                           
  3594 ;; *************** function _putch *****************
  3595 ;; Defined at:
  3596 ;;		line 118 in file "user.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;  byte            1    wreg     unsigned char 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  byte            1   36[BANK0 ] unsigned char 
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  1    wreg      void 
  3603 ;; Registers used:
  3604 ;;		wreg, status,2
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3610 ;;      Params:         0       0       0       0
  3611 ;;      Locals:         0       1       0       0
  3612 ;;      Temps:          0       0       0       0
  3613 ;;      Totals:         0       1       0       0
  3614 ;;Total ram usage:        1 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; Hardware stack levels required when called:   11
  3617 ;; This function calls:
  3618 ;;		Nothing
  3619 ;; This function is called by:
  3620 ;;		_fputc
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           	psect	text16
  3625  00205C                     __ptext16:
  3626                           	opt callstack 0
  3627  00205C                     _putch:
  3628                           	opt callstack 13
  3629                           
  3630                           ;incstack = 0
  3631                           ;putch@byte stored from wreg
  3632  00205C  0100               	movlb	0	; () banked
  3633  00205E  6F84               	movwf	putch@byte& (0+255),b
  3634                           
  3635                           ;user.c: 119:     TXSTA = 0x26;
  3636  002060  0E26               	movlw	38
  3637  002062  6EAC               	movwf	4012,c	;volatile
  3638                           
  3639                           ;user.c: 120:     RCSTA1bits.SPEN = 1;
  3640  002064  8EAB               	bsf	4011,7,c	;volatile
  3641  002066                     l215:
  3642  002066  A89E               	btfss	3998,4,c	;volatile
  3643  002068  D7FE               	goto	l215
  3644                           
  3645                           ;user.c: 122:     TXREG = byte;
  3646  00206A  C084  FFAD         	movff	putch@byte,4013	;volatile
  3647  00206E  0012               	return		;funcret
  3648  002070                     __end_of_putch:
  3649                           	opt callstack 0
  3650                           
  3651 ;; *************** function _abs *****************
  3652 ;; Defined at:
  3653 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  a               2   54[BANK0 ] int 
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;		None
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  2   54[BANK0 ] int 
  3660 ;; Registers used:
  3661 ;;		wreg, status,2, status,0
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3667 ;;      Params:         0       2       0       0
  3668 ;;      Locals:         0       0       0       0
  3669 ;;      Temps:          0       2       0       0
  3670 ;;      Totals:         0       4       0       0
  3671 ;;Total ram usage:        4 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; Hardware stack levels required when called:   11
  3674 ;; This function calls:
  3675 ;;		Nothing
  3676 ;; This function is called by:
  3677 ;;		_dtoa
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           	psect	text17
  3682  001EDC                     __ptext17:
  3683                           	opt callstack 0
  3684  001EDC                     _abs:
  3685                           	opt callstack 13
  3686                           
  3687                           ;incstack = 0
  3688  001EDC  0100               	movlb	0	; () banked
  3689  001EDE  BF97               	btfsc	(abs@a+1)& (0+255),7,b
  3690  001EE0  D005               	goto	u2980
  3691  001EE2  5197               	movf	(abs@a+1)& (0+255),w,b
  3692  001EE4  E110               	bnz	l973
  3693  001EE6  0596               	decf	abs@a& (0+255),w,b
  3694  001EE8  B0D8               	btfsc	status,0,c
  3695  001EEA  D00D               	goto	l973
  3696  001EEC                     u2980:
  3697                           
  3698                           ; BSR set to: 0
  3699  001EEC  C096  F098         	movff	abs@a,??_abs
  3700  001EF0  C097  F099         	movff	abs@a+1,??_abs+1
  3701  001EF4  1F98               	comf	??_abs& (0+255),f,b
  3702  001EF6  1F99               	comf	(??_abs+1)& (0+255),f,b
  3703  001EF8  4B98               	infsnz	??_abs& (0+255),f,b
  3704  001EFA  2B99               	incf	(??_abs+1)& (0+255),f,b
  3705  001EFC  C098  F096         	movff	??_abs,?_abs
  3706  001F00  C099  F097         	movff	??_abs+1,?_abs+1
  3707  001F04  0012               	return	
  3708  001F06                     l973:
  3709                           
  3710                           ; BSR set to: 0
  3711  001F06  C096  F096         	movff	abs@a,?_abs
  3712  001F0A  C097  F097         	movff	abs@a+1,?_abs+1
  3713                           
  3714                           ; BSR set to: 0
  3715  001F0E  0012               	return		;funcret
  3716  001F10                     __end_of_abs:
  3717                           	opt callstack 0
  3718                           
  3719 ;; *************** function ___aomod *****************
  3720 ;; Defined at:
  3721 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;  dividend        8   36[BANK0 ] long long 
  3724 ;;  divisor         8   44[BANK0 ] long long 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  sign            1   53[BANK0 ] unsigned char 
  3727 ;;  counter         1   52[BANK0 ] unsigned char 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  8   36[BANK0 ] long long 
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3737 ;;      Params:         0      16       0       0
  3738 ;;      Locals:         0       2       0       0
  3739 ;;      Temps:          0       0       0       0
  3740 ;;      Totals:         0      18       0       0
  3741 ;;Total ram usage:       18 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; Hardware stack levels required when called:   11
  3744 ;; This function calls:
  3745 ;;		Nothing
  3746 ;; This function is called by:
  3747 ;;		_dtoa
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text18
  3752  001262                     __ptext18:
  3753                           	opt callstack 0
  3754  001262                     ___aomod:
  3755                           	opt callstack 13
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;incstack = 0
  3759  001262  0E00               	movlw	0
  3760  001264  0100               	movlb	0	; () banked
  3761  001266  6F95               	movwf	___aomod@sign& (0+255),b
  3762                           
  3763                           ; BSR set to: 0
  3764  001268  AF8B               	btfss	(___aomod@dividend+7)& (0+255),7,b
  3765  00126A  D012               	goto	l3090
  3766                           
  3767                           ; BSR set to: 0
  3768  00126C  1F8B               	comf	(___aomod@dividend+7)& (0+255),f,b
  3769  00126E  1F8A               	comf	(___aomod@dividend+6)& (0+255),f,b
  3770  001270  1F89               	comf	(___aomod@dividend+5)& (0+255),f,b
  3771  001272  1F88               	comf	(___aomod@dividend+4)& (0+255),f,b
  3772  001274  1F87               	comf	(___aomod@dividend+3)& (0+255),f,b
  3773  001276  1F86               	comf	(___aomod@dividend+2)& (0+255),f,b
  3774  001278  1F85               	comf	(___aomod@dividend+1)& (0+255),f,b
  3775  00127A  6D84               	negf	___aomod@dividend& (0+255),b
  3776  00127C  0E00               	movlw	0
  3777  00127E  2385               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3778  001280  2386               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3779  001282  2387               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3780  001284  2388               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3781  001286  2389               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3782  001288  238A               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3783  00128A  238B               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3784                           
  3785                           ; BSR set to: 0
  3786  00128C  0E01               	movlw	1
  3787  00128E  6F95               	movwf	___aomod@sign& (0+255),b
  3788  001290                     l3090:
  3789                           
  3790                           ; BSR set to: 0
  3791  001290  AF93               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3792  001292  D010               	goto	l3094
  3793                           
  3794                           ; BSR set to: 0
  3795  001294  1F93               	comf	(___aomod@divisor+7)& (0+255),f,b
  3796  001296  1F92               	comf	(___aomod@divisor+6)& (0+255),f,b
  3797  001298  1F91               	comf	(___aomod@divisor+5)& (0+255),f,b
  3798  00129A  1F90               	comf	(___aomod@divisor+4)& (0+255),f,b
  3799  00129C  1F8F               	comf	(___aomod@divisor+3)& (0+255),f,b
  3800  00129E  1F8E               	comf	(___aomod@divisor+2)& (0+255),f,b
  3801  0012A0  1F8D               	comf	(___aomod@divisor+1)& (0+255),f,b
  3802  0012A2  6D8C               	negf	___aomod@divisor& (0+255),b
  3803  0012A4  0E00               	movlw	0
  3804  0012A6  238D               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  3805  0012A8  238E               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  3806  0012AA  238F               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  3807  0012AC  2390               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  3808  0012AE  2391               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  3809  0012B0  2392               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  3810  0012B2  2393               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  3811  0012B4                     l3094:
  3812                           
  3813                           ; BSR set to: 0
  3814  0012B4  518C               	movf	___aomod@divisor& (0+255),w,b
  3815  0012B6  118D               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  3816  0012B8  118E               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  3817  0012BA  118F               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  3818  0012BC  1190               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  3819  0012BE  1191               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  3820  0012C0  1192               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  3821  0012C2  1193               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  3822  0012C4  B4D8               	btfsc	status,2,c
  3823  0012C6  D03C               	goto	l3110
  3824                           
  3825                           ; BSR set to: 0
  3826  0012C8  0E01               	movlw	1
  3827  0012CA  6F94               	movwf	___aomod@counter& (0+255),b
  3828  0012CC  D00A               	goto	l3100
  3829  0012CE                     l3098:
  3830                           
  3831                           ; BSR set to: 0
  3832  0012CE  90D8               	bcf	status,0,c
  3833  0012D0  378C               	rlcf	___aomod@divisor& (0+255),f,b
  3834  0012D2  378D               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  3835  0012D4  378E               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  3836  0012D6  378F               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  3837  0012D8  3790               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  3838  0012DA  3791               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  3839  0012DC  3792               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  3840  0012DE  3793               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  3841  0012E0  2B94               	incf	___aomod@counter& (0+255),f,b
  3842  0012E2                     l3100:
  3843                           
  3844                           ; BSR set to: 0
  3845  0012E2  AF93               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3846  0012E4  D7F4               	goto	l3098
  3847  0012E6                     u3090:
  3848                           
  3849                           ; BSR set to: 0
  3850  0012E6  518C               	movf	___aomod@divisor& (0+255),w,b
  3851  0012E8  5D84               	subwf	___aomod@dividend& (0+255),w,b
  3852  0012EA  518D               	movf	(___aomod@divisor+1)& (0+255),w,b
  3853  0012EC  5985               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  3854  0012EE  518E               	movf	(___aomod@divisor+2)& (0+255),w,b
  3855  0012F0  5986               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  3856  0012F2  518F               	movf	(___aomod@divisor+3)& (0+255),w,b
  3857  0012F4  5987               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  3858  0012F6  5190               	movf	(___aomod@divisor+4)& (0+255),w,b
  3859  0012F8  5988               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  3860  0012FA  5191               	movf	(___aomod@divisor+5)& (0+255),w,b
  3861  0012FC  5989               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  3862  0012FE  5192               	movf	(___aomod@divisor+6)& (0+255),w,b
  3863  001300  598A               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  3864  001302  5193               	movf	(___aomod@divisor+7)& (0+255),w,b
  3865  001304  598B               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  3866  001306  A0D8               	btfss	status,0,c
  3867  001308  D010               	goto	l3106
  3868                           
  3869                           ; BSR set to: 0
  3870  00130A  518C               	movf	___aomod@divisor& (0+255),w,b
  3871  00130C  5F84               	subwf	___aomod@dividend& (0+255),f,b
  3872  00130E  518D               	movf	(___aomod@divisor+1)& (0+255),w,b
  3873  001310  5B85               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  3874  001312  518E               	movf	(___aomod@divisor+2)& (0+255),w,b
  3875  001314  5B86               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  3876  001316  518F               	movf	(___aomod@divisor+3)& (0+255),w,b
  3877  001318  5B87               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  3878  00131A  5190               	movf	(___aomod@divisor+4)& (0+255),w,b
  3879  00131C  5B88               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  3880  00131E  5191               	movf	(___aomod@divisor+5)& (0+255),w,b
  3881  001320  5B89               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  3882  001322  5192               	movf	(___aomod@divisor+6)& (0+255),w,b
  3883  001324  5B8A               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  3884  001326  5193               	movf	(___aomod@divisor+7)& (0+255),w,b
  3885  001328  5B8B               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  3886  00132A                     l3106:
  3887                           
  3888                           ; BSR set to: 0
  3889  00132A  90D8               	bcf	status,0,c
  3890  00132C  3393               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  3891  00132E  3392               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  3892  001330  3391               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  3893  001332  3390               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  3894  001334  338F               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  3895  001336  338E               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  3896  001338  338D               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  3897  00133A  338C               	rrcf	___aomod@divisor& (0+255),f,b
  3898                           
  3899                           ; BSR set to: 0
  3900  00133C  2F94               	decfsz	___aomod@counter& (0+255),f,b
  3901  00133E  D7D3               	goto	u3090
  3902  001340                     l3110:
  3903                           
  3904                           ; BSR set to: 0
  3905  001340  5195               	movf	___aomod@sign& (0+255),w,b
  3906  001342  B4D8               	btfsc	status,2,c
  3907  001344  D010               	goto	l3114
  3908                           
  3909                           ; BSR set to: 0
  3910  001346  1F8B               	comf	(___aomod@dividend+7)& (0+255),f,b
  3911  001348  1F8A               	comf	(___aomod@dividend+6)& (0+255),f,b
  3912  00134A  1F89               	comf	(___aomod@dividend+5)& (0+255),f,b
  3913  00134C  1F88               	comf	(___aomod@dividend+4)& (0+255),f,b
  3914  00134E  1F87               	comf	(___aomod@dividend+3)& (0+255),f,b
  3915  001350  1F86               	comf	(___aomod@dividend+2)& (0+255),f,b
  3916  001352  1F85               	comf	(___aomod@dividend+1)& (0+255),f,b
  3917  001354  6D84               	negf	___aomod@dividend& (0+255),b
  3918  001356  0E00               	movlw	0
  3919  001358  2385               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3920  00135A  2386               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3921  00135C  2387               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3922  00135E  2388               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3923  001360  2389               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3924  001362  238A               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3925  001364  238B               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3926  001366                     l3114:
  3927                           
  3928                           ; BSR set to: 0
  3929  001366  C084  F084         	movff	___aomod@dividend,?___aomod
  3930  00136A  C085  F085         	movff	___aomod@dividend+1,?___aomod+1
  3931  00136E  C086  F086         	movff	___aomod@dividend+2,?___aomod+2
  3932  001372  C087  F087         	movff	___aomod@dividend+3,?___aomod+3
  3933  001376  C088  F088         	movff	___aomod@dividend+4,?___aomod+4
  3934  00137A  C089  F089         	movff	___aomod@dividend+5,?___aomod+5
  3935  00137E  C08A  F08A         	movff	___aomod@dividend+6,?___aomod+6
  3936  001382  C08B  F08B         	movff	___aomod@dividend+7,?___aomod+7
  3937                           
  3938                           ; BSR set to: 0
  3939  001386  0012               	return		;funcret
  3940  001388                     __end_of___aomod:
  3941                           	opt callstack 0
  3942                           
  3943 ;; *************** function ___aodiv *****************
  3944 ;; Defined at:
  3945 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;  dividend        8   36[BANK0 ] long long 
  3948 ;;  divisor         8   44[BANK0 ] long long 
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;  quotient        8   54[BANK0 ] long long 
  3951 ;;  sign            1   53[BANK0 ] unsigned char 
  3952 ;;  counter         1   52[BANK0 ] unsigned char 
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  8   36[BANK0 ] long long 
  3955 ;; Registers used:
  3956 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3962 ;;      Params:         0      16       0       0
  3963 ;;      Locals:         0      10       0       0
  3964 ;;      Temps:          0       0       0       0
  3965 ;;      Totals:         0      26       0       0
  3966 ;;Total ram usage:       26 bytes
  3967 ;; Hardware stack levels used:    1
  3968 ;; Hardware stack levels required when called:   11
  3969 ;; This function calls:
  3970 ;;		Nothing
  3971 ;; This function is called by:
  3972 ;;		_dtoa
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           	psect	text19
  3977  000FD0                     __ptext19:
  3978                           	opt callstack 0
  3979  000FD0                     ___aodiv:
  3980                           	opt callstack 13
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;incstack = 0
  3984  000FD0  0E00               	movlw	0
  3985  000FD2  0100               	movlb	0	; () banked
  3986  000FD4  6F95               	movwf	___aodiv@sign& (0+255),b
  3987                           
  3988                           ; BSR set to: 0
  3989  000FD6  AF93               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3990  000FD8  D012               	goto	l3046
  3991                           
  3992                           ; BSR set to: 0
  3993  000FDA  1F93               	comf	(___aodiv@divisor+7)& (0+255),f,b
  3994  000FDC  1F92               	comf	(___aodiv@divisor+6)& (0+255),f,b
  3995  000FDE  1F91               	comf	(___aodiv@divisor+5)& (0+255),f,b
  3996  000FE0  1F90               	comf	(___aodiv@divisor+4)& (0+255),f,b
  3997  000FE2  1F8F               	comf	(___aodiv@divisor+3)& (0+255),f,b
  3998  000FE4  1F8E               	comf	(___aodiv@divisor+2)& (0+255),f,b
  3999  000FE6  1F8D               	comf	(___aodiv@divisor+1)& (0+255),f,b
  4000  000FE8  6D8C               	negf	___aodiv@divisor& (0+255),b
  4001  000FEA  0E00               	movlw	0
  4002  000FEC  238D               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  4003  000FEE  238E               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  4004  000FF0  238F               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  4005  000FF2  2390               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  4006  000FF4  2391               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  4007  000FF6  2392               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  4008  000FF8  2393               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  4009                           
  4010                           ; BSR set to: 0
  4011  000FFA  0E01               	movlw	1
  4012  000FFC  6F95               	movwf	___aodiv@sign& (0+255),b
  4013  000FFE                     l3046:
  4014                           
  4015                           ; BSR set to: 0
  4016  000FFE  AF8B               	btfss	(___aodiv@dividend+7)& (0+255),7,b
  4017  001000  D012               	goto	l3052
  4018                           
  4019                           ; BSR set to: 0
  4020  001002  1F8B               	comf	(___aodiv@dividend+7)& (0+255),f,b
  4021  001004  1F8A               	comf	(___aodiv@dividend+6)& (0+255),f,b
  4022  001006  1F89               	comf	(___aodiv@dividend+5)& (0+255),f,b
  4023  001008  1F88               	comf	(___aodiv@dividend+4)& (0+255),f,b
  4024  00100A  1F87               	comf	(___aodiv@dividend+3)& (0+255),f,b
  4025  00100C  1F86               	comf	(___aodiv@dividend+2)& (0+255),f,b
  4026  00100E  1F85               	comf	(___aodiv@dividend+1)& (0+255),f,b
  4027  001010  6D84               	negf	___aodiv@dividend& (0+255),b
  4028  001012  0E00               	movlw	0
  4029  001014  2385               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  4030  001016  2386               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  4031  001018  2387               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  4032  00101A  2388               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  4033  00101C  2389               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  4034  00101E  238A               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  4035  001020  238B               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  4036                           
  4037                           ; BSR set to: 0
  4038  001022  0E01               	movlw	1
  4039  001024  1B95               	xorwf	___aodiv@sign& (0+255),f,b
  4040  001026                     l3052:
  4041                           
  4042                           ; BSR set to: 0
  4043  001026  EE20  F096         	lfsr	2,___aodiv@quotient
  4044  00102A  0E07               	movlw	7
  4045  00102C                     u3011:
  4046  00102C  6ADE               	clrf	postinc2,c
  4047  00102E  06E8               	decf	wreg,f,c
  4048  001030  E2FD               	bc	u3011
  4049                           
  4050                           ; BSR set to: 0
  4051  001032  518C               	movf	___aodiv@divisor& (0+255),w,b
  4052  001034  118D               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  4053  001036  118E               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  4054  001038  118F               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  4055  00103A  1190               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  4056  00103C  1191               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  4057  00103E  1192               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  4058  001040  1193               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  4059  001042  B4D8               	btfsc	status,2,c
  4060  001044  D046               	goto	l3074
  4061                           
  4062                           ; BSR set to: 0
  4063  001046  0E01               	movlw	1
  4064  001048  6F94               	movwf	___aodiv@counter& (0+255),b
  4065  00104A  D00A               	goto	l3060
  4066  00104C                     l3058:
  4067                           
  4068                           ; BSR set to: 0
  4069  00104C  90D8               	bcf	status,0,c
  4070  00104E  378C               	rlcf	___aodiv@divisor& (0+255),f,b
  4071  001050  378D               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  4072  001052  378E               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  4073  001054  378F               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  4074  001056  3790               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  4075  001058  3791               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  4076  00105A  3792               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  4077  00105C  3793               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  4078  00105E  2B94               	incf	___aodiv@counter& (0+255),f,b
  4079  001060                     l3060:
  4080                           
  4081                           ; BSR set to: 0
  4082  001060  AF93               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  4083  001062  D7F4               	goto	l3058
  4084  001064                     u3030:
  4085                           
  4086                           ; BSR set to: 0
  4087  001064  90D8               	bcf	status,0,c
  4088  001066  3796               	rlcf	___aodiv@quotient& (0+255),f,b
  4089  001068  3797               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  4090  00106A  3798               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  4091  00106C  3799               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  4092  00106E  379A               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  4093  001070  379B               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  4094  001072  379C               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  4095  001074  379D               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  4096                           
  4097                           ; BSR set to: 0
  4098  001076  518C               	movf	___aodiv@divisor& (0+255),w,b
  4099  001078  5D84               	subwf	___aodiv@dividend& (0+255),w,b
  4100  00107A  518D               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4101  00107C  5985               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  4102  00107E  518E               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4103  001080  5986               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  4104  001082  518F               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4105  001084  5987               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  4106  001086  5190               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4107  001088  5988               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  4108  00108A  5191               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4109  00108C  5989               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  4110  00108E  5192               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4111  001090  598A               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  4112  001092  5193               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4113  001094  598B               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  4114  001096  A0D8               	btfss	status,0,c
  4115  001098  D011               	goto	l3070
  4116                           
  4117                           ; BSR set to: 0
  4118  00109A  518C               	movf	___aodiv@divisor& (0+255),w,b
  4119  00109C  5F84               	subwf	___aodiv@dividend& (0+255),f,b
  4120  00109E  518D               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4121  0010A0  5B85               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  4122  0010A2  518E               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4123  0010A4  5B86               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  4124  0010A6  518F               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4125  0010A8  5B87               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  4126  0010AA  5190               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4127  0010AC  5B88               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  4128  0010AE  5191               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4129  0010B0  5B89               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  4130  0010B2  5192               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4131  0010B4  5B8A               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  4132  0010B6  5193               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4133  0010B8  5B8B               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  4134                           
  4135                           ; BSR set to: 0
  4136  0010BA  8196               	bsf	___aodiv@quotient& (0+255),0,b
  4137  0010BC                     l3070:
  4138                           
  4139                           ; BSR set to: 0
  4140  0010BC  90D8               	bcf	status,0,c
  4141  0010BE  3393               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  4142  0010C0  3392               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  4143  0010C2  3391               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  4144  0010C4  3390               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  4145  0010C6  338F               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  4146  0010C8  338E               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  4147  0010CA  338D               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  4148  0010CC  338C               	rrcf	___aodiv@divisor& (0+255),f,b
  4149                           
  4150                           ; BSR set to: 0
  4151  0010CE  2F94               	decfsz	___aodiv@counter& (0+255),f,b
  4152  0010D0  D7C9               	goto	u3030
  4153  0010D2                     l3074:
  4154                           
  4155                           ; BSR set to: 0
  4156  0010D2  5195               	movf	___aodiv@sign& (0+255),w,b
  4157  0010D4  B4D8               	btfsc	status,2,c
  4158  0010D6  D010               	goto	l3078
  4159                           
  4160                           ; BSR set to: 0
  4161  0010D8  1F9D               	comf	(___aodiv@quotient+7)& (0+255),f,b
  4162  0010DA  1F9C               	comf	(___aodiv@quotient+6)& (0+255),f,b
  4163  0010DC  1F9B               	comf	(___aodiv@quotient+5)& (0+255),f,b
  4164  0010DE  1F9A               	comf	(___aodiv@quotient+4)& (0+255),f,b
  4165  0010E0  1F99               	comf	(___aodiv@quotient+3)& (0+255),f,b
  4166  0010E2  1F98               	comf	(___aodiv@quotient+2)& (0+255),f,b
  4167  0010E4  1F97               	comf	(___aodiv@quotient+1)& (0+255),f,b
  4168  0010E6  6D96               	negf	___aodiv@quotient& (0+255),b
  4169  0010E8  0E00               	movlw	0
  4170  0010EA  2397               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  4171  0010EC  2398               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  4172  0010EE  2399               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  4173  0010F0  239A               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  4174  0010F2  239B               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  4175  0010F4  239C               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  4176  0010F6  239D               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  4177  0010F8                     l3078:
  4178                           
  4179                           ; BSR set to: 0
  4180  0010F8  C096  F084         	movff	___aodiv@quotient,?___aodiv
  4181  0010FC  C097  F085         	movff	___aodiv@quotient+1,?___aodiv+1
  4182  001100  C098  F086         	movff	___aodiv@quotient+2,?___aodiv+2
  4183  001104  C099  F087         	movff	___aodiv@quotient+3,?___aodiv+3
  4184  001108  C09A  F088         	movff	___aodiv@quotient+4,?___aodiv+4
  4185  00110C  C09B  F089         	movff	___aodiv@quotient+5,?___aodiv+5
  4186  001110  C09C  F08A         	movff	___aodiv@quotient+6,?___aodiv+6
  4187  001114  C09D  F08B         	movff	___aodiv@quotient+7,?___aodiv+7
  4188                           
  4189                           ; BSR set to: 0
  4190  001118  0012               	return		;funcret
  4191  00111A                     __end_of___aodiv:
  4192                           	opt callstack 0
  4193                           
  4194 ;; *************** function _InitApp *****************
  4195 ;; Defined at:
  4196 ;;		line 31 in file "user.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;		None
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;		None
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      void 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2, cstack
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4210 ;;      Params:         0       0       0       0
  4211 ;;      Locals:         0       0       0       0
  4212 ;;      Temps:          0       0       0       0
  4213 ;;      Totals:         0       0       0       0
  4214 ;;Total ram usage:        0 bytes
  4215 ;; Hardware stack levels used:    1
  4216 ;; Hardware stack levels required when called:   12
  4217 ;; This function calls:
  4218 ;;		_init_timer
  4219 ;;		_init_usart
  4220 ;; This function is called by:
  4221 ;;		_main
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224                           
  4225                           	psect	text20
  4226  002082                     __ptext20:
  4227                           	opt callstack 0
  4228  002082                     _InitApp:
  4229                           	opt callstack 18
  4230                           
  4231                           ;user.c: 36:     TRISDbits.RD7 = 0;
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;incstack = 0
  4235  002082  9E95               	bcf	3989,7,c	;volatile
  4236                           
  4237                           ;user.c: 37:     TRISDbits.RD6 = 0;
  4238  002084  9C95               	bcf	3989,6,c	;volatile
  4239                           
  4240                           ;user.c: 40:     init_usart();
  4241  002086  EC21  F010         	call	_init_usart	;wreg free
  4242                           
  4243                           ;user.c: 41:     init_timer();
  4244  00208A  EC0E  F010         	call	_init_timer	;wreg free
  4245  00208E  0012               	return		;funcret
  4246  002090                     __end_of_InitApp:
  4247                           	opt callstack 0
  4248                           
  4249 ;; *************** function _init_usart *****************
  4250 ;; Defined at:
  4251 ;;		line 48 in file "user.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;		None
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;		None
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      void 
  4258 ;; Registers used:
  4259 ;;		wreg, status,2
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4265 ;;      Params:         0       0       0       0
  4266 ;;      Locals:         0       0       0       0
  4267 ;;      Temps:          0       0       0       0
  4268 ;;      Totals:         0       0       0       0
  4269 ;;Total ram usage:        0 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:   11
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_InitApp
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text21
  4280  002042                     __ptext21:
  4281                           	opt callstack 0
  4282  002042                     _init_usart:
  4283                           	opt callstack 18
  4284                           
  4285                           ;user.c: 51:     TRISCbits.RC6 = 0;
  4286                           
  4287                           ;incstack = 0
  4288  002042  9C94               	bcf	3988,6,c	;volatile
  4289                           
  4290                           ;user.c: 52:     TRISCbits.RC7 = 1;
  4291  002044  8E94               	bsf	3988,7,c	;volatile
  4292                           
  4293                           ;user.c: 54:     TXSTA1bits.SYNC = 0;
  4294  002046  98AC               	bcf	4012,4,c	;volatile
  4295                           
  4296                           ;user.c: 55:     TXSTA1bits.TX9 = 0;
  4297  002048  9CAC               	bcf	4012,6,c	;volatile
  4298                           
  4299                           ;user.c: 56:     TXSTA1bits.TXEN = 1;
  4300  00204A  8AAC               	bsf	4012,5,c	;volatile
  4301                           
  4302                           ;user.c: 58:     RCSTA1bits.RX9 = 0;
  4303  00204C  9CAB               	bcf	4011,6,c	;volatile
  4304                           
  4305                           ;user.c: 59:     RCSTA1bits.CREN = 1;
  4306  00204E  88AB               	bsf	4011,4,c	;volatile
  4307                           
  4308                           ;user.c: 60:     RCSTA1bits.SPEN = 1;
  4309  002050  8EAB               	bsf	4011,7,c	;volatile
  4310                           
  4311                           ;user.c: 63:     BAUDCONbits.BRG16 = 0;
  4312  002052  96AA               	bcf	4010,3,c	;volatile
  4313                           
  4314                           ;user.c: 64:     TXSTA1bits.BRGH = 0;
  4315  002054  94AC               	bcf	4012,2,c	;volatile
  4316                           
  4317                           ;user.c: 65:     SPBRG1 = 129;
  4318  002056  0E81               	movlw	129
  4319  002058  6EAF               	movwf	4015,c	;volatile
  4320  00205A  0012               	return		;funcret
  4321  00205C                     __end_of_init_usart:
  4322                           	opt callstack 0
  4323                           
  4324 ;; *************** function _init_timer *****************
  4325 ;; Defined at:
  4326 ;;		line 73 in file "user.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;		None
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;		None
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  1    wreg      void 
  4333 ;; Registers used:
  4334 ;;		wreg, status,2
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4340 ;;      Params:         0       0       0       0
  4341 ;;      Locals:         0       0       0       0
  4342 ;;      Temps:          0       0       0       0
  4343 ;;      Totals:         0       0       0       0
  4344 ;;Total ram usage:        0 bytes
  4345 ;; Hardware stack levels used:    1
  4346 ;; Hardware stack levels required when called:   11
  4347 ;; This function calls:
  4348 ;;		Nothing
  4349 ;; This function is called by:
  4350 ;;		_InitApp
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	text22
  4355  00201C                     __ptext22:
  4356                           	opt callstack 0
  4357  00201C                     _init_timer:
  4358                           	opt callstack 18
  4359                           
  4360                           ;user.c: 76:     T0CONbits.TMR0ON = 0;
  4361                           
  4362                           ;incstack = 0
  4363  00201C  9ED5               	bcf	4053,7,c	;volatile
  4364                           
  4365                           ;user.c: 77:     T0CONbits.T016BIT = 0;
  4366  00201E  9CD5               	bcf	4053,6,c	;volatile
  4367                           
  4368                           ;user.c: 78:     T0CONbits.T0CS = 0;
  4369  002020  9AD5               	bcf	4053,5,c	;volatile
  4370                           
  4371                           ;user.c: 79:     T0CONbits.PSA = 0;
  4372  002022  96D5               	bcf	4053,3,c	;volatile
  4373                           
  4374                           ;user.c: 80:     T0CONbits.T0PS = 0b011;
  4375  002024  50D5               	movf	4053,w,c	;volatile
  4376  002026  0BF8               	andlw	-8
  4377  002028  0903               	iorlw	3
  4378  00202A  6ED5               	movwf	4053,c	;volatile
  4379                           
  4380                           ;user.c: 81:     TMR0 = 0;
  4381  00202C  0E00               	movlw	0
  4382  00202E  6ED7               	movwf	4055,c	;volatile
  4383  002030  0E00               	movlw	0
  4384  002032  6ED6               	movwf	4054,c	;volatile
  4385                           
  4386                           ;user.c: 82:     INTCONbits.T0IF = 0;
  4387  002034  94F2               	bcf	4082,2,c	;volatile
  4388                           
  4389                           ;user.c: 83:     INTCONbits.T0IE = 1;
  4390  002036  8AF2               	bsf	4082,5,c	;volatile
  4391                           
  4392                           ;user.c: 84:     RCONbits.IPEN = 0;
  4393  002038  9ED0               	bcf	4048,7,c	;volatile
  4394                           
  4395                           ;user.c: 85:     INTCONbits.PEIE = 1;
  4396  00203A  8CF2               	bsf	4082,6,c	;volatile
  4397                           
  4398                           ;user.c: 86:     INTCONbits.GIE = 1;
  4399  00203C  8EF2               	bsf	4082,7,c	;volatile
  4400                           
  4401                           ;user.c: 87:     T0CONbits.TMR0ON = 1;
  4402  00203E  8ED5               	bsf	4053,7,c	;volatile
  4403  002040  0012               	return		;funcret
  4404  002042                     __end_of_init_timer:
  4405                           	opt callstack 0
  4406                           
  4407 ;; *************** function _ConfigureOscillator *****************
  4408 ;; Defined at:
  4409 ;;		line 24 in file "system.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;		None
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1    wreg      void 
  4416 ;; Registers used:
  4417 ;;		None
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4423 ;;      Params:         0       0       0       0
  4424 ;;      Locals:         0       0       0       0
  4425 ;;      Temps:          0       0       0       0
  4426 ;;      Totals:         0       0       0       0
  4427 ;;Total ram usage:        0 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:   11
  4430 ;; This function calls:
  4431 ;;		Nothing
  4432 ;; This function is called by:
  4433 ;;		_main
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           	psect	text23
  4438  00209A                     __ptext23:
  4439                           	opt callstack 0
  4440  00209A                     _ConfigureOscillator:
  4441                           	opt callstack 19
  4442                           
  4443                           ;incstack = 0
  4444  00209A  0012               	return		;funcret
  4445  00209C                     __end_of_ConfigureOscillator:
  4446                           	opt callstack 0
  4447                           
  4448 ;; *************** function _low_isr *****************
  4449 ;; Defined at:
  4450 ;;		line 102 in file "interrupts.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;		None
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;		None
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  1    wreg      void 
  4457 ;; Registers used:
  4458 ;;		None
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4464 ;;      Params:         0       0       0       0
  4465 ;;      Locals:         0       0       0       0
  4466 ;;      Temps:          0       1       0       0
  4467 ;;      Totals:         0       1       0       0
  4468 ;;Total ram usage:        1 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:   10
  4471 ;; This function calls:
  4472 ;;		Nothing
  4473 ;; This function is called by:
  4474 ;;		Interrupt level 1
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           	psect	intcodelo
  4479  000018                     __pintcodelo:
  4480                           	opt callstack 0
  4481  000018                     _low_isr:
  4482                           	opt callstack 10
  4483                           
  4484                           ;incstack = 0
  4485  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  4486  00001A  CFE0 F083          	movff	bsr,??_low_isr
  4487  00001E  C083  FFE0         	movff	??_low_isr,bsr
  4488  000022  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  4489  000024  0010               	retfie	
  4490  000026                     __end_of_low_isr:
  4491                           	opt callstack 0
  4492                           
  4493 ;; *************** function _high_isr *****************
  4494 ;; Defined at:
  4495 ;;		line 29 in file "interrupts.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;		None
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;		None
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4509 ;;      Params:         0       0       0       0
  4510 ;;      Locals:         0       0       0       0
  4511 ;;      Temps:          0       9       0       0
  4512 ;;      Totals:         0       9       0       0
  4513 ;;Total ram usage:        9 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:    9
  4516 ;; This function calls:
  4517 ;;		_setPDC0
  4518 ;;		i2_printf
  4519 ;; This function is called by:
  4520 ;;		Interrupt level 2
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           	psect	intcode
  4525  000008                     __pintcode:
  4526                           	opt callstack 0
  4527  000008                     _high_isr:
  4528                           	opt callstack 10
  4529                           
  4530                           ;incstack = 0
  4531  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4532  00000A  EFA8  F00B         	goto	int_func
  4533                           
  4534                           	psect	intcode_body
  4535  001750                     __pintcode_body:
  4536                           	opt callstack 10
  4537  001750                     int_func:
  4538                           	opt callstack 10
  4539  001750  CFE1 F07B          	movff	fsr1l,??_high_isr+1
  4540  001754  CFE2 F07C          	movff	fsr1h,??_high_isr+2
  4541  001758  CFD9 F07D          	movff	fsr2l,??_high_isr+3
  4542  00175C  CFDA F07E          	movff	fsr2h,??_high_isr+4
  4543  001760  CFF6 F07F          	movff	tblptrl,??_high_isr+5
  4544  001764  CFF7 F080          	movff	tblptrh,??_high_isr+6
  4545  001768  CFF8 F081          	movff	tblptru,??_high_isr+7
  4546  00176C  CFF5 F082          	movff	tablat,??_high_isr+8
  4547                           
  4548                           ;interrupts.c: 64:     if(INTCONbits.T0IF == 1)
  4549  001770  A4F2               	btfss	4082,2,c	;volatile
  4550  001772  D03E               	goto	i2l89
  4551                           
  4552                           ;interrupts.c: 65:     {;interrupts.c: 67:         setPDC0((long)timer0_var);
  4553  001774  C0DA  F070         	movff	_timer0_var,setPDC0@dutyCyclePercent
  4554  001778  C0DB  F071         	movff	_timer0_var+1,setPDC0@dutyCyclePercent+1
  4555  00177C  0100               	movlb	0	; () banked
  4556  00177E  0E00               	movlw	0
  4557  001780  BF71               	btfsc	(setPDC0@dutyCyclePercent+1)& (0+255),7,b
  4558  001782  0EFF               	movlw	-1
  4559  001784  6F72               	movwf	(setPDC0@dutyCyclePercent+2)& (0+255),b
  4560  001786  6F73               	movwf	(setPDC0@dutyCyclePercent+3)& (0+255),b
  4561  001788  EC56  F00A         	call	_setPDC0	;wreg free
  4562                           
  4563                           ;interrupts.c: 69:         timer0_var++;
  4564  00178C  0100               	movlb	0	; () banked
  4565  00178E  4BDA               	infsnz	_timer0_var& (0+255),f,b
  4566  001790  2BDB               	incf	(_timer0_var+1)& (0+255),f,b
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;interrupts.c: 70:         printf("t: %d\r\n", timer0_var);
  4570  001792  0E4E               	movlw	low STR_6
  4571  001794  6F66               	movwf	i2printf@fmt& (0+255),b
  4572  001796  0E03               	movlw	high STR_6
  4573  001798  6F67               	movwf	(i2printf@fmt+1)& (0+255),b
  4574  00179A  C0DA  F068         	movff	_timer0_var,?i2_printf+2
  4575  00179E  C0DB  F069         	movff	_timer0_var+1,?i2_printf+3
  4576  0017A2  ECA1  F00F         	call	i2_printf	;wreg free
  4577                           
  4578                           ;interrupts.c: 71:         TMR0 = 0;
  4579  0017A6  0E00               	movlw	0
  4580  0017A8  6ED7               	movwf	4055,c	;volatile
  4581  0017AA  0E00               	movlw	0
  4582  0017AC  6ED6               	movwf	4054,c	;volatile
  4583                           
  4584                           ;interrupts.c: 76:         if (timer0_var == 0)
  4585  0017AE  0100               	movlb	0	; () banked
  4586  0017B0  51DA               	movf	_timer0_var& (0+255),w,b
  4587  0017B2  11DB               	iorwf	(_timer0_var+1)& (0+255),w,b
  4588  0017B4  B4D8               	btfsc	status,2,c
  4589  0017B6  D01B               	goto	i2l2942
  4590                           
  4591                           ; BSR set to: 0
  4592  0017B8  05DA               	decf	_timer0_var& (0+255),w,b
  4593  0017BA  11DB               	iorwf	(_timer0_var+1)& (0+255),w,b
  4594  0017BC  B4D8               	btfsc	status,2,c
  4595  0017BE  D017               	goto	i2l2942
  4596                           
  4597                           ; BSR set to: 0
  4598  0017C0  0E64               	movlw	100
  4599  0017C2  19DA               	xorwf	_timer0_var& (0+255),w,b
  4600  0017C4  11DB               	iorwf	(_timer0_var+1)& (0+255),w,b
  4601  0017C6  A4D8               	btfss	status,2,c
  4602  0017C8  D012               	goto	i2l2942
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;interrupts.c: 87:         {;interrupts.c: 88:             timer0_var = 0;
  4606  0017CA  0E00               	movlw	0
  4607  0017CC  6FDB               	movwf	(_timer0_var+1)& (0+255),b
  4608  0017CE  0E00               	movlw	0
  4609  0017D0  6FDA               	movwf	_timer0_var& (0+255),b
  4610                           
  4611                           ; BSR set to: 0
  4612                           ;interrupts.c: 89:             PORTDbits.RD7 = ~PORTDbits.RD7;
  4613  0017D2  AE83               	btfss	3971,7,c	;volatile
  4614  0017D4  D002               	goto	i2u286_40
  4615  0017D6  0E01               	movlw	1
  4616  0017D8  D001               	goto	i2u286_46
  4617  0017DA                     i2u286_40:
  4618  0017DA  0E00               	movlw	0
  4619  0017DC                     i2u286_46:
  4620  0017DC  0AFF               	xorlw	255
  4621  0017DE  6F7A               	movwf	??_high_isr& (0+255),b
  4622  0017E0  337A               	rrcf	??_high_isr& (0+255),f,b
  4623  0017E2  337A               	rrcf	??_high_isr& (0+255),f,b
  4624  0017E4  5083               	movf	3971,w,c	;volatile
  4625  0017E6  197A               	xorwf	??_high_isr& (0+255),w,b
  4626  0017E8  0B7F               	andlw	-129
  4627  0017EA  197A               	xorwf	??_high_isr& (0+255),w,b
  4628  0017EC  6E83               	movwf	3971,c	;volatile
  4629  0017EE                     i2l2942:
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;interrupts.c: 94:         INTCONbits.T0IF = 0;
  4633  0017EE  94F2               	bcf	4082,2,c	;volatile
  4634  0017F0                     i2l89:
  4635  0017F0  C082  FFF5         	movff	??_high_isr+8,tablat
  4636  0017F4  C081  FFF8         	movff	??_high_isr+7,tblptru
  4637  0017F8  C080  FFF7         	movff	??_high_isr+6,tblptrh
  4638  0017FC  C07F  FFF6         	movff	??_high_isr+5,tblptrl
  4639  001800  C07E  FFDA         	movff	??_high_isr+4,fsr2h
  4640  001804  C07D  FFD9         	movff	??_high_isr+3,fsr2l
  4641  001808  C07C  FFE2         	movff	??_high_isr+2,fsr1h
  4642  00180C  C07B  FFE1         	movff	??_high_isr+1,fsr1l
  4643  001810  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4644  001812  0011               	retfie		f
  4645  001814                     __end_of_high_isr:
  4646                           	opt callstack 0
  4647                           
  4648 ;; *************** function _setPDC0 *****************
  4649 ;; Defined at:
  4650 ;;		line 114 in file "./motor_pwm.h"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;  dutyCyclePer    4   16[BANK0 ] long 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  dutyCycleQC     2   24[BANK0 ] int 
  4655 ;;  dutyCycle       2   22[BANK0 ] int 
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  1    wreg      void 
  4658 ;; Registers used:
  4659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4665 ;;      Params:         0       4       0       0
  4666 ;;      Locals:         0       4       0       0
  4667 ;;      Temps:          0       2       0       0
  4668 ;;      Totals:         0      10       0       0
  4669 ;;Total ram usage:       10 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; Hardware stack levels required when called:    8
  4672 ;; This function calls:
  4673 ;;		___lmul
  4674 ;;		i2___aldiv
  4675 ;;		i2___awdiv
  4676 ;;		i2_printf
  4677 ;; This function is called by:
  4678 ;;		_high_isr
  4679 ;; This function uses a non-reentrant model
  4680 ;;
  4681                           
  4682                           	psect	text26
  4683  0014AC                     __ptext26:
  4684                           	opt callstack 0
  4685  0014AC                     _setPDC0:
  4686                           	opt callstack 10
  4687                           
  4688                           ;./motor_pwm.h: 115:  int dutyCycle = PWMPeriod*(dutyCyclePercent+100)/200;
  4689                           
  4690                           ;incstack = 0
  4691  0014AC  0E64               	movlw	100
  4692  0014AE  0100               	movlb	0	; () banked
  4693  0014B0  2570               	addwf	setPDC0@dutyCyclePercent& (0+255),w,b
  4694  0014B2  6E01               	movwf	___lmul@multiplier,c
  4695  0014B4  0E00               	movlw	0
  4696  0014B6  2171               	addwfc	(setPDC0@dutyCyclePercent+1)& (0+255),w,b
  4697  0014B8  6E02               	movwf	___lmul@multiplier+1,c
  4698  0014BA  0E00               	movlw	0
  4699  0014BC  2172               	addwfc	(setPDC0@dutyCyclePercent+2)& (0+255),w,b
  4700  0014BE  6E03               	movwf	___lmul@multiplier+2,c
  4701  0014C0  0E00               	movlw	0
  4702  0014C2  2173               	addwfc	(setPDC0@dutyCyclePercent+3)& (0+255),w,b
  4703  0014C4  6E04               	movwf	___lmul@multiplier+3,c
  4704  0014C6  C12E  F005         	movff	_PWMPeriod,___lmul@multiplicand
  4705  0014CA  C12F  F006         	movff	_PWMPeriod+1,___lmul@multiplicand+1
  4706  0014CE  0E00               	movlw	0
  4707  0014D0  BE06               	btfsc	___lmul@multiplicand+1,7,c
  4708  0014D2  0EFF               	movlw	-1
  4709  0014D4  6E07               	movwf	___lmul@multiplicand+2,c
  4710  0014D6  6E08               	movwf	___lmul@multiplicand+3,c
  4711  0014D8  ECDF  F00E         	call	___lmul	;wreg free
  4712  0014DC  C001  F00D         	movff	?___lmul,i2___aldiv@dividend
  4713  0014E0  C002  F00E         	movff	?___lmul+1,i2___aldiv@dividend+1
  4714  0014E4  C003  F00F         	movff	?___lmul+2,i2___aldiv@dividend+2
  4715  0014E8  C004  F010         	movff	?___lmul+3,i2___aldiv@dividend+3
  4716  0014EC  0EC8               	movlw	200
  4717  0014EE  6E11               	movwf	i2___aldiv@divisor,c
  4718  0014F0  0E00               	movlw	0
  4719  0014F2  6E12               	movwf	i2___aldiv@divisor+1,c
  4720  0014F4  0E00               	movlw	0
  4721  0014F6  6E13               	movwf	i2___aldiv@divisor+2,c
  4722  0014F8  0E00               	movlw	0
  4723  0014FA  6E14               	movwf	i2___aldiv@divisor+3,c
  4724  0014FC  EC42  F00B         	call	i2___aldiv	;wreg free
  4725  001500  C00D  F076         	movff	?i2___aldiv,setPDC0@dutyCycle
  4726  001504  C00E  F077         	movff	?i2___aldiv+1,setPDC0@dutyCycle+1
  4727                           
  4728                           ;./motor_pwm.h: 116:  int dutyCycleQC=dutyCycle*4;
  4729  001508  C076  F074         	movff	setPDC0@dutyCycle,??_setPDC0
  4730  00150C  C077  F075         	movff	setPDC0@dutyCycle+1,??_setPDC0+1
  4731  001510  0100               	movlb	0	; () banked
  4732  001512  90D8               	bcf	status,0,c
  4733  001514  3774               	rlcf	??_setPDC0& (0+255),f,b
  4734  001516  3775               	rlcf	(??_setPDC0+1)& (0+255),f,b
  4735  001518  90D8               	bcf	status,0,c
  4736  00151A  3774               	rlcf	??_setPDC0& (0+255),f,b
  4737  00151C  3775               	rlcf	(??_setPDC0+1)& (0+255),f,b
  4738  00151E  C074  F078         	movff	??_setPDC0,setPDC0@dutyCycleQC
  4739  001522  C075  F079         	movff	??_setPDC0+1,setPDC0@dutyCycleQC+1
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;./motor_pwm.h: 117:  PDC0H=dutyCycleQC/256;
  4743  001526  C078  F001         	movff	setPDC0@dutyCycleQC,i2___awdiv@dividend
  4744  00152A  C079  F002         	movff	setPDC0@dutyCycleQC+1,i2___awdiv@dividend+1
  4745  00152E  0E01               	movlw	1
  4746  001530  6E04               	movwf	i2___awdiv@divisor+1,c
  4747  001532  0E00               	movlw	0
  4748  001534  6E03               	movwf	i2___awdiv@divisor,c
  4749  001536  ECD6  F00D         	call	i2___awdiv	;wreg free
  4750  00153A  5001               	movf	?i2___awdiv,w,c
  4751  00153C  6E78               	movwf	3960,c	;volatile
  4752                           
  4753                           ;./motor_pwm.h: 118:  PDC0L=dutyCycleQC%256;
  4754  00153E  C078  FF79         	movff	setPDC0@dutyCycleQC,3961	;volatile
  4755                           
  4756                           ;./motor_pwm.h: 119:     printf("dutycyclePrecent = %li \r\n", dutyCyclePercent);
  4757  001542  0E01               	movlw	low STR_2
  4758  001544  0100               	movlb	0	; () banked
  4759  001546  6F66               	movwf	i2printf@fmt& (0+255),b
  4760  001548  0E03               	movlw	high STR_2
  4761  00154A  6F67               	movwf	(i2printf@fmt+1)& (0+255),b
  4762  00154C  C070  F068         	movff	setPDC0@dutyCyclePercent,?i2_printf+2
  4763  001550  C071  F069         	movff	setPDC0@dutyCyclePercent+1,?i2_printf+3
  4764  001554  C072  F06A         	movff	setPDC0@dutyCyclePercent+2,?i2_printf+4
  4765  001558  C073  F06B         	movff	setPDC0@dutyCyclePercent+3,?i2_printf+5
  4766  00155C  ECA1  F00F         	call	i2_printf	;wreg free
  4767                           
  4768                           ;./motor_pwm.h: 120:     printf("dutycyle = %d \r\n", dutyCycle);
  4769  001560  0E1B               	movlw	low STR_3
  4770  001562  0100               	movlb	0	; () banked
  4771  001564  6F66               	movwf	i2printf@fmt& (0+255),b
  4772  001566  0E03               	movlw	high STR_3
  4773  001568  6F67               	movwf	(i2printf@fmt+1)& (0+255),b
  4774  00156A  C076  F068         	movff	setPDC0@dutyCycle,?i2_printf+2
  4775  00156E  C077  F069         	movff	setPDC0@dutyCycle+1,?i2_printf+3
  4776  001572  ECA1  F00F         	call	i2_printf	;wreg free
  4777                           
  4778                           ;./motor_pwm.h: 121:     printf("PDCOH: %d\r\n", dutyCycleQC/256);
  4779  001576  0E2C               	movlw	low STR_4
  4780  001578  0100               	movlb	0	; () banked
  4781  00157A  6F66               	movwf	i2printf@fmt& (0+255),b
  4782  00157C  0E03               	movlw	high STR_4
  4783  00157E  6F67               	movwf	(i2printf@fmt+1)& (0+255),b
  4784  001580  C078  F001         	movff	setPDC0@dutyCycleQC,i2___awdiv@dividend
  4785  001584  C079  F002         	movff	setPDC0@dutyCycleQC+1,i2___awdiv@dividend+1
  4786  001588  0E01               	movlw	1
  4787  00158A  6E04               	movwf	i2___awdiv@divisor+1,c
  4788  00158C  0E00               	movlw	0
  4789  00158E  6E03               	movwf	i2___awdiv@divisor,c
  4790  001590  ECD6  F00D         	call	i2___awdiv	;wreg free
  4791  001594  C001  F068         	movff	?i2___awdiv,?i2_printf+2
  4792  001598  C002  F069         	movff	?i2___awdiv+1,?i2_printf+3
  4793  00159C  ECA1  F00F         	call	i2_printf	;wreg free
  4794                           
  4795                           ;./motor_pwm.h: 122:     printf("PDCOL: %d\r\n", dutyCycleQC%256);
  4796  0015A0  0E38               	movlw	low STR_5
  4797  0015A2  0100               	movlb	0	; () banked
  4798  0015A4  6F66               	movwf	i2printf@fmt& (0+255),b
  4799  0015A6  0E03               	movlw	high STR_5
  4800  0015A8  6F67               	movwf	(i2printf@fmt+1)& (0+255),b
  4801  0015AA  5178               	movf	setPDC0@dutyCycleQC& (0+255),w,b
  4802  0015AC  6F68               	movwf	(?i2_printf+2)& (0+255),b
  4803  0015AE  6B69               	clrf	(?i2_printf+3)& (0+255),b
  4804  0015B0  ECA1  F00F         	call	i2_printf	;wreg free
  4805  0015B4  0012               	return		;funcret
  4806  0015B6                     __end_of_setPDC0:
  4807                           	opt callstack 0
  4808                           
  4809 ;; *************** function i2_printf *****************
  4810 ;; Defined at:
  4811 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;  fmt             2    6[BANK0 ] PTR const unsigned char 
  4814 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_3(17), 
  4815 ;;		 -> STR_2(26), STR_1(10), 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  printf          2   14[BANK0 ] PTR void [1]
  4818 ;;		 -> ?i2_printf(2), ?_printf(2), 
  4819 ;;  printf          2   12[BANK0 ] int 
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  2    6[BANK0 ] int 
  4822 ;; Registers used:
  4823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4829 ;;      Params:         0       6       0       0
  4830 ;;      Locals:         0       4       0       0
  4831 ;;      Temps:          0       0       0       0
  4832 ;;      Totals:         0      10       0       0
  4833 ;;Total ram usage:       10 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; Hardware stack levels required when called:    7
  4836 ;; This function calls:
  4837 ;;		i2_vfprintf
  4838 ;; This function is called by:
  4839 ;;		_setPDC0
  4840 ;;		_high_isr
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           	psect	text27
  4845  001F42                     __ptext27:
  4846                           	opt callstack 0
  4847  001F42                     i2_printf:
  4848                           	opt callstack 11
  4849                           
  4850                           ;incstack = 0
  4851  001F42  0E68               	movlw	low (?i2_printf+2)
  4852  001F44  0100               	movlb	0	; () banked
  4853  001F46  6F6E               	movwf	i2printf@ap& (0+255),b
  4854  001F48  0E00               	movlw	high (?i2_printf+2)
  4855  001F4A  6F6F               	movwf	(i2printf@ap+1)& (0+255),b
  4856                           
  4857                           ; BSR set to: 0
  4858  001F4C  0E00               	movlw	0
  4859  001F4E  6F60               	movwf	i2vfprintf@fp& (0+255),b
  4860  001F50  0E00               	movlw	0
  4861  001F52  6F61               	movwf	(i2vfprintf@fp+1)& (0+255),b
  4862  001F54  C066  F062         	movff	i2printf@fmt,i2vfprintf@fmt
  4863  001F58  C067  F063         	movff	i2printf@fmt+1,i2vfprintf@fmt+1
  4864  001F5C  0E6E               	movlw	low i2printf@ap
  4865  001F5E  6F64               	movwf	i2vfprintf@ap& (0+255),b
  4866  001F60  0E00               	movlw	high i2printf@ap
  4867  001F62  6F65               	movwf	(i2vfprintf@ap+1)& (0+255),b
  4868  001F64  ECB4  F00E         	call	i2_vfprintf	;wreg free
  4869  001F68  C060  F06C         	movff	?i2_vfprintf,i2printf@ret
  4870  001F6C  C061  F06D         	movff	?i2_vfprintf+1,i2printf@ret+1
  4871  001F70  0012               	return		;funcret
  4872  001F72                     __end_ofi2_printf:
  4873                           	opt callstack 0
  4874                           
  4875 ;; *************** function i2_vfprintf *****************
  4876 ;; Defined at:
  4877 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  4880 ;;		 -> NULL(0), 
  4881 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4882 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_3(17), 
  4883 ;;		 -> STR_2(26), STR_1(10), 
  4884 ;;  ap              2    4[BANK0 ] PTR PTR void 
  4885 ;;		 -> i2printf@ap(2), printf@ap(2), 
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;  vfprintf        2   92[COMRAM] PTR unsigned char 
  4888 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_3(17), 
  4889 ;;		 -> STR_2(26), STR_1(10), 
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  2    0[BANK0 ] int 
  4892 ;; Registers used:
  4893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4899 ;;      Params:         0       6       0       0
  4900 ;;      Locals:         2       0       0       0
  4901 ;;      Temps:          0       0       0       0
  4902 ;;      Totals:         2       6       0       0
  4903 ;;Total ram usage:        8 bytes
  4904 ;; Hardware stack levels used:    1
  4905 ;; Hardware stack levels required when called:    6
  4906 ;; This function calls:
  4907 ;;		i2_vfpfcnvrt
  4908 ;; This function is called by:
  4909 ;;		i2_printf
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           	psect	text28
  4914  001D68                     __ptext28:
  4915                           	opt callstack 0
  4916  001D68                     i2_vfprintf:
  4917                           	opt callstack 11
  4918                           
  4919                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  4920                           
  4921                           ;incstack = 0
  4922  001D68  C062  F05D         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  4923  001D6C  C063  F05E         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  4924                           
  4925                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  4926  001D70  0E00               	movlw	0
  4927  001D72  0101               	movlb	1	; () banked
  4928  001D74  6F2D               	movwf	(_nout+1)& (0+255),b
  4929  001D76  0E00               	movlw	0
  4930  001D78  6F2C               	movwf	_nout& (0+255),b
  4931                           
  4932                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  4933  001D7A  D013               	goto	i2l2580
  4934  001D7C                     i2l2578:
  4935                           
  4936                           ; BSR set to: 1
  4937                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  4938  001D7C  C060  F041         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  4939  001D80  C061  F042         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  4940  001D84  0E5D               	movlw	low i2vfprintf@cfmt
  4941  001D86  6E43               	movwf	i2vfpfcnvrt@fmt,c
  4942  001D88  0E00               	movlw	high i2vfprintf@cfmt
  4943  001D8A  6E44               	movwf	i2vfpfcnvrt@fmt+1,c
  4944  001D8C  C064  F045         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  4945  001D90  C065  F046         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  4946  001D94  ECFD  F002         	call	i2_vfpfcnvrt	;wreg free
  4947  001D98  5041               	movf	?i2_vfpfcnvrt,w,c
  4948  001D9A  0101               	movlb	1	; () banked
  4949  001D9C  272C               	addwf	_nout& (0+255),f,b
  4950  001D9E  5042               	movf	?i2_vfpfcnvrt+1,w,c
  4951  001DA0  232D               	addwfc	(_nout+1)& (0+255),f,b
  4952  001DA2                     i2l2580:
  4953                           
  4954                           ; BSR set to: 1
  4955                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  4956  001DA2  C05D  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  4957  001DA6  C05E  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  4958  001DAA                     	if	0	;tblptru may be non-zero
  4959  001DAA                     	endif
  4960  001DAA                     	if	0	;tblptru may be non-zero
  4961  001DAA                     	endif
  4962  001DAA  0008               	tblrd		*
  4963  001DAC  50F5               	movf	tablat,w,c
  4964  001DAE  0900               	iorlw	0
  4965  001DB0  A4D8               	btfss	status,2,c
  4966  001DB2  D7E4               	goto	i2l2578
  4967                           
  4968                           ; BSR set to: 1
  4969                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  4970  001DB4  C12C  F060         	movff	_nout,?i2_vfprintf
  4971  001DB8  C12D  F061         	movff	_nout+1,?i2_vfprintf+1
  4972                           
  4973                           ; BSR set to: 1
  4974  001DBC  0012               	return		;funcret
  4975  001DBE                     __end_ofi2_vfprintf:
  4976                           	opt callstack 0
  4977                           
  4978 ;; *************** function i2_vfpfcnvrt *****************
  4979 ;; Defined at:
  4980 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  4983 ;;		 -> NULL(0), 
  4984 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  4985 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  4986 ;;  ap              2   68[COMRAM] PTR PTR void 
  4987 ;;		 -> i2printf@ap(2), printf@ap(2), 
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;  vfpfcnvrt       8   84[COMRAM] long long 
  4990 ;;  vfpfcnvrt       8    0        unsigned long long 
  4991 ;;  vfpfcnvrt       4    0        unsigned long long 
  4992 ;;  vfpfcnvrt       3    0        PTR void 
  4993 ;;  vfpfcnvrt       3    0        unsigned char [3]
  4994 ;;  vfpfcnvrt       3    0        PTR unsigned char 
  4995 ;;  vfpfcnvrt       2    0        int 
  4996 ;;  vfpfcnvrt       2    0        int 
  4997 ;;  vfpfcnvrt       1    0        unsigned char 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  2   64[COMRAM] int 
  5000 ;; Registers used:
  5001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5007 ;;      Params:         6       0       0       0
  5008 ;;      Locals:         8       0       0       0
  5009 ;;      Temps:         14       0       0       0
  5010 ;;      Totals:        28       0       0       0
  5011 ;;Total ram usage:       28 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:    5
  5014 ;; This function calls:
  5015 ;;		i2_dtoa
  5016 ;;		i2_fputc
  5017 ;;		i2_strncmp
  5018 ;; This function is called by:
  5019 ;;		i2_vfprintf
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	text29
  5024  0005FA                     __ptext29:
  5025                           	opt callstack 0
  5026  0005FA                     i2_vfpfcnvrt:
  5027                           	opt callstack 11
  5028                           
  5029                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  5030                           
  5031                           ; BSR set to: 1
  5032                           ;incstack = 0
  5033  0005FA  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5034  0005FE  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5035  000602  CFDE FFF6          	movff	postinc2,tblptrl
  5036  000606  CFDD FFF7          	movff	postdec2,tblptrh
  5037  00060A                     	if	0	;tblptru may be non-zero
  5038  00060A                     	endif
  5039  00060A                     	if	0	;tblptru may be non-zero
  5040  00060A                     	endif
  5041  00060A  0008               	tblrd		*
  5042  00060C  50F5               	movf	tablat,w,c
  5043  00060E  0A25               	xorlw	37
  5044  000610  A4D8               	btfss	status,2,c
  5045  000612  D122               	goto	i2l2560
  5046                           
  5047                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  5048  000614  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5049  000618  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5050  00061C  2ADE               	incf	postinc2,f,c
  5051  00061E  0E00               	movlw	0
  5052  000620  22DD               	addwfc	postdec2,f,c
  5053                           
  5054                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  5055  000622  0E00               	movlw	0
  5056  000624  0100               	movlb	0	; () banked
  5057  000626  6FD5               	movwf	(_width+1)& (0+255),b
  5058  000628  0E00               	movlw	0
  5059  00062A  6FD4               	movwf	_width& (0+255),b
  5060  00062C  C0D4  F0D8         	movff	_width,_flags
  5061  000630  C0D5  F0D9         	movff	_width+1,_flags+1
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  5065  000634  69D6               	setf	_prec& (0+255),b
  5066  000636  69D7               	setf	(_prec+1)& (0+255),b
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  5070  000638  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5071  00063C  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5072  000640  CFDE FFF6          	movff	postinc2,tblptrl
  5073  000644  CFDD FFF7          	movff	postdec2,tblptrh
  5074  000648                     	if	0	;tblptru may be non-zero
  5075  000648                     	endif
  5076  000648                     	if	0	;tblptru may be non-zero
  5077  000648                     	endif
  5078  000648  0008               	tblrd		*
  5079  00064A  50F5               	movf	tablat,w,c
  5080  00064C  0A64               	xorlw	100
  5081  00064E  B4D8               	btfsc	status,2,c
  5082  000650  D00D               	goto	i2u243_40
  5083                           
  5084                           ; BSR set to: 0
  5085  000652  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5086  000656  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5087  00065A  CFDE FFF6          	movff	postinc2,tblptrl
  5088  00065E  CFDD FFF7          	movff	postdec2,tblptrh
  5089  000662                     	if	0	;tblptru may be non-zero
  5090  000662                     	endif
  5091  000662                     	if	0	;tblptru may be non-zero
  5092  000662                     	endif
  5093  000662  0008               	tblrd		*
  5094  000664  50F5               	movf	tablat,w,c
  5095  000666  0A69               	xorlw	105
  5096  000668  A4D8               	btfss	status,2,c
  5097  00066A  D03F               	goto	i2l2534
  5098  00066C                     i2u243_40:
  5099                           
  5100                           ; BSR set to: 0
  5101                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  5102  00066C  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5103  000670  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5104  000674  2ADE               	incf	postinc2,f,c
  5105  000676  0E00               	movlw	0
  5106  000678  22DD               	addwfc	postdec2,f,c
  5107                           
  5108                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  5109  00067A  C045  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  5110  00067E  C046  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  5111  000682  CFDF F047          	movff	indf2,??i2_vfpfcnvrt
  5112  000686  0E02               	movlw	2
  5113  000688  26DE               	addwf	postinc2,f,c
  5114  00068A  CFDF F048          	movff	indf2,??i2_vfpfcnvrt+1
  5115  00068E  0E00               	movlw	0
  5116  000690  22DD               	addwfc	postdec2,f,c
  5117  000692  C047  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  5118  000696  C048  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  5119  00069A  CFDE F055          	movff	postinc2,i2vfpfcnvrt@ll
  5120  00069E  CFDD F056          	movff	postdec2,i2vfpfcnvrt@ll+1
  5121  0006A2  0E00               	movlw	0
  5122  0006A4  BE56               	btfsc	i2vfpfcnvrt@ll+1,7,c
  5123  0006A6  0EFF               	movlw	-1
  5124  0006A8  6E57               	movwf	i2vfpfcnvrt@ll+2,c
  5125  0006AA  6E58               	movwf	i2vfpfcnvrt@ll+3,c
  5126  0006AC  6E59               	movwf	i2vfpfcnvrt@ll+4,c
  5127  0006AE  6E5A               	movwf	i2vfpfcnvrt@ll+5,c
  5128  0006B0  6E5B               	movwf	i2vfpfcnvrt@ll+6,c
  5129  0006B2  6E5C               	movwf	i2vfpfcnvrt@ll+7,c
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  5133  0006B4  C041  F01D         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
  5134  0006B8  C042  F01E         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
  5135  0006BC  C055  F01F         	movff	i2vfpfcnvrt@ll,i2dtoa@d
  5136  0006C0  C056  F020         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
  5137  0006C4  C057  F021         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
  5138  0006C8  C058  F022         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
  5139  0006CC  C059  F023         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
  5140  0006D0  C05A  F024         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
  5141  0006D4  C05B  F025         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
  5142  0006D8  C05C  F026         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
  5143  0006DC  EC6A  F005         	call	i2_dtoa	;wreg free
  5144  0006E0  C01D  F041         	movff	?i2_dtoa,?i2_vfpfcnvrt
  5145  0006E4  C01E  F042         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
  5146  0006E8  0012               	return	
  5147  0006EA                     i2l2534:
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  5151  0006EA  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5152  0006EE  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5153  0006F2  CFDE F001          	movff	postinc2,i2strncmp@_l
  5154  0006F6  CFDD F002          	movff	postdec2,i2strncmp@_l+1
  5155  0006FA  0E56               	movlw	low STR_7
  5156  0006FC  6E03               	movwf	i2strncmp@_r,c
  5157  0006FE  0E03               	movlw	high STR_7
  5158  000700  6E04               	movwf	i2strncmp@_r+1,c
  5159  000702  0E00               	movlw	0
  5160  000704  6E06               	movwf	i2strncmp@n+1,c
  5161  000706  0E02               	movlw	2
  5162  000708  6E05               	movwf	i2strncmp@n,c
  5163  00070A  EC60  F00C         	call	i2_strncmp	;wreg free
  5164  00070E  5001               	movf	?i2_strncmp,w,c
  5165  000710  1002               	iorwf	?i2_strncmp+1,w,c
  5166  000712  B4D8               	btfsc	status,2,c
  5167  000714  D016               	goto	i2u245_40
  5168  000716  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5169  00071A  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5170  00071E  CFDE F001          	movff	postinc2,i2strncmp@_l
  5171  000722  CFDD F002          	movff	postdec2,i2strncmp@_l+1
  5172  000726  0E59               	movlw	low STR_11
  5173  000728  6E03               	movwf	i2strncmp@_r,c
  5174  00072A  0E03               	movlw	high STR_11
  5175  00072C  6E04               	movwf	i2strncmp@_r+1,c
  5176  00072E  0E00               	movlw	0
  5177  000730  6E06               	movwf	i2strncmp@n+1,c
  5178  000732  0E02               	movlw	2
  5179  000734  6E05               	movwf	i2strncmp@n,c
  5180  000736  EC60  F00C         	call	i2_strncmp	;wreg free
  5181  00073A  5001               	movf	?i2_strncmp,w,c
  5182  00073C  1002               	iorwf	?i2_strncmp+1,w,c
  5183  00073E  A4D8               	btfss	status,2,c
  5184  000740  D05C               	goto	i2l2544
  5185  000742                     i2u245_40:
  5186                           
  5187                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  5188  000742  0E02               	movlw	2
  5189  000744  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5190  000748  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5191  00074C  26DE               	addwf	postinc2,f,c
  5192  00074E  0E00               	movlw	0
  5193  000750  22DD               	addwfc	postdec2,f,c
  5194                           
  5195                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  5196  000752  C045  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  5197  000756  C046  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  5198  00075A  CFDF F047          	movff	indf2,??i2_vfpfcnvrt
  5199  00075E  0E04               	movlw	4
  5200  000760  26DE               	addwf	postinc2,f,c
  5201  000762  CFDF F048          	movff	indf2,??i2_vfpfcnvrt+1
  5202  000766  0E00               	movlw	0
  5203  000768  22DD               	addwfc	postdec2,f,c
  5204  00076A  C047  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  5205  00076E  C048  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  5206  000772  CFDE F049          	movff	postinc2,??i2_vfpfcnvrt+2
  5207  000776  CFDE F04A          	movff	postinc2,??i2_vfpfcnvrt+3
  5208  00077A  CFDE F04B          	movff	postinc2,??i2_vfpfcnvrt+4
  5209  00077E  CFDE F04C          	movff	postinc2,??i2_vfpfcnvrt+5
  5210  000782  C049  F04D         	movff	??i2_vfpfcnvrt+2,??i2_vfpfcnvrt+6
  5211  000786  C04A  F04E         	movff	??i2_vfpfcnvrt+3,??i2_vfpfcnvrt+7
  5212  00078A  C04B  F04F         	movff	??i2_vfpfcnvrt+4,??i2_vfpfcnvrt+8
  5213  00078E  C04C  F050         	movff	??i2_vfpfcnvrt+5,??i2_vfpfcnvrt+9
  5214  000792  6A51               	clrf	(??i2_vfpfcnvrt+10)& (0+255),c
  5215  000794  BE50               	btfsc	(??i2_vfpfcnvrt+9)& (0+255),7,c
  5216  000796  6851               	setf	(??i2_vfpfcnvrt+10)& (0+255),c
  5217  000798  C051  F052         	movff	??i2_vfpfcnvrt+10,??i2_vfpfcnvrt+11
  5218  00079C  C051  F053         	movff	??i2_vfpfcnvrt+10,??i2_vfpfcnvrt+12
  5219  0007A0  C051  F054         	movff	??i2_vfpfcnvrt+10,??i2_vfpfcnvrt+13
  5220  0007A4  C04D  F055         	movff	??i2_vfpfcnvrt+6,i2vfpfcnvrt@ll
  5221  0007A8  C04E  F056         	movff	??i2_vfpfcnvrt+7,i2vfpfcnvrt@ll+1
  5222  0007AC  C04F  F057         	movff	??i2_vfpfcnvrt+8,i2vfpfcnvrt@ll+2
  5223  0007B0  C050  F058         	movff	??i2_vfpfcnvrt+9,i2vfpfcnvrt@ll+3
  5224  0007B4  C051  F059         	movff	??i2_vfpfcnvrt+10,i2vfpfcnvrt@ll+4
  5225  0007B8  C052  F05A         	movff	??i2_vfpfcnvrt+11,i2vfpfcnvrt@ll+5
  5226  0007BC  C053  F05B         	movff	??i2_vfpfcnvrt+12,i2vfpfcnvrt@ll+6
  5227  0007C0  C054  F05C         	movff	??i2_vfpfcnvrt+13,i2vfpfcnvrt@ll+7
  5228                           
  5229                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 841:             return dtoa(
      +                          fp, ll);
  5230  0007C4  C041  F01D         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
  5231  0007C8  C042  F01E         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
  5232  0007CC  C055  F01F         	movff	i2vfpfcnvrt@ll,i2dtoa@d
  5233  0007D0  C056  F020         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
  5234  0007D4  C057  F021         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
  5235  0007D8  C058  F022         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
  5236  0007DC  C059  F023         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
  5237  0007E0  C05A  F024         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
  5238  0007E4  C05B  F025         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
  5239  0007E8  C05C  F026         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
  5240  0007EC  EC6A  F005         	call	i2_dtoa	;wreg free
  5241  0007F0  C01D  F041         	movff	?i2_dtoa,?i2_vfpfcnvrt
  5242  0007F4  C01E  F042         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
  5243  0007F8  0012               	return	
  5244  0007FA                     i2l2544:
  5245                           
  5246                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  5247  0007FA  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5248  0007FE  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5249  000802  CFDE FFF6          	movff	postinc2,tblptrl
  5250  000806  CFDD FFF7          	movff	postdec2,tblptrh
  5251  00080A                     	if	0	;tblptru may be non-zero
  5252  00080A                     	endif
  5253  00080A                     	if	0	;tblptru may be non-zero
  5254  00080A                     	endif
  5255  00080A  0008               	tblrd		*
  5256  00080C  50F5               	movf	tablat,w,c
  5257  00080E  0A25               	xorlw	37
  5258  000810  A4D8               	btfss	status,2,c
  5259  000812  D016               	goto	i2l2554
  5260                           
  5261                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  5262  000814  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5263  000818  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5264  00081C  2ADE               	incf	postinc2,f,c
  5265  00081E  0E00               	movlw	0
  5266  000820  22DD               	addwfc	postdec2,f,c
  5267                           
  5268                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  5269  000822  0E00               	movlw	0
  5270  000824  6E03               	movwf	i2fputc@c+1,c
  5271  000826  0E25               	movlw	37
  5272  000828  6E02               	movwf	i2fputc@c,c
  5273  00082A  C041  F004         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  5274  00082E  C042  F005         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  5275  000832  EC4F  F00E         	call	i2_fputc	;wreg free
  5276  000836                     i2l2550:
  5277                           
  5278                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  5279  000836  0E00               	movlw	0
  5280  000838  6E42               	movwf	?i2_vfpfcnvrt+1,c
  5281  00083A  0E01               	movlw	1
  5282  00083C  6E41               	movwf	?i2_vfpfcnvrt,c
  5283  00083E  0012               	return	
  5284  000840                     i2l2554:
  5285                           
  5286                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  5287  000840  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5288  000844  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5289  000848  2ADE               	incf	postinc2,f,c
  5290  00084A  0E00               	movlw	0
  5291  00084C  22DD               	addwfc	postdec2,f,c
  5292                           
  5293                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  5294  00084E  0E00               	movlw	0
  5295  000850  6E42               	movwf	?i2_vfpfcnvrt+1,c
  5296  000852  0E00               	movlw	0
  5297  000854  6E41               	movwf	?i2_vfpfcnvrt,c
  5298  000856  0012               	return	
  5299  000858                     i2l2560:
  5300                           
  5301                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  5302  000858  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5303  00085C  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5304  000860  CFDE FFF6          	movff	postinc2,tblptrl
  5305  000864  CFDD FFF7          	movff	postdec2,tblptrh
  5306  000868                     	if	0	;tblptru may be non-zero
  5307  000868                     	endif
  5308  000868                     	if	0	;tblptru may be non-zero
  5309  000868                     	endif
  5310  000868  0008               	tblrd		*
  5311  00086A  50F5               	movf	tablat,w,c
  5312  00086C  6E02               	movwf	i2fputc@c,c
  5313  00086E  6A03               	clrf	i2fputc@c+1,c
  5314  000870  C041  F004         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  5315  000874  C042  F005         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  5316  000878  EC4F  F00E         	call	i2_fputc	;wreg free
  5317                           
  5318                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  5319  00087C  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5320  000880  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5321  000884  2ADE               	incf	postinc2,f,c
  5322  000886  0E00               	movlw	0
  5323  000888  22DD               	addwfc	postdec2,f,c
  5324  00088A  D7D5               	goto	i2l2550
  5325  00088C                     __end_ofi2_vfpfcnvrt:
  5326                           	opt callstack 0
  5327                           
  5328 ;; *************** function i2_strncmp *****************
  5329 ;; Defined at:
  5330 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  5331 ;; Parameters:    Size  Location     Type
  5332 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  5333 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_3(17), 
  5334 ;;		 -> STR_2(26), STR_1(10), 
  5335 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  5336 ;;		 -> STR_13(3), STR_9(3), 
  5337 ;;  n               2    4[COMRAM] unsigned int 
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;  strncmp         2    9[COMRAM] PTR const unsigned char 
  5340 ;;		 -> STR_13(3), STR_9(3), 
  5341 ;;  strncmp         2    7[COMRAM] PTR const unsigned char 
  5342 ;;		 -> STR_6(8), STR_5(12), STR_4(12), STR_3(17), 
  5343 ;;		 -> STR_2(26), STR_1(10), 
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  2    0[COMRAM] int 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5353 ;;      Params:         6       0       0       0
  5354 ;;      Locals:         4       0       0       0
  5355 ;;      Temps:          1       0       0       0
  5356 ;;      Totals:        11       0       0       0
  5357 ;;Total ram usage:       11 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; This function calls:
  5360 ;;		Nothing
  5361 ;; This function is called by:
  5362 ;;		i2_vfpfcnvrt
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text30
  5367  0018C0                     __ptext30:
  5368                           	opt callstack 0
  5369  0018C0                     i2_strncmp:
  5370                           	opt callstack 15
  5371                           
  5372                           ;incstack = 0
  5373  0018C0  C001  F008         	movff	i2strncmp@_l,i2strncmp@l
  5374  0018C4  C002  F009         	movff	i2strncmp@_l+1,i2strncmp@l+1
  5375  0018C8  C003  F00A         	movff	i2strncmp@_r,i2strncmp@r
  5376  0018CC  C004  F00B         	movff	i2strncmp@_r+1,i2strncmp@r+1
  5377  0018D0  0605               	decf	i2strncmp@n,f,c
  5378  0018D2  A0D8               	btfss	status,0,c
  5379  0018D4  0606               	decf	i2strncmp@n+1,f,c
  5380  0018D6  2805               	incf	i2strncmp@n,w,c
  5381  0018D8  E10F               	bnz	i2l2496
  5382  0018DA  2806               	incf	i2strncmp@n+1,w,c
  5383  0018DC  A4D8               	btfss	status,2,c
  5384  0018DE  D00C               	goto	i2l2496
  5385  0018E0  0E00               	movlw	0
  5386  0018E2  6E02               	movwf	?i2_strncmp+1,c
  5387  0018E4  0E00               	movlw	0
  5388  0018E6  6E01               	movwf	?i2_strncmp,c
  5389  0018E8  0012               	return	
  5390  0018EA                     i2l2494:
  5391  0018EA  4A08               	infsnz	i2strncmp@l,f,c
  5392  0018EC  2A09               	incf	i2strncmp@l+1,f,c
  5393  0018EE  4A0A               	infsnz	i2strncmp@r,f,c
  5394  0018F0  2A0B               	incf	i2strncmp@r+1,f,c
  5395  0018F2  0605               	decf	i2strncmp@n,f,c
  5396  0018F4  A0D8               	btfss	status,0,c
  5397  0018F6  0606               	decf	i2strncmp@n+1,f,c
  5398  0018F8                     i2l2496:
  5399  0018F8  C008  FFF6         	movff	i2strncmp@l,tblptrl
  5400  0018FC  C009  FFF7         	movff	i2strncmp@l+1,tblptrh
  5401  001900                     	if	0	;tblptru may be non-zero
  5402  001900                     	endif
  5403  001900                     	if	0	;tblptru may be non-zero
  5404  001900                     	endif
  5405  001900  0008               	tblrd		*
  5406  001902  50F5               	movf	tablat,w,c
  5407  001904  0900               	iorlw	0
  5408  001906  B4D8               	btfsc	status,2,c
  5409  001908  D01D               	goto	i2u239_40
  5410  00190A  C00A  FFF6         	movff	i2strncmp@r,tblptrl
  5411  00190E  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
  5412  001912                     	if	0	;tblptru may be non-zero
  5413  001912                     	endif
  5414  001912                     	if	0	;tblptru may be non-zero
  5415  001912                     	endif
  5416  001912  0008               	tblrd		*
  5417  001914  50F5               	movf	tablat,w,c
  5418  001916  0900               	iorlw	0
  5419  001918  B4D8               	btfsc	status,2,c
  5420  00191A  D014               	goto	i2u239_40
  5421  00191C  5005               	movf	i2strncmp@n,w,c
  5422  00191E  1006               	iorwf	i2strncmp@n+1,w,c
  5423  001920  B4D8               	btfsc	status,2,c
  5424  001922  D010               	goto	i2u239_40
  5425  001924  C008  FFF6         	movff	i2strncmp@l,tblptrl
  5426  001928  C009  FFF7         	movff	i2strncmp@l+1,tblptrh
  5427  00192C                     	if	0	;tblptru may be non-zero
  5428  00192C                     	endif
  5429  00192C                     	if	0	;tblptru may be non-zero
  5430  00192C                     	endif
  5431  00192C  0008               	tblrd		*
  5432  00192E  CFF5 F007          	movff	tablat,??i2_strncmp
  5433  001932  C00A  FFF6         	movff	i2strncmp@r,tblptrl
  5434  001936  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
  5435  00193A                     	if	0	;tblptru may be non-zero
  5436  00193A                     	endif
  5437  00193A                     	if	0	;tblptru may be non-zero
  5438  00193A                     	endif
  5439  00193A  0008               	tblrd		*
  5440  00193C  50F5               	movf	tablat,w,c
  5441  00193E  1807               	xorwf	??i2_strncmp,w,c
  5442  001940  B4D8               	btfsc	status,2,c
  5443  001942  D7D3               	goto	i2l2494
  5444  001944                     i2u239_40:
  5445  001944  C008  FFF6         	movff	i2strncmp@l,tblptrl
  5446  001948  C009  FFF7         	movff	i2strncmp@l+1,tblptrh
  5447  00194C                     	if	0	;tblptru may be non-zero
  5448  00194C                     	endif
  5449  00194C                     	if	0	;tblptru may be non-zero
  5450  00194C                     	endif
  5451  00194C  0008               	tblrd		*
  5452  00194E  CFF5 F007          	movff	tablat,??i2_strncmp
  5453  001952  C00A  FFF6         	movff	i2strncmp@r,tblptrl
  5454  001956  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
  5455  00195A                     	if	0	;tblptru may be non-zero
  5456  00195A                     	endif
  5457  00195A                     	if	0	;tblptru may be non-zero
  5458  00195A                     	endif
  5459  00195A  0008               	tblrd		*
  5460  00195C  50F5               	movf	tablat,w,c
  5461  00195E  5C07               	subwf	??i2_strncmp,w,c
  5462  001960  6E01               	movwf	?i2_strncmp,c
  5463  001962  6A02               	clrf	?i2_strncmp+1,c
  5464  001964  A0D8               	btfss	status,0,c
  5465  001966  0602               	decf	?i2_strncmp+1,f,c
  5466  001968  0012               	return		;funcret
  5467  00196A                     __end_ofi2_strncmp:
  5468                           	opt callstack 0
  5469                           
  5470 ;; *************** function i2_dtoa *****************
  5471 ;; Defined at:
  5472 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  5475 ;;		 -> NULL(0), 
  5476 ;;  d               8   30[COMRAM] long long 
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;  dtoa            8   54[COMRAM] long long 
  5479 ;;  dtoa            2   62[COMRAM] int 
  5480 ;;  dtoa            2   52[COMRAM] int 
  5481 ;;  dtoa            2   50[COMRAM] int 
  5482 ;;  dtoa            2   48[COMRAM] int 
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  2   28[COMRAM] int 
  5485 ;; Registers used:
  5486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 0/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5492 ;;      Params:        10       0       0       0
  5493 ;;      Locals:        18       0       0       0
  5494 ;;      Temps:          8       0       0       0
  5495 ;;      Totals:        36       0       0       0
  5496 ;;Total ram usage:       36 bytes
  5497 ;; Hardware stack levels used:    1
  5498 ;; Hardware stack levels required when called:    4
  5499 ;; This function calls:
  5500 ;;		i2___aodiv
  5501 ;;		i2___aomod
  5502 ;;		i2_abs
  5503 ;;		i2_pad
  5504 ;; This function is called by:
  5505 ;;		i2_vfpfcnvrt
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           	psect	text31
  5510  000AD4                     __ptext31:
  5511                           	opt callstack 0
  5512  000AD4                     i2_dtoa:
  5513                           	opt callstack 11
  5514                           
  5515                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  5516                           
  5517                           ;incstack = 0
  5518  000AD4  C01F  F037         	movff	i2dtoa@d,i2dtoa@n
  5519  000AD8  C020  F038         	movff	i2dtoa@d+1,i2dtoa@n+1
  5520  000ADC  C021  F039         	movff	i2dtoa@d+2,i2dtoa@n+2
  5521  000AE0  C022  F03A         	movff	i2dtoa@d+3,i2dtoa@n+3
  5522  000AE4  C023  F03B         	movff	i2dtoa@d+4,i2dtoa@n+4
  5523  000AE8  C024  F03C         	movff	i2dtoa@d+5,i2dtoa@n+5
  5524  000AEC  C025  F03D         	movff	i2dtoa@d+6,i2dtoa@n+6
  5525  000AF0  C026  F03E         	movff	i2dtoa@d+7,i2dtoa@n+7
  5526                           
  5527                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  5528  000AF4  AE3E               	btfss	i2dtoa@n+7,7,c
  5529  000AF6  D002               	goto	i2u220_40
  5530  000AF8  0E01               	movlw	1
  5531  000AFA  D001               	goto	i2u221_40
  5532  000AFC                     i2u220_40:
  5533  000AFC  0E00               	movlw	0
  5534  000AFE                     i2u221_40:
  5535  000AFE  6E35               	movwf	i2dtoa@s,c
  5536  000B00  6A36               	clrf	i2dtoa@s+1,c
  5537                           
  5538                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  5539  000B02  5035               	movf	i2dtoa@s,w,c
  5540  000B04  1036               	iorwf	i2dtoa@s+1,w,c
  5541  000B06  B4D8               	btfsc	status,2,c
  5542  000B08  D010               	goto	i2l2432
  5543                           
  5544                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  5545  000B0A  1E3E               	comf	i2dtoa@n+7,f,c
  5546  000B0C  1E3D               	comf	i2dtoa@n+6,f,c
  5547  000B0E  1E3C               	comf	i2dtoa@n+5,f,c
  5548  000B10  1E3B               	comf	i2dtoa@n+4,f,c
  5549  000B12  1E3A               	comf	i2dtoa@n+3,f,c
  5550  000B14  1E39               	comf	i2dtoa@n+2,f,c
  5551  000B16  1E38               	comf	i2dtoa@n+1,f,c
  5552  000B18  6C37               	negf	i2dtoa@n,c
  5553  000B1A  0E00               	movlw	0
  5554  000B1C  2238               	addwfc	i2dtoa@n+1,f,c
  5555  000B1E  2239               	addwfc	i2dtoa@n+2,f,c
  5556  000B20  223A               	addwfc	i2dtoa@n+3,f,c
  5557  000B22  223B               	addwfc	i2dtoa@n+4,f,c
  5558  000B24  223C               	addwfc	i2dtoa@n+5,f,c
  5559  000B26  223D               	addwfc	i2dtoa@n+6,f,c
  5560  000B28  223E               	addwfc	i2dtoa@n+7,f,c
  5561  000B2A                     i2l2432:
  5562                           
  5563                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  5564  000B2A  0100               	movlb	0	; () banked
  5565  000B2C  AFD7               	btfss	(_prec+1)& (0+255),7,b
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  5569  000B2E  93D8               	bcf	_flags& (0+255),1,b
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  5573  000B30  BFD7               	btfsc	(_prec+1)& (0+255),7,b
  5574  000B32  D005               	goto	i2u224_40
  5575  000B34  51D7               	movf	(_prec+1)& (0+255),w,b
  5576  000B36  E108               	bnz	i2l258
  5577  000B38  05D6               	decf	_prec& (0+255),w,b
  5578  000B3A  B0D8               	btfsc	status,0,c
  5579  000B3C  D005               	goto	i2l258
  5580  000B3E                     i2u224_40:
  5581                           
  5582                           ; BSR set to: 0
  5583  000B3E  0E00               	movlw	0
  5584  000B40  6E32               	movwf	i2dtoa@p+1,c
  5585  000B42  0E01               	movlw	1
  5586  000B44  6E31               	movwf	i2dtoa@p,c
  5587  000B46  D004               	goto	i2l260
  5588  000B48                     i2l258:
  5589                           
  5590                           ; BSR set to: 0
  5591  000B48  C0D6  F031         	movff	_prec,i2dtoa@p
  5592  000B4C  C0D7  F032         	movff	_prec+1,i2dtoa@p+1
  5593  000B50                     i2l260:
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  5597  000B50  C0D4  F033         	movff	_width,i2dtoa@w
  5598  000B54  C0D5  F034         	movff	_width+1,i2dtoa@w+1
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  5602  000B58  5035               	movf	i2dtoa@s,w,c
  5603  000B5A  1036               	iorwf	i2dtoa@s+1,w,c
  5604  000B5C  A4D8               	btfss	status,2,c
  5605  000B5E  D002               	goto	i2u226_40
  5606                           
  5607                           ; BSR set to: 0
  5608  000B60  A5D8               	btfss	_flags& (0+255),2,b
  5609  000B62  D003               	goto	i2l2446
  5610  000B64                     i2u226_40:
  5611                           
  5612                           ; BSR set to: 0
  5613                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  5614  000B64  0633               	decf	i2dtoa@w,f,c
  5615  000B66  A0D8               	btfss	status,0,c
  5616  000B68  0634               	decf	i2dtoa@w+1,f,c
  5617  000B6A                     i2l2446:
  5618                           
  5619                           ; BSR set to: 0
  5620                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  5621  000B6A  0E00               	movlw	0
  5622  000B6C  6E40               	movwf	i2dtoa@i+1,c
  5623  000B6E  0E1F               	movlw	31
  5624  000B70  6E3F               	movwf	i2dtoa@i,c
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  5628  000B72  0E00               	movlw	0
  5629  000B74  0101               	movlb	1	; () banked
  5630  000B76  6F4F               	movwf	(_dbuf+31)& (0+255),b
  5631                           
  5632                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5633  000B78  D07C               	goto	i2l2460
  5634  000B7A                     i2l2450:
  5635                           
  5636                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  5637  000B7A  063F               	decf	i2dtoa@i,f,c
  5638  000B7C  A0D8               	btfss	status,0,c
  5639  000B7E  0640               	decf	i2dtoa@i+1,f,c
  5640                           
  5641                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  5642  000B80  0E30               	movlw	low _dbuf
  5643  000B82  243F               	addwf	i2dtoa@i,w,c
  5644  000B84  6ED9               	movwf	fsr2l,c
  5645  000B86  0E01               	movlw	high _dbuf
  5646  000B88  2040               	addwfc	i2dtoa@i+1,w,c
  5647  000B8A  6EDA               	movwf	fsr2h,c
  5648  000B8C  C037  F001         	movff	i2dtoa@n,i2___aomod@dividend
  5649  000B90  C038  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
  5650  000B94  C039  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
  5651  000B98  C03A  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
  5652  000B9C  C03B  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
  5653  000BA0  C03C  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
  5654  000BA4  C03D  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
  5655  000BA8  C03E  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
  5656  000BAC  0E0A               	movlw	10
  5657  000BAE  6E09               	movwf	i2___aomod@divisor,c
  5658  000BB0  0E00               	movlw	0
  5659  000BB2  6E0A               	movwf	i2___aomod@divisor+1,c
  5660  000BB4  0E00               	movlw	0
  5661  000BB6  6E0B               	movwf	i2___aomod@divisor+2,c
  5662  000BB8  0E00               	movlw	0
  5663  000BBA  6E0C               	movwf	i2___aomod@divisor+3,c
  5664  000BBC  0E00               	movlw	0
  5665  000BBE  6E0D               	movwf	i2___aomod@divisor+4,c
  5666  000BC0  0E00               	movlw	0
  5667  000BC2  6E0E               	movwf	i2___aomod@divisor+5,c
  5668  000BC4  0E00               	movlw	0
  5669  000BC6  6E0F               	movwf	i2___aomod@divisor+6,c
  5670  000BC8  0E00               	movlw	0
  5671  000BCA  6E10               	movwf	i2___aomod@divisor+7,c
  5672  000BCC  ECC4  F009         	call	i2___aomod	;wreg free
  5673  000BD0  C001  F027         	movff	?i2___aomod,??i2_dtoa
  5674  000BD4  C002  F028         	movff	?i2___aomod+1,??i2_dtoa+1
  5675  000BD8  C003  F029         	movff	?i2___aomod+2,??i2_dtoa+2
  5676  000BDC  C004  F02A         	movff	?i2___aomod+3,??i2_dtoa+3
  5677  000BE0  C005  F02B         	movff	?i2___aomod+4,??i2_dtoa+4
  5678  000BE4  C006  F02C         	movff	?i2___aomod+5,??i2_dtoa+5
  5679  000BE8  C007  F02D         	movff	?i2___aomod+6,??i2_dtoa+6
  5680  000BEC  C008  F02E         	movff	?i2___aomod+7,??i2_dtoa+7
  5681  000BF0  C027  F013         	movff	??i2_dtoa,i2abs@a
  5682  000BF4  C029  F014         	movff	??i2_dtoa+2,i2abs@a+1
  5683  000BF8  EC88  F00F         	call	i2_abs	;wreg free
  5684  000BFC  5013               	movf	?i2_abs,w,c
  5685  000BFE  0F30               	addlw	48
  5686  000C00  6EDF               	movwf	indf2,c
  5687                           
  5688                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  5689  000C02  0631               	decf	i2dtoa@p,f,c
  5690  000C04  A0D8               	btfss	status,0,c
  5691  000C06  0632               	decf	i2dtoa@p+1,f,c
  5692                           
  5693                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  5694  000C08  0633               	decf	i2dtoa@w,f,c
  5695  000C0A  A0D8               	btfss	status,0,c
  5696  000C0C  0634               	decf	i2dtoa@w+1,f,c
  5697                           
  5698                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  5699  000C0E  C037  F001         	movff	i2dtoa@n,i2___aodiv@dividend
  5700  000C12  C038  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
  5701  000C16  C039  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
  5702  000C1A  C03A  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
  5703  000C1E  C03B  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
  5704  000C22  C03C  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
  5705  000C26  C03D  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
  5706  000C2A  C03E  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
  5707  000C2E  0E0A               	movlw	10
  5708  000C30  6E09               	movwf	i2___aodiv@divisor,c
  5709  000C32  0E00               	movlw	0
  5710  000C34  6E0A               	movwf	i2___aodiv@divisor+1,c
  5711  000C36  0E00               	movlw	0
  5712  000C38  6E0B               	movwf	i2___aodiv@divisor+2,c
  5713  000C3A  0E00               	movlw	0
  5714  000C3C  6E0C               	movwf	i2___aodiv@divisor+3,c
  5715  000C3E  0E00               	movlw	0
  5716  000C40  6E0D               	movwf	i2___aodiv@divisor+4,c
  5717  000C42  0E00               	movlw	0
  5718  000C44  6E0E               	movwf	i2___aodiv@divisor+5,c
  5719  000C46  0E00               	movlw	0
  5720  000C48  6E0F               	movwf	i2___aodiv@divisor+6,c
  5721  000C4A  0E00               	movlw	0
  5722  000C4C  6E10               	movwf	i2___aodiv@divisor+7,c
  5723  000C4E  EC8D  F008         	call	i2___aodiv	;wreg free
  5724  000C52  C001  F037         	movff	?i2___aodiv,i2dtoa@n
  5725  000C56  C002  F038         	movff	?i2___aodiv+1,i2dtoa@n+1
  5726  000C5A  C003  F039         	movff	?i2___aodiv+2,i2dtoa@n+2
  5727  000C5E  C004  F03A         	movff	?i2___aodiv+3,i2dtoa@n+3
  5728  000C62  C005  F03B         	movff	?i2___aodiv+4,i2dtoa@n+4
  5729  000C66  C006  F03C         	movff	?i2___aodiv+5,i2dtoa@n+5
  5730  000C6A  C007  F03D         	movff	?i2___aodiv+6,i2dtoa@n+6
  5731  000C6E  C008  F03E         	movff	?i2___aodiv+7,i2dtoa@n+7
  5732  000C72                     i2l2460:
  5733                           
  5734                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5735  000C72  BE40               	btfsc	i2dtoa@i+1,7,c
  5736  000C74  D020               	goto	i2u231_40
  5737  000C76  5040               	movf	i2dtoa@i+1,w,c
  5738  000C78  E103               	bnz	i2u227_40
  5739  000C7A  043F               	decf	i2dtoa@i,w,c
  5740  000C7C  A0D8               	btfss	status,0,c
  5741  000C7E  D01B               	goto	i2u231_40
  5742  000C80                     i2u227_40:
  5743  000C80  5037               	movf	i2dtoa@n,w,c
  5744  000C82  1038               	iorwf	i2dtoa@n+1,w,c
  5745  000C84  1039               	iorwf	i2dtoa@n+2,w,c
  5746  000C86  103A               	iorwf	i2dtoa@n+3,w,c
  5747  000C88  103B               	iorwf	i2dtoa@n+4,w,c
  5748  000C8A  103C               	iorwf	i2dtoa@n+5,w,c
  5749  000C8C  103D               	iorwf	i2dtoa@n+6,w,c
  5750  000C8E  103E               	iorwf	i2dtoa@n+7,w,c
  5751  000C90  A4D8               	btfss	status,2,c
  5752  000C92  D773               	goto	i2l2450
  5753  000C94  BE32               	btfsc	i2dtoa@p+1,7,c
  5754  000C96  D005               	goto	i2u229_40
  5755  000C98  5032               	movf	i2dtoa@p+1,w,c
  5756  000C9A  E102               	bnz	i2u229_41
  5757  000C9C  0431               	decf	i2dtoa@p,w,c
  5758  000C9E  B0D8               	btfsc	status,0,c
  5759  000CA0                     i2u229_41:
  5760  000CA0  D76C               	goto	i2l2450
  5761  000CA2                     i2u229_40:
  5762  000CA2  BE34               	btfsc	i2dtoa@w+1,7,c
  5763  000CA4  D008               	goto	i2u231_40
  5764  000CA6  5034               	movf	i2dtoa@w+1,w,c
  5765  000CA8  E103               	bnz	i2u230_40
  5766  000CAA  0433               	decf	i2dtoa@w,w,c
  5767  000CAC  A0D8               	btfss	status,0,c
  5768  000CAE  D003               	goto	i2u231_40
  5769  000CB0                     i2u230_40:
  5770  000CB0  0100               	movlb	0	; () banked
  5771  000CB2  B3D8               	btfsc	_flags& (0+255),1,b
  5772  000CB4  D762               	goto	i2l2450
  5773  000CB6                     i2u231_40:
  5774                           
  5775                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  5776  000CB6  5035               	movf	i2dtoa@s,w,c
  5777  000CB8  1036               	iorwf	i2dtoa@s+1,w,c
  5778  000CBA  A4D8               	btfss	status,2,c
  5779  000CBC  D003               	goto	i2u233_40
  5780  000CBE  0100               	movlb	0	; () banked
  5781  000CC0  A5D8               	btfss	_flags& (0+255),2,b
  5782  000CC2  D017               	goto	i2l2484
  5783  000CC4                     i2u233_40:
  5784                           
  5785                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  5786  000CC4  063F               	decf	i2dtoa@i,f,c
  5787  000CC6  A0D8               	btfss	status,0,c
  5788  000CC8  0640               	decf	i2dtoa@i+1,f,c
  5789                           
  5790                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  5791  000CCA  5035               	movf	i2dtoa@s,w,c
  5792  000CCC  1036               	iorwf	i2dtoa@s+1,w,c
  5793  000CCE  A4D8               	btfss	status,2,c
  5794  000CD0  D004               	goto	i2l2480
  5795  000CD2  0E00               	movlw	0
  5796  000CD4  6E30               	movwf	i2_dtoa$870+1,c
  5797  000CD6  0E2B               	movlw	43
  5798  000CD8  D003               	goto	L2
  5799  000CDA                     i2l2480:
  5800  000CDA  0E00               	movlw	0
  5801  000CDC  6E30               	movwf	i2_dtoa$870+1,c
  5802  000CDE  0E2D               	movlw	45
  5803  000CE0                     L2:
  5804  000CE0  6E2F               	movwf	i2_dtoa$870,c
  5805  000CE2  0E30               	movlw	low _dbuf
  5806  000CE4  243F               	addwf	i2dtoa@i,w,c
  5807  000CE6  6ED9               	movwf	fsr2l,c
  5808  000CE8  0E01               	movlw	high _dbuf
  5809  000CEA  2040               	addwfc	i2dtoa@i+1,w,c
  5810  000CEC  6EDA               	movwf	fsr2h,c
  5811  000CEE  C02F  FFDF         	movff	i2_dtoa$870,indf2
  5812  000CF2                     i2l2484:
  5813                           
  5814                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  5815  000CF2  C01D  F012         	movff	i2dtoa@fp,i2pad@fp
  5816  000CF6  C01E  F013         	movff	i2dtoa@fp+1,i2pad@fp+1
  5817  000CFA  0E30               	movlw	low _dbuf
  5818  000CFC  243F               	addwf	i2dtoa@i,w,c
  5819  000CFE  6E14               	movwf	i2pad@buf,c
  5820  000D00  0E01               	movlw	high _dbuf
  5821  000D02  2040               	addwfc	i2dtoa@i+1,w,c
  5822  000D04  6E15               	movwf	i2pad@buf+1,c
  5823  000D06  C033  F016         	movff	i2dtoa@w,i2pad@p
  5824  000D0A  C034  F017         	movff	i2dtoa@w+1,i2pad@p+1
  5825  000D0E  EC04  F00D         	call	i2_pad	;wreg free
  5826  000D12  C012  F01D         	movff	?i2_pad,?i2_dtoa
  5827  000D16  C013  F01E         	movff	?i2_pad+1,?i2_dtoa+1
  5828  000D1A  0012               	return		;funcret
  5829  000D1C                     __end_ofi2_dtoa:
  5830                           	opt callstack 0
  5831                           
  5832 ;; *************** function i2_pad *****************
  5833 ;; Defined at:
  5834 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  5837 ;;		 -> NULL(0), 
  5838 ;;  buf             2   19[COMRAM] PTR unsigned char 
  5839 ;;		 -> dbuf(32), 
  5840 ;;  p               2   21[COMRAM] int 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;  pad             2   26[COMRAM] int 
  5843 ;;  pad             2   24[COMRAM] int 
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  2   17[COMRAM] int 
  5846 ;; Registers used:
  5847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5853 ;;      Params:         6       0       0       0
  5854 ;;      Locals:         4       0       0       0
  5855 ;;      Temps:          1       0       0       0
  5856 ;;      Totals:        11       0       0       0
  5857 ;;Total ram usage:       11 bytes
  5858 ;; Hardware stack levels used:    1
  5859 ;; Hardware stack levels required when called:    3
  5860 ;; This function calls:
  5861 ;;		i2_fputc
  5862 ;;		i2_fputs
  5863 ;;		i2_strlen
  5864 ;; This function is called by:
  5865 ;;		i2_dtoa
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text32
  5870  001A08                     __ptext32:
  5871                           	opt callstack 0
  5872  001A08                     i2_pad:
  5873                           	opt callstack 11
  5874                           
  5875                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  5876                           
  5877                           ;incstack = 0
  5878  001A08  0100               	movlb	0	; () banked
  5879  001A0A  A1D8               	btfss	_flags& (0+255),0,b
  5880  001A0C  D00A               	goto	i2l2272
  5881                           
  5882                           ; BSR set to: 0
  5883                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  5884  001A0E  C014  F00B         	movff	i2pad@buf,i2fputs@s
  5885  001A12  C015  F00C         	movff	i2pad@buf+1,i2fputs@s+1
  5886  001A16  C012  F00D         	movff	i2pad@fp,i2fputs@fp
  5887  001A1A  C013  F00E         	movff	i2pad@fp+1,i2fputs@fp+1
  5888  001A1E  EC52  F00F         	call	i2_fputs	;wreg free
  5889  001A22                     i2l2272:
  5890                           
  5891                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  5892  001A22  BE17               	btfsc	i2pad@p+1,7,c
  5893  001A24  D005               	goto	i2l2276
  5894  001A26  C016  F01B         	movff	i2pad@p,i2pad@w
  5895  001A2A  C017  F01C         	movff	i2pad@p+1,i2pad@w+1
  5896  001A2E  D004               	goto	i2l247
  5897  001A30                     i2l2276:
  5898  001A30  0E00               	movlw	0
  5899  001A32  6E1C               	movwf	i2pad@w+1,c
  5900  001A34  0E00               	movlw	0
  5901  001A36  6E1B               	movwf	i2pad@w,c
  5902  001A38                     i2l247:
  5903                           
  5904                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  5905  001A38  0E00               	movlw	0
  5906  001A3A  6E1A               	movwf	i2pad@i+1,c
  5907  001A3C  0E00               	movlw	0
  5908  001A3E  6E19               	movwf	i2pad@i,c
  5909                           
  5910                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  5911  001A40  D00C               	goto	i2l2282
  5912  001A42                     i2l2278:
  5913                           
  5914                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  5915  001A42  0E00               	movlw	0
  5916  001A44  6E03               	movwf	i2fputc@c+1,c
  5917  001A46  0E20               	movlw	32
  5918  001A48  6E02               	movwf	i2fputc@c,c
  5919  001A4A  C012  F004         	movff	i2pad@fp,i2fputc@fp
  5920  001A4E  C013  F005         	movff	i2pad@fp+1,i2fputc@fp+1
  5921  001A52  EC4F  F00E         	call	i2_fputc	;wreg free
  5922                           
  5923                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  5924  001A56  4A19               	infsnz	i2pad@i,f,c
  5925  001A58  2A1A               	incf	i2pad@i+1,f,c
  5926  001A5A                     i2l2282:
  5927                           
  5928                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  5929  001A5A  501B               	movf	i2pad@w,w,c
  5930  001A5C  5C19               	subwf	i2pad@i,w,c
  5931  001A5E  501A               	movf	i2pad@i+1,w,c
  5932  001A60  0A80               	xorlw	128
  5933  001A62  6E18               	movwf	??i2_pad& (0+255),c
  5934  001A64  501C               	movf	i2pad@w+1,w,c
  5935  001A66  0A80               	xorlw	128
  5936  001A68  5818               	subwfb	??i2_pad& (0+255),w,c
  5937  001A6A  A0D8               	btfss	status,0,c
  5938  001A6C  D7EA               	goto	i2l2278
  5939                           
  5940                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  5941  001A6E  0100               	movlb	0	; () banked
  5942  001A70  B1D8               	btfsc	_flags& (0+255),0,b
  5943  001A72  D00A               	goto	i2l2286
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  5947  001A74  C014  F00B         	movff	i2pad@buf,i2fputs@s
  5948  001A78  C015  F00C         	movff	i2pad@buf+1,i2fputs@s+1
  5949  001A7C  C012  F00D         	movff	i2pad@fp,i2fputs@fp
  5950  001A80  C013  F00E         	movff	i2pad@fp+1,i2fputs@fp+1
  5951  001A84  EC52  F00F         	call	i2_fputs	;wreg free
  5952  001A88                     i2l2286:
  5953                           
  5954                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  5955  001A88  C014  F001         	movff	i2pad@buf,i2strlen@s
  5956  001A8C  C015  F002         	movff	i2pad@buf+1,i2strlen@s+1
  5957  001A90  ECE5  F00F         	call	i2_strlen	;wreg free
  5958  001A94  501B               	movf	i2pad@w,w,c
  5959  001A96  2401               	addwf	?i2_strlen,w,c
  5960  001A98  6E12               	movwf	?i2_pad,c
  5961  001A9A  501C               	movf	i2pad@w+1,w,c
  5962  001A9C  2002               	addwfc	?i2_strlen+1,w,c
  5963  001A9E  6E13               	movwf	?i2_pad+1,c
  5964  001AA0  0012               	return		;funcret
  5965  001AA2                     __end_ofi2_pad:
  5966                           	opt callstack 0
  5967                           
  5968 ;; *************** function i2_strlen *****************
  5969 ;; Defined at:
  5970 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5973 ;;		 -> dbuf(32), 
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
  5976 ;;		 -> dbuf(32), 
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  2    0[COMRAM] unsigned int 
  5979 ;; Registers used:
  5980 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5986 ;;      Params:         2       0       0       0
  5987 ;;      Locals:         2       0       0       0
  5988 ;;      Temps:          0       0       0       0
  5989 ;;      Totals:         4       0       0       0
  5990 ;;Total ram usage:        4 bytes
  5991 ;; Hardware stack levels used:    1
  5992 ;; This function calls:
  5993 ;;		Nothing
  5994 ;; This function is called by:
  5995 ;;		i2_pad
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           	psect	text33
  6000  001FCA                     __ptext33:
  6001                           	opt callstack 0
  6002  001FCA                     i2_strlen:
  6003                           	opt callstack 13
  6004                           
  6005                           ;incstack = 0
  6006  001FCA  C001  F003         	movff	i2strlen@s,i2strlen@a
  6007  001FCE  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  6008  001FD2  D002               	goto	i2l2180
  6009  001FD4                     i2l2178:
  6010  001FD4  4A01               	infsnz	i2strlen@s,f,c
  6011  001FD6  2A02               	incf	i2strlen@s+1,f,c
  6012  001FD8                     i2l2180:
  6013  001FD8  C001  FFD9         	movff	i2strlen@s,fsr2l
  6014  001FDC  C002  FFDA         	movff	i2strlen@s+1,fsr2h
  6015  001FE0  50DF               	movf	indf2,w,c
  6016  001FE2  A4D8               	btfss	status,2,c
  6017  001FE4  D7F7               	goto	i2l2178
  6018  001FE6  5003               	movf	i2strlen@a,w,c
  6019  001FE8  5C01               	subwf	i2strlen@s,w,c
  6020  001FEA  6E01               	movwf	?i2_strlen,c
  6021  001FEC  5004               	movf	i2strlen@a+1,w,c
  6022  001FEE  5802               	subwfb	i2strlen@s+1,w,c
  6023  001FF0  6E02               	movwf	?i2_strlen+1,c
  6024  001FF2  0012               	return		;funcret
  6025  001FF4                     __end_ofi2_strlen:
  6026                           	opt callstack 0
  6027                           
  6028 ;; *************** function i2_fputs *****************
  6029 ;; Defined at:
  6030 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  6031 ;; Parameters:    Size  Location     Type
  6032 ;;  s               2   10[COMRAM] PTR const unsigned char 
  6033 ;;		 -> dbuf(32), 
  6034 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  6035 ;;		 -> NULL(0), 
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;  fputs           2   15[COMRAM] int 
  6038 ;;  fputs           1   14[COMRAM] unsigned char 
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  2   10[COMRAM] int 
  6041 ;; Registers used:
  6042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6048 ;;      Params:         4       0       0       0
  6049 ;;      Locals:         3       0       0       0
  6050 ;;      Temps:          0       0       0       0
  6051 ;;      Totals:         7       0       0       0
  6052 ;;Total ram usage:        7 bytes
  6053 ;; Hardware stack levels used:    1
  6054 ;; Hardware stack levels required when called:    2
  6055 ;; This function calls:
  6056 ;;		i2_fputc
  6057 ;; This function is called by:
  6058 ;;		i2_pad
  6059 ;; This function uses a non-reentrant model
  6060 ;;
  6061                           
  6062                           	psect	text34
  6063  001EA4                     __ptext34:
  6064                           	opt callstack 0
  6065  001EA4                     i2_fputs:
  6066                           	opt callstack 11
  6067                           
  6068                           ;incstack = 0
  6069  001EA4  0E00               	movlw	0
  6070  001EA6  6E11               	movwf	i2fputs@i+1,c
  6071  001EA8  0E00               	movlw	0
  6072  001EAA  6E10               	movwf	i2fputs@i,c
  6073  001EAC  D00B               	goto	i2l2174
  6074  001EAE                     i2l2170:
  6075  001EAE  C00F  F002         	movff	i2fputs@c,i2fputc@c
  6076  001EB2  6A03               	clrf	i2fputc@c+1,c
  6077  001EB4  C00D  F004         	movff	i2fputs@fp,i2fputc@fp
  6078  001EB8  C00E  F005         	movff	i2fputs@fp+1,i2fputc@fp+1
  6079  001EBC  EC4F  F00E         	call	i2_fputc	;wreg free
  6080  001EC0  4A10               	infsnz	i2fputs@i,f,c
  6081  001EC2  2A11               	incf	i2fputs@i+1,f,c
  6082  001EC4                     i2l2174:
  6083  001EC4  5010               	movf	i2fputs@i,w,c
  6084  001EC6  240B               	addwf	i2fputs@s,w,c
  6085  001EC8  6ED9               	movwf	fsr2l,c
  6086  001ECA  5011               	movf	i2fputs@i+1,w,c
  6087  001ECC  200C               	addwfc	i2fputs@s+1,w,c
  6088  001ECE  6EDA               	movwf	fsr2h,c
  6089  001ED0  50DF               	movf	indf2,w,c
  6090  001ED2  6E0F               	movwf	i2fputs@c,c
  6091  001ED4  500F               	movf	i2fputs@c,w,c
  6092  001ED6  B4D8               	btfsc	status,2,c
  6093  001ED8  0012               	return	
  6094  001EDA  D7E9               	goto	i2l2170
  6095  001EDC                     __end_ofi2_fputs:
  6096                           	opt callstack 0
  6097                           
  6098 ;; *************** function i2_fputc *****************
  6099 ;; Defined at:
  6100 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;  c               2    1[COMRAM] int 
  6103 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  6104 ;;		 -> NULL(0), 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;		None
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  2    1[COMRAM] int 
  6109 ;; Registers used:
  6110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6116 ;;      Params:         4       0       0       0
  6117 ;;      Locals:         0       0       0       0
  6118 ;;      Temps:          5       0       0       0
  6119 ;;      Totals:         9       0       0       0
  6120 ;;Total ram usage:        9 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; Hardware stack levels required when called:    1
  6123 ;; This function calls:
  6124 ;;		i2_putch
  6125 ;; This function is called by:
  6126 ;;		i2_pad
  6127 ;;		i2_vfpfcnvrt
  6128 ;;		i2_fputs
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           	psect	text35
  6133  001C9E                     __ptext35:
  6134                           	opt callstack 0
  6135  001C9E                     i2_fputc:
  6136                           	opt callstack 14
  6137                           
  6138                           ;incstack = 0
  6139  001C9E  5004               	movf	i2fputc@fp,w,c
  6140  001CA0  1005               	iorwf	i2fputc@fp+1,w,c
  6141  001CA2  B4D8               	btfsc	status,2,c
  6142  001CA4  D004               	goto	i2u153_40
  6143  001CA6  5004               	movf	i2fputc@fp,w,c
  6144  001CA8  1005               	iorwf	i2fputc@fp+1,w,c
  6145  001CAA  A4D8               	btfss	status,2,c
  6146  001CAC  D004               	goto	i2l2054
  6147  001CAE                     i2u153_40:
  6148  001CAE  5002               	movf	i2fputc@c,w,c
  6149  001CB0  EC38  F010         	call	i2_putch
  6150  001CB4  0012               	return	
  6151  001CB6                     i2l2054:
  6152  001CB6  EE20 F004          	lfsr	2,4
  6153  001CBA  5004               	movf	i2fputc@fp,w,c
  6154  001CBC  26D9               	addwf	fsr2l,f,c
  6155  001CBE  5005               	movf	i2fputc@fp+1,w,c
  6156  001CC0  22DA               	addwfc	fsr2h,f,c
  6157  001CC2  50DE               	movf	postinc2,w,c
  6158  001CC4  10DE               	iorwf	postinc2,w,c
  6159  001CC6  B4D8               	btfsc	status,2,c
  6160  001CC8  D016               	goto	i2u155_40
  6161  001CCA  EE20 F004          	lfsr	2,4
  6162  001CCE  5004               	movf	i2fputc@fp,w,c
  6163  001CD0  26D9               	addwf	fsr2l,f,c
  6164  001CD2  5005               	movf	i2fputc@fp+1,w,c
  6165  001CD4  22DA               	addwfc	fsr2h,f,c
  6166  001CD6  EE10 F002          	lfsr	1,2
  6167  001CDA  5004               	movf	i2fputc@fp,w,c
  6168  001CDC  26E1               	addwf	fsr1l,f,c
  6169  001CDE  5005               	movf	i2fputc@fp+1,w,c
  6170  001CE0  22E2               	addwfc	fsr1h,f,c
  6171  001CE2  50DE               	movf	postinc2,w,c
  6172  001CE4  5CE6               	subwf	postinc1,w,c
  6173  001CE6  50E6               	movf	postinc1,w,c
  6174  001CE8  0A80               	xorlw	128
  6175  001CEA  6E0A               	movwf	(??i2_fputc+4)& (0+255),c
  6176  001CEC  50DE               	movf	postinc2,w,c
  6177  001CEE  0A80               	xorlw	128
  6178  001CF0  580A               	subwfb	(??i2_fputc+4)& (0+255),w,c
  6179  001CF2  B0D8               	btfsc	status,0,c
  6180  001CF4  0012               	return	
  6181  001CF6                     i2u155_40:
  6182  001CF6  EE20 F002          	lfsr	2,2
  6183  001CFA  5004               	movf	i2fputc@fp,w,c
  6184  001CFC  26D9               	addwf	fsr2l,f,c
  6185  001CFE  5005               	movf	i2fputc@fp+1,w,c
  6186  001D00  22DA               	addwfc	fsr2h,f,c
  6187  001D02  2ADE               	incf	postinc2,f,c
  6188  001D04  0E00               	movlw	0
  6189  001D06  22DD               	addwfc	postdec2,f,c
  6190  001D08  0012               	return		;funcret
  6191  001D0A                     __end_ofi2_fputc:
  6192                           	opt callstack 0
  6193                           
  6194 ;; *************** function i2_putch *****************
  6195 ;; Defined at:
  6196 ;;		line 118 in file "user.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;  byte            1    wreg     unsigned char 
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;  byte            1    0[COMRAM] unsigned char 
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  1    wreg      void 
  6203 ;; Registers used:
  6204 ;;		wreg, status,2
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6210 ;;      Params:         0       0       0       0
  6211 ;;      Locals:         1       0       0       0
  6212 ;;      Temps:          0       0       0       0
  6213 ;;      Totals:         1       0       0       0
  6214 ;;Total ram usage:        1 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; This function calls:
  6217 ;;		Nothing
  6218 ;; This function is called by:
  6219 ;;		i2_fputc
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text36
  6224  002070                     __ptext36:
  6225                           	opt callstack 0
  6226  002070                     i2_putch:
  6227                           	opt callstack 14
  6228                           
  6229                           ;incstack = 0
  6230                           ;i2putch@byte stored from wreg
  6231  002070  6E01               	movwf	i2putch@byte,c
  6232                           
  6233                           ;user.c: 119:     TXSTA = 0x26;
  6234  002072  0E26               	movlw	38
  6235  002074  6EAC               	movwf	4012,c	;volatile
  6236                           
  6237                           ;user.c: 120:     RCSTA1bits.SPEN = 1;
  6238  002076  8EAB               	bsf	4011,7,c	;volatile
  6239  002078                     i2l215:
  6240  002078  A89E               	btfss	3998,4,c	;volatile
  6241  00207A  D7FE               	goto	i2l215
  6242                           
  6243                           ;user.c: 122:     TXREG = byte;
  6244  00207C  C001  FFAD         	movff	i2putch@byte,4013	;volatile
  6245  002080  0012               	return		;funcret
  6246  002082                     __end_ofi2_putch:
  6247                           	opt callstack 0
  6248                           
  6249 ;; *************** function i2_abs *****************
  6250 ;; Defined at:
  6251 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;  a               2   18[COMRAM] int 
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;		None
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  2   18[COMRAM] int 
  6258 ;; Registers used:
  6259 ;;		wreg, status,2, status,0
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6265 ;;      Params:         2       0       0       0
  6266 ;;      Locals:         0       0       0       0
  6267 ;;      Temps:          2       0       0       0
  6268 ;;      Totals:         4       0       0       0
  6269 ;;Total ram usage:        4 bytes
  6270 ;; Hardware stack levels used:    1
  6271 ;; This function calls:
  6272 ;;		Nothing
  6273 ;; This function is called by:
  6274 ;;		i2_dtoa
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text37
  6279  001F10                     __ptext37:
  6280                           	opt callstack 0
  6281  001F10                     i2_abs:
  6282                           	opt callstack 14
  6283                           
  6284                           ;incstack = 0
  6285  001F10  BE14               	btfsc	i2abs@a+1,7,c
  6286  001F12  D005               	goto	i2u213_40
  6287  001F14  5014               	movf	i2abs@a+1,w,c
  6288  001F16  E110               	bnz	i2l973
  6289  001F18  0413               	decf	i2abs@a,w,c
  6290  001F1A  B0D8               	btfsc	status,0,c
  6291  001F1C  D00D               	goto	i2l973
  6292  001F1E                     i2u213_40:
  6293  001F1E  C013  F015         	movff	i2abs@a,??i2_abs
  6294  001F22  C014  F016         	movff	i2abs@a+1,??i2_abs+1
  6295  001F26  1E15               	comf	??i2_abs,f,c
  6296  001F28  1E16               	comf	??i2_abs+1,f,c
  6297  001F2A  4A15               	infsnz	??i2_abs,f,c
  6298  001F2C  2A16               	incf	??i2_abs+1,f,c
  6299  001F2E  C015  F013         	movff	??i2_abs,?i2_abs
  6300  001F32  C016  F014         	movff	??i2_abs+1,?i2_abs+1
  6301  001F36  0012               	return	
  6302  001F38                     i2l973:
  6303  001F38  C013  F013         	movff	i2abs@a,?i2_abs
  6304  001F3C  C014  F014         	movff	i2abs@a+1,?i2_abs+1
  6305  001F40  0012               	return		;funcret
  6306  001F42                     __end_ofi2_abs:
  6307                           	opt callstack 0
  6308                           
  6309 ;; *************** function i2___aomod *****************
  6310 ;; Defined at:
  6311 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;  dividend        8    0[COMRAM] long long 
  6314 ;;  divisor         8    8[COMRAM] long long 
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;  __aomod         1   17[COMRAM] unsigned char 
  6317 ;;  __aomod         1   16[COMRAM] unsigned char 
  6318 ;; Return value:  Size  Location     Type
  6319 ;;                  8    0[COMRAM] long long 
  6320 ;; Registers used:
  6321 ;;		wreg, status,2, status,0
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6327 ;;      Params:        16       0       0       0
  6328 ;;      Locals:         2       0       0       0
  6329 ;;      Temps:          0       0       0       0
  6330 ;;      Totals:        18       0       0       0
  6331 ;;Total ram usage:       18 bytes
  6332 ;; Hardware stack levels used:    1
  6333 ;; This function calls:
  6334 ;;		Nothing
  6335 ;; This function is called by:
  6336 ;;		i2_dtoa
  6337 ;; This function uses a non-reentrant model
  6338 ;;
  6339                           
  6340                           	psect	text38
  6341  001388                     __ptext38:
  6342                           	opt callstack 0
  6343  001388                     i2___aomod:
  6344                           	opt callstack 14
  6345                           
  6346                           ;incstack = 0
  6347  001388  0E00               	movlw	0
  6348  00138A  6E12               	movwf	i2___aomod@sign,c
  6349  00138C  AE08               	btfss	i2___aomod@dividend+7,7,c
  6350  00138E  D012               	goto	i2l2342
  6351  001390  1E08               	comf	i2___aomod@dividend+7,f,c
  6352  001392  1E07               	comf	i2___aomod@dividend+6,f,c
  6353  001394  1E06               	comf	i2___aomod@dividend+5,f,c
  6354  001396  1E05               	comf	i2___aomod@dividend+4,f,c
  6355  001398  1E04               	comf	i2___aomod@dividend+3,f,c
  6356  00139A  1E03               	comf	i2___aomod@dividend+2,f,c
  6357  00139C  1E02               	comf	i2___aomod@dividend+1,f,c
  6358  00139E  6C01               	negf	i2___aomod@dividend,c
  6359  0013A0  0E00               	movlw	0
  6360  0013A2  2202               	addwfc	i2___aomod@dividend+1,f,c
  6361  0013A4  2203               	addwfc	i2___aomod@dividend+2,f,c
  6362  0013A6  2204               	addwfc	i2___aomod@dividend+3,f,c
  6363  0013A8  2205               	addwfc	i2___aomod@dividend+4,f,c
  6364  0013AA  2206               	addwfc	i2___aomod@dividend+5,f,c
  6365  0013AC  2207               	addwfc	i2___aomod@dividend+6,f,c
  6366  0013AE  2208               	addwfc	i2___aomod@dividend+7,f,c
  6367  0013B0  0E01               	movlw	1
  6368  0013B2  6E12               	movwf	i2___aomod@sign,c
  6369  0013B4                     i2l2342:
  6370  0013B4  AE10               	btfss	i2___aomod@divisor+7,7,c
  6371  0013B6  D010               	goto	i2l2346
  6372  0013B8  1E10               	comf	i2___aomod@divisor+7,f,c
  6373  0013BA  1E0F               	comf	i2___aomod@divisor+6,f,c
  6374  0013BC  1E0E               	comf	i2___aomod@divisor+5,f,c
  6375  0013BE  1E0D               	comf	i2___aomod@divisor+4,f,c
  6376  0013C0  1E0C               	comf	i2___aomod@divisor+3,f,c
  6377  0013C2  1E0B               	comf	i2___aomod@divisor+2,f,c
  6378  0013C4  1E0A               	comf	i2___aomod@divisor+1,f,c
  6379  0013C6  6C09               	negf	i2___aomod@divisor,c
  6380  0013C8  0E00               	movlw	0
  6381  0013CA  220A               	addwfc	i2___aomod@divisor+1,f,c
  6382  0013CC  220B               	addwfc	i2___aomod@divisor+2,f,c
  6383  0013CE  220C               	addwfc	i2___aomod@divisor+3,f,c
  6384  0013D0  220D               	addwfc	i2___aomod@divisor+4,f,c
  6385  0013D2  220E               	addwfc	i2___aomod@divisor+5,f,c
  6386  0013D4  220F               	addwfc	i2___aomod@divisor+6,f,c
  6387  0013D6  2210               	addwfc	i2___aomod@divisor+7,f,c
  6388  0013D8                     i2l2346:
  6389  0013D8  5009               	movf	i2___aomod@divisor,w,c
  6390  0013DA  100A               	iorwf	i2___aomod@divisor+1,w,c
  6391  0013DC  100B               	iorwf	i2___aomod@divisor+2,w,c
  6392  0013DE  100C               	iorwf	i2___aomod@divisor+3,w,c
  6393  0013E0  100D               	iorwf	i2___aomod@divisor+4,w,c
  6394  0013E2  100E               	iorwf	i2___aomod@divisor+5,w,c
  6395  0013E4  100F               	iorwf	i2___aomod@divisor+6,w,c
  6396  0013E6  1010               	iorwf	i2___aomod@divisor+7,w,c
  6397  0013E8  B4D8               	btfsc	status,2,c
  6398  0013EA  D03C               	goto	i2l2362
  6399  0013EC  0E01               	movlw	1
  6400  0013EE  6E11               	movwf	i2___aomod@counter,c
  6401  0013F0  D00A               	goto	i2l2352
  6402  0013F2                     i2l2350:
  6403  0013F2  90D8               	bcf	status,0,c
  6404  0013F4  3609               	rlcf	i2___aomod@divisor,f,c
  6405  0013F6  360A               	rlcf	i2___aomod@divisor+1,f,c
  6406  0013F8  360B               	rlcf	i2___aomod@divisor+2,f,c
  6407  0013FA  360C               	rlcf	i2___aomod@divisor+3,f,c
  6408  0013FC  360D               	rlcf	i2___aomod@divisor+4,f,c
  6409  0013FE  360E               	rlcf	i2___aomod@divisor+5,f,c
  6410  001400  360F               	rlcf	i2___aomod@divisor+6,f,c
  6411  001402  3610               	rlcf	i2___aomod@divisor+7,f,c
  6412  001404  2A11               	incf	i2___aomod@counter,f,c
  6413  001406                     i2l2352:
  6414  001406  AE10               	btfss	i2___aomod@divisor+7,7,c
  6415  001408  D7F4               	goto	i2l2350
  6416  00140A                     i2u210_40:
  6417  00140A  5009               	movf	i2___aomod@divisor,w,c
  6418  00140C  5C01               	subwf	i2___aomod@dividend,w,c
  6419  00140E  500A               	movf	i2___aomod@divisor+1,w,c
  6420  001410  5802               	subwfb	i2___aomod@dividend+1,w,c
  6421  001412  500B               	movf	i2___aomod@divisor+2,w,c
  6422  001414  5803               	subwfb	i2___aomod@dividend+2,w,c
  6423  001416  500C               	movf	i2___aomod@divisor+3,w,c
  6424  001418  5804               	subwfb	i2___aomod@dividend+3,w,c
  6425  00141A  500D               	movf	i2___aomod@divisor+4,w,c
  6426  00141C  5805               	subwfb	i2___aomod@dividend+4,w,c
  6427  00141E  500E               	movf	i2___aomod@divisor+5,w,c
  6428  001420  5806               	subwfb	i2___aomod@dividend+5,w,c
  6429  001422  500F               	movf	i2___aomod@divisor+6,w,c
  6430  001424  5807               	subwfb	i2___aomod@dividend+6,w,c
  6431  001426  5010               	movf	i2___aomod@divisor+7,w,c
  6432  001428  5808               	subwfb	i2___aomod@dividend+7,w,c
  6433  00142A  A0D8               	btfss	status,0,c
  6434  00142C  D010               	goto	i2l2358
  6435  00142E  5009               	movf	i2___aomod@divisor,w,c
  6436  001430  5E01               	subwf	i2___aomod@dividend,f,c
  6437  001432  500A               	movf	i2___aomod@divisor+1,w,c
  6438  001434  5A02               	subwfb	i2___aomod@dividend+1,f,c
  6439  001436  500B               	movf	i2___aomod@divisor+2,w,c
  6440  001438  5A03               	subwfb	i2___aomod@dividend+2,f,c
  6441  00143A  500C               	movf	i2___aomod@divisor+3,w,c
  6442  00143C  5A04               	subwfb	i2___aomod@dividend+3,f,c
  6443  00143E  500D               	movf	i2___aomod@divisor+4,w,c
  6444  001440  5A05               	subwfb	i2___aomod@dividend+4,f,c
  6445  001442  500E               	movf	i2___aomod@divisor+5,w,c
  6446  001444  5A06               	subwfb	i2___aomod@dividend+5,f,c
  6447  001446  500F               	movf	i2___aomod@divisor+6,w,c
  6448  001448  5A07               	subwfb	i2___aomod@dividend+6,f,c
  6449  00144A  5010               	movf	i2___aomod@divisor+7,w,c
  6450  00144C  5A08               	subwfb	i2___aomod@dividend+7,f,c
  6451  00144E                     i2l2358:
  6452  00144E  90D8               	bcf	status,0,c
  6453  001450  3210               	rrcf	i2___aomod@divisor+7,f,c
  6454  001452  320F               	rrcf	i2___aomod@divisor+6,f,c
  6455  001454  320E               	rrcf	i2___aomod@divisor+5,f,c
  6456  001456  320D               	rrcf	i2___aomod@divisor+4,f,c
  6457  001458  320C               	rrcf	i2___aomod@divisor+3,f,c
  6458  00145A  320B               	rrcf	i2___aomod@divisor+2,f,c
  6459  00145C  320A               	rrcf	i2___aomod@divisor+1,f,c
  6460  00145E  3209               	rrcf	i2___aomod@divisor,f,c
  6461  001460  2E11               	decfsz	i2___aomod@counter,f,c
  6462  001462  D7D3               	goto	i2u210_40
  6463  001464                     i2l2362:
  6464  001464  5012               	movf	i2___aomod@sign,w,c
  6465  001466  B4D8               	btfsc	status,2,c
  6466  001468  D010               	goto	i2l2366
  6467  00146A  1E08               	comf	i2___aomod@dividend+7,f,c
  6468  00146C  1E07               	comf	i2___aomod@dividend+6,f,c
  6469  00146E  1E06               	comf	i2___aomod@dividend+5,f,c
  6470  001470  1E05               	comf	i2___aomod@dividend+4,f,c
  6471  001472  1E04               	comf	i2___aomod@dividend+3,f,c
  6472  001474  1E03               	comf	i2___aomod@dividend+2,f,c
  6473  001476  1E02               	comf	i2___aomod@dividend+1,f,c
  6474  001478  6C01               	negf	i2___aomod@dividend,c
  6475  00147A  0E00               	movlw	0
  6476  00147C  2202               	addwfc	i2___aomod@dividend+1,f,c
  6477  00147E  2203               	addwfc	i2___aomod@dividend+2,f,c
  6478  001480  2204               	addwfc	i2___aomod@dividend+3,f,c
  6479  001482  2205               	addwfc	i2___aomod@dividend+4,f,c
  6480  001484  2206               	addwfc	i2___aomod@dividend+5,f,c
  6481  001486  2207               	addwfc	i2___aomod@dividend+6,f,c
  6482  001488  2208               	addwfc	i2___aomod@dividend+7,f,c
  6483  00148A                     i2l2366:
  6484  00148A  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
  6485  00148E  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
  6486  001492  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
  6487  001496  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
  6488  00149A  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
  6489  00149E  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
  6490  0014A2  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
  6491  0014A6  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
  6492  0014AA  0012               	return		;funcret
  6493  0014AC                     __end_ofi2___aomod:
  6494                           	opt callstack 0
  6495                           
  6496 ;; *************** function i2___aodiv *****************
  6497 ;; Defined at:
  6498 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;  dividend        8    0[COMRAM] long long 
  6501 ;;  divisor         8    8[COMRAM] long long 
  6502 ;; Auto vars:     Size  Location     Type
  6503 ;;  __aodiv         8   18[COMRAM] long long 
  6504 ;;  __aodiv         1   17[COMRAM] unsigned char 
  6505 ;;  __aodiv         1   16[COMRAM] unsigned char 
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  8    0[COMRAM] long long 
  6508 ;; Registers used:
  6509 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6515 ;;      Params:        16       0       0       0
  6516 ;;      Locals:        10       0       0       0
  6517 ;;      Temps:          0       0       0       0
  6518 ;;      Totals:        26       0       0       0
  6519 ;;Total ram usage:       26 bytes
  6520 ;; Hardware stack levels used:    1
  6521 ;; This function calls:
  6522 ;;		Nothing
  6523 ;; This function is called by:
  6524 ;;		i2_dtoa
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text39
  6529  00111A                     __ptext39:
  6530                           	opt callstack 0
  6531  00111A                     i2___aodiv:
  6532                           	opt callstack 14
  6533                           
  6534                           ;incstack = 0
  6535  00111A  0E00               	movlw	0
  6536  00111C  6E12               	movwf	i2___aodiv@sign,c
  6537  00111E  AE10               	btfss	i2___aodiv@divisor+7,7,c
  6538  001120  D012               	goto	i2l2298
  6539  001122  1E10               	comf	i2___aodiv@divisor+7,f,c
  6540  001124  1E0F               	comf	i2___aodiv@divisor+6,f,c
  6541  001126  1E0E               	comf	i2___aodiv@divisor+5,f,c
  6542  001128  1E0D               	comf	i2___aodiv@divisor+4,f,c
  6543  00112A  1E0C               	comf	i2___aodiv@divisor+3,f,c
  6544  00112C  1E0B               	comf	i2___aodiv@divisor+2,f,c
  6545  00112E  1E0A               	comf	i2___aodiv@divisor+1,f,c
  6546  001130  6C09               	negf	i2___aodiv@divisor,c
  6547  001132  0E00               	movlw	0
  6548  001134  220A               	addwfc	i2___aodiv@divisor+1,f,c
  6549  001136  220B               	addwfc	i2___aodiv@divisor+2,f,c
  6550  001138  220C               	addwfc	i2___aodiv@divisor+3,f,c
  6551  00113A  220D               	addwfc	i2___aodiv@divisor+4,f,c
  6552  00113C  220E               	addwfc	i2___aodiv@divisor+5,f,c
  6553  00113E  220F               	addwfc	i2___aodiv@divisor+6,f,c
  6554  001140  2210               	addwfc	i2___aodiv@divisor+7,f,c
  6555  001142  0E01               	movlw	1
  6556  001144  6E12               	movwf	i2___aodiv@sign,c
  6557  001146                     i2l2298:
  6558  001146  AE08               	btfss	i2___aodiv@dividend+7,7,c
  6559  001148  D012               	goto	i2l2304
  6560  00114A  1E08               	comf	i2___aodiv@dividend+7,f,c
  6561  00114C  1E07               	comf	i2___aodiv@dividend+6,f,c
  6562  00114E  1E06               	comf	i2___aodiv@dividend+5,f,c
  6563  001150  1E05               	comf	i2___aodiv@dividend+4,f,c
  6564  001152  1E04               	comf	i2___aodiv@dividend+3,f,c
  6565  001154  1E03               	comf	i2___aodiv@dividend+2,f,c
  6566  001156  1E02               	comf	i2___aodiv@dividend+1,f,c
  6567  001158  6C01               	negf	i2___aodiv@dividend,c
  6568  00115A  0E00               	movlw	0
  6569  00115C  2202               	addwfc	i2___aodiv@dividend+1,f,c
  6570  00115E  2203               	addwfc	i2___aodiv@dividend+2,f,c
  6571  001160  2204               	addwfc	i2___aodiv@dividend+3,f,c
  6572  001162  2205               	addwfc	i2___aodiv@dividend+4,f,c
  6573  001164  2206               	addwfc	i2___aodiv@dividend+5,f,c
  6574  001166  2207               	addwfc	i2___aodiv@dividend+6,f,c
  6575  001168  2208               	addwfc	i2___aodiv@dividend+7,f,c
  6576  00116A  0E01               	movlw	1
  6577  00116C  1A12               	xorwf	i2___aodiv@sign,f,c
  6578  00116E                     i2l2304:
  6579  00116E  EE20  F013         	lfsr	2,i2___aodiv@quotient
  6580  001172  0E07               	movlw	7
  6581  001174                     i2u202_41:
  6582  001174  6ADE               	clrf	postinc2,c
  6583  001176  06E8               	decf	wreg,f,c
  6584  001178  E2FD               	bc	i2u202_41
  6585  00117A  5009               	movf	i2___aodiv@divisor,w,c
  6586  00117C  100A               	iorwf	i2___aodiv@divisor+1,w,c
  6587  00117E  100B               	iorwf	i2___aodiv@divisor+2,w,c
  6588  001180  100C               	iorwf	i2___aodiv@divisor+3,w,c
  6589  001182  100D               	iorwf	i2___aodiv@divisor+4,w,c
  6590  001184  100E               	iorwf	i2___aodiv@divisor+5,w,c
  6591  001186  100F               	iorwf	i2___aodiv@divisor+6,w,c
  6592  001188  1010               	iorwf	i2___aodiv@divisor+7,w,c
  6593  00118A  B4D8               	btfsc	status,2,c
  6594  00118C  D046               	goto	i2l2326
  6595  00118E  0E01               	movlw	1
  6596  001190  6E11               	movwf	i2___aodiv@counter,c
  6597  001192  D00A               	goto	i2l2312
  6598  001194                     i2l2310:
  6599  001194  90D8               	bcf	status,0,c
  6600  001196  3609               	rlcf	i2___aodiv@divisor,f,c
  6601  001198  360A               	rlcf	i2___aodiv@divisor+1,f,c
  6602  00119A  360B               	rlcf	i2___aodiv@divisor+2,f,c
  6603  00119C  360C               	rlcf	i2___aodiv@divisor+3,f,c
  6604  00119E  360D               	rlcf	i2___aodiv@divisor+4,f,c
  6605  0011A0  360E               	rlcf	i2___aodiv@divisor+5,f,c
  6606  0011A2  360F               	rlcf	i2___aodiv@divisor+6,f,c
  6607  0011A4  3610               	rlcf	i2___aodiv@divisor+7,f,c
  6608  0011A6  2A11               	incf	i2___aodiv@counter,f,c
  6609  0011A8                     i2l2312:
  6610  0011A8  AE10               	btfss	i2___aodiv@divisor+7,7,c
  6611  0011AA  D7F4               	goto	i2l2310
  6612  0011AC                     i2u204_40:
  6613  0011AC  90D8               	bcf	status,0,c
  6614  0011AE  3613               	rlcf	i2___aodiv@quotient,f,c
  6615  0011B0  3614               	rlcf	i2___aodiv@quotient+1,f,c
  6616  0011B2  3615               	rlcf	i2___aodiv@quotient+2,f,c
  6617  0011B4  3616               	rlcf	i2___aodiv@quotient+3,f,c
  6618  0011B6  3617               	rlcf	i2___aodiv@quotient+4,f,c
  6619  0011B8  3618               	rlcf	i2___aodiv@quotient+5,f,c
  6620  0011BA  3619               	rlcf	i2___aodiv@quotient+6,f,c
  6621  0011BC  361A               	rlcf	i2___aodiv@quotient+7,f,c
  6622  0011BE  5009               	movf	i2___aodiv@divisor,w,c
  6623  0011C0  5C01               	subwf	i2___aodiv@dividend,w,c
  6624  0011C2  500A               	movf	i2___aodiv@divisor+1,w,c
  6625  0011C4  5802               	subwfb	i2___aodiv@dividend+1,w,c
  6626  0011C6  500B               	movf	i2___aodiv@divisor+2,w,c
  6627  0011C8  5803               	subwfb	i2___aodiv@dividend+2,w,c
  6628  0011CA  500C               	movf	i2___aodiv@divisor+3,w,c
  6629  0011CC  5804               	subwfb	i2___aodiv@dividend+3,w,c
  6630  0011CE  500D               	movf	i2___aodiv@divisor+4,w,c
  6631  0011D0  5805               	subwfb	i2___aodiv@dividend+4,w,c
  6632  0011D2  500E               	movf	i2___aodiv@divisor+5,w,c
  6633  0011D4  5806               	subwfb	i2___aodiv@dividend+5,w,c
  6634  0011D6  500F               	movf	i2___aodiv@divisor+6,w,c
  6635  0011D8  5807               	subwfb	i2___aodiv@dividend+6,w,c
  6636  0011DA  5010               	movf	i2___aodiv@divisor+7,w,c
  6637  0011DC  5808               	subwfb	i2___aodiv@dividend+7,w,c
  6638  0011DE  A0D8               	btfss	status,0,c
  6639  0011E0  D011               	goto	i2l2322
  6640  0011E2  5009               	movf	i2___aodiv@divisor,w,c
  6641  0011E4  5E01               	subwf	i2___aodiv@dividend,f,c
  6642  0011E6  500A               	movf	i2___aodiv@divisor+1,w,c
  6643  0011E8  5A02               	subwfb	i2___aodiv@dividend+1,f,c
  6644  0011EA  500B               	movf	i2___aodiv@divisor+2,w,c
  6645  0011EC  5A03               	subwfb	i2___aodiv@dividend+2,f,c
  6646  0011EE  500C               	movf	i2___aodiv@divisor+3,w,c
  6647  0011F0  5A04               	subwfb	i2___aodiv@dividend+3,f,c
  6648  0011F2  500D               	movf	i2___aodiv@divisor+4,w,c
  6649  0011F4  5A05               	subwfb	i2___aodiv@dividend+4,f,c
  6650  0011F6  500E               	movf	i2___aodiv@divisor+5,w,c
  6651  0011F8  5A06               	subwfb	i2___aodiv@dividend+5,f,c
  6652  0011FA  500F               	movf	i2___aodiv@divisor+6,w,c
  6653  0011FC  5A07               	subwfb	i2___aodiv@dividend+6,f,c
  6654  0011FE  5010               	movf	i2___aodiv@divisor+7,w,c
  6655  001200  5A08               	subwfb	i2___aodiv@dividend+7,f,c
  6656  001202  8013               	bsf	i2___aodiv@quotient,0,c
  6657  001204                     i2l2322:
  6658  001204  90D8               	bcf	status,0,c
  6659  001206  3210               	rrcf	i2___aodiv@divisor+7,f,c
  6660  001208  320F               	rrcf	i2___aodiv@divisor+6,f,c
  6661  00120A  320E               	rrcf	i2___aodiv@divisor+5,f,c
  6662  00120C  320D               	rrcf	i2___aodiv@divisor+4,f,c
  6663  00120E  320C               	rrcf	i2___aodiv@divisor+3,f,c
  6664  001210  320B               	rrcf	i2___aodiv@divisor+2,f,c
  6665  001212  320A               	rrcf	i2___aodiv@divisor+1,f,c
  6666  001214  3209               	rrcf	i2___aodiv@divisor,f,c
  6667  001216  2E11               	decfsz	i2___aodiv@counter,f,c
  6668  001218  D7C9               	goto	i2u204_40
  6669  00121A                     i2l2326:
  6670  00121A  5012               	movf	i2___aodiv@sign,w,c
  6671  00121C  B4D8               	btfsc	status,2,c
  6672  00121E  D010               	goto	i2l2330
  6673  001220  1E1A               	comf	i2___aodiv@quotient+7,f,c
  6674  001222  1E19               	comf	i2___aodiv@quotient+6,f,c
  6675  001224  1E18               	comf	i2___aodiv@quotient+5,f,c
  6676  001226  1E17               	comf	i2___aodiv@quotient+4,f,c
  6677  001228  1E16               	comf	i2___aodiv@quotient+3,f,c
  6678  00122A  1E15               	comf	i2___aodiv@quotient+2,f,c
  6679  00122C  1E14               	comf	i2___aodiv@quotient+1,f,c
  6680  00122E  6C13               	negf	i2___aodiv@quotient,c
  6681  001230  0E00               	movlw	0
  6682  001232  2214               	addwfc	i2___aodiv@quotient+1,f,c
  6683  001234  2215               	addwfc	i2___aodiv@quotient+2,f,c
  6684  001236  2216               	addwfc	i2___aodiv@quotient+3,f,c
  6685  001238  2217               	addwfc	i2___aodiv@quotient+4,f,c
  6686  00123A  2218               	addwfc	i2___aodiv@quotient+5,f,c
  6687  00123C  2219               	addwfc	i2___aodiv@quotient+6,f,c
  6688  00123E  221A               	addwfc	i2___aodiv@quotient+7,f,c
  6689  001240                     i2l2330:
  6690  001240  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
  6691  001244  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
  6692  001248  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
  6693  00124C  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
  6694  001250  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
  6695  001254  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
  6696  001258  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
  6697  00125C  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
  6698  001260  0012               	return		;funcret
  6699  001262                     __end_ofi2___aodiv:
  6700                           	opt callstack 0
  6701                           
  6702 ;; *************** function i2___awdiv *****************
  6703 ;; Defined at:
  6704 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;  dividend        2    0[COMRAM] int 
  6707 ;;  divisor         2    2[COMRAM] int 
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;  __awdiv         2    6[COMRAM] int 
  6710 ;;  __awdiv         1    5[COMRAM] unsigned char 
  6711 ;;  __awdiv         1    4[COMRAM] unsigned char 
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  2    0[COMRAM] int 
  6714 ;; Registers used:
  6715 ;;		wreg, status,2, status,0
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6721 ;;      Params:         4       0       0       0
  6722 ;;      Locals:         4       0       0       0
  6723 ;;      Temps:          0       0       0       0
  6724 ;;      Totals:         8       0       0       0
  6725 ;;Total ram usage:        8 bytes
  6726 ;; Hardware stack levels used:    1
  6727 ;; This function calls:
  6728 ;;		Nothing
  6729 ;; This function is called by:
  6730 ;;		_setPDC0
  6731 ;; This function uses a non-reentrant model
  6732 ;;
  6733                           
  6734                           	psect	text40
  6735  001BAC                     __ptext40:
  6736                           	opt callstack 0
  6737  001BAC                     i2___awdiv:
  6738                           	opt callstack 17
  6739                           
  6740                           ;incstack = 0
  6741  001BAC  0E00               	movlw	0
  6742  001BAE  6E06               	movwf	i2___awdiv@sign,c
  6743  001BB0  AE04               	btfss	i2___awdiv@divisor+1,7,c
  6744  001BB2  D006               	goto	i2l2786
  6745  001BB4  6C03               	negf	i2___awdiv@divisor,c
  6746  001BB6  1E04               	comf	i2___awdiv@divisor+1,f,c
  6747  001BB8  B0D8               	btfsc	status,0,c
  6748  001BBA  2A04               	incf	i2___awdiv@divisor+1,f,c
  6749  001BBC  0E01               	movlw	1
  6750  001BBE  6E06               	movwf	i2___awdiv@sign,c
  6751  001BC0                     i2l2786:
  6752  001BC0  AE02               	btfss	i2___awdiv@dividend+1,7,c
  6753  001BC2  D006               	goto	i2l2792
  6754  001BC4  6C01               	negf	i2___awdiv@dividend,c
  6755  001BC6  1E02               	comf	i2___awdiv@dividend+1,f,c
  6756  001BC8  B0D8               	btfsc	status,0,c
  6757  001BCA  2A02               	incf	i2___awdiv@dividend+1,f,c
  6758  001BCC  0E01               	movlw	1
  6759  001BCE  1A06               	xorwf	i2___awdiv@sign,f,c
  6760  001BD0                     i2l2792:
  6761  001BD0  0E00               	movlw	0
  6762  001BD2  6E08               	movwf	i2___awdiv@quotient+1,c
  6763  001BD4  0E00               	movlw	0
  6764  001BD6  6E07               	movwf	i2___awdiv@quotient,c
  6765  001BD8  5003               	movf	i2___awdiv@divisor,w,c
  6766  001BDA  1004               	iorwf	i2___awdiv@divisor+1,w,c
  6767  001BDC  B4D8               	btfsc	status,2,c
  6768  001BDE  D01C               	goto	i2l2814
  6769  001BE0  0E01               	movlw	1
  6770  001BE2  6E05               	movwf	i2___awdiv@counter,c
  6771  001BE4  D004               	goto	i2l2800
  6772  001BE6                     i2l2798:
  6773  001BE6  90D8               	bcf	status,0,c
  6774  001BE8  3603               	rlcf	i2___awdiv@divisor,f,c
  6775  001BEA  3604               	rlcf	i2___awdiv@divisor+1,f,c
  6776  001BEC  2A05               	incf	i2___awdiv@counter,f,c
  6777  001BEE                     i2l2800:
  6778  001BEE  AE04               	btfss	i2___awdiv@divisor+1,7,c
  6779  001BF0  D7FA               	goto	i2l2798
  6780  001BF2                     i2u274_40:
  6781  001BF2  90D8               	bcf	status,0,c
  6782  001BF4  3607               	rlcf	i2___awdiv@quotient,f,c
  6783  001BF6  3608               	rlcf	i2___awdiv@quotient+1,f,c
  6784  001BF8  5003               	movf	i2___awdiv@divisor,w,c
  6785  001BFA  5C01               	subwf	i2___awdiv@dividend,w,c
  6786  001BFC  5004               	movf	i2___awdiv@divisor+1,w,c
  6787  001BFE  5802               	subwfb	i2___awdiv@dividend+1,w,c
  6788  001C00  A0D8               	btfss	status,0,c
  6789  001C02  D005               	goto	i2l2810
  6790  001C04  5003               	movf	i2___awdiv@divisor,w,c
  6791  001C06  5E01               	subwf	i2___awdiv@dividend,f,c
  6792  001C08  5004               	movf	i2___awdiv@divisor+1,w,c
  6793  001C0A  5A02               	subwfb	i2___awdiv@dividend+1,f,c
  6794  001C0C  8007               	bsf	i2___awdiv@quotient,0,c
  6795  001C0E                     i2l2810:
  6796  001C0E  90D8               	bcf	status,0,c
  6797  001C10  3204               	rrcf	i2___awdiv@divisor+1,f,c
  6798  001C12  3203               	rrcf	i2___awdiv@divisor,f,c
  6799  001C14  2E05               	decfsz	i2___awdiv@counter,f,c
  6800  001C16  D7ED               	goto	i2u274_40
  6801  001C18                     i2l2814:
  6802  001C18  5006               	movf	i2___awdiv@sign,w,c
  6803  001C1A  B4D8               	btfsc	status,2,c
  6804  001C1C  D004               	goto	i2l2818
  6805  001C1E  6C07               	negf	i2___awdiv@quotient,c
  6806  001C20  1E08               	comf	i2___awdiv@quotient+1,f,c
  6807  001C22  B0D8               	btfsc	status,0,c
  6808  001C24  2A08               	incf	i2___awdiv@quotient+1,f,c
  6809  001C26                     i2l2818:
  6810  001C26  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  6811  001C2A  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  6812  001C2E  0012               	return		;funcret
  6813  001C30                     __end_ofi2___awdiv:
  6814                           	opt callstack 0
  6815                           
  6816 ;; *************** function i2___aldiv *****************
  6817 ;; Defined at:
  6818 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aldiv.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;  dividend        4   12[COMRAM] long 
  6821 ;;  divisor         4   16[COMRAM] long 
  6822 ;; Auto vars:     Size  Location     Type
  6823 ;;  __aldiv         4   22[COMRAM] long 
  6824 ;;  __aldiv         1   21[COMRAM] unsigned char 
  6825 ;;  __aldiv         1   20[COMRAM] unsigned char 
  6826 ;; Return value:  Size  Location     Type
  6827 ;;                  4   12[COMRAM] long 
  6828 ;; Registers used:
  6829 ;;		wreg, status,2, status,0
  6830 ;; Tracked objects:
  6831 ;;		On entry : 0/0
  6832 ;;		On exit  : 0/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6835 ;;      Params:         8       0       0       0
  6836 ;;      Locals:         6       0       0       0
  6837 ;;      Temps:          0       0       0       0
  6838 ;;      Totals:        14       0       0       0
  6839 ;;Total ram usage:       14 bytes
  6840 ;; Hardware stack levels used:    1
  6841 ;; This function calls:
  6842 ;;		Nothing
  6843 ;; This function is called by:
  6844 ;;		_setPDC0
  6845 ;; This function uses a non-reentrant model
  6846 ;;
  6847                           
  6848                           	psect	text41
  6849  001684                     __ptext41:
  6850                           	opt callstack 0
  6851  001684                     i2___aldiv:
  6852                           	opt callstack 17
  6853                           
  6854                           ;incstack = 0
  6855  001684  0E00               	movlw	0
  6856  001686  6E16               	movwf	i2___aldiv@sign,c
  6857  001688  AE14               	btfss	i2___aldiv@divisor+3,7,c
  6858  00168A  D00A               	goto	i2l2742
  6859  00168C  1E14               	comf	i2___aldiv@divisor+3,f,c
  6860  00168E  1E13               	comf	i2___aldiv@divisor+2,f,c
  6861  001690  1E12               	comf	i2___aldiv@divisor+1,f,c
  6862  001692  6C11               	negf	i2___aldiv@divisor,c
  6863  001694  0E00               	movlw	0
  6864  001696  2212               	addwfc	i2___aldiv@divisor+1,f,c
  6865  001698  2213               	addwfc	i2___aldiv@divisor+2,f,c
  6866  00169A  2214               	addwfc	i2___aldiv@divisor+3,f,c
  6867  00169C  0E01               	movlw	1
  6868  00169E  6E16               	movwf	i2___aldiv@sign,c
  6869  0016A0                     i2l2742:
  6870  0016A0  AE10               	btfss	i2___aldiv@dividend+3,7,c
  6871  0016A2  D00A               	goto	i2l2748
  6872  0016A4  1E10               	comf	i2___aldiv@dividend+3,f,c
  6873  0016A6  1E0F               	comf	i2___aldiv@dividend+2,f,c
  6874  0016A8  1E0E               	comf	i2___aldiv@dividend+1,f,c
  6875  0016AA  6C0D               	negf	i2___aldiv@dividend,c
  6876  0016AC  0E00               	movlw	0
  6877  0016AE  220E               	addwfc	i2___aldiv@dividend+1,f,c
  6878  0016B0  220F               	addwfc	i2___aldiv@dividend+2,f,c
  6879  0016B2  2210               	addwfc	i2___aldiv@dividend+3,f,c
  6880  0016B4  0E01               	movlw	1
  6881  0016B6  1A16               	xorwf	i2___aldiv@sign,f,c
  6882  0016B8                     i2l2748:
  6883  0016B8  0E00               	movlw	0
  6884  0016BA  6E17               	movwf	i2___aldiv@quotient,c
  6885  0016BC  0E00               	movlw	0
  6886  0016BE  6E18               	movwf	i2___aldiv@quotient+1,c
  6887  0016C0  0E00               	movlw	0
  6888  0016C2  6E19               	movwf	i2___aldiv@quotient+2,c
  6889  0016C4  0E00               	movlw	0
  6890  0016C6  6E1A               	movwf	i2___aldiv@quotient+3,c
  6891  0016C8  5011               	movf	i2___aldiv@divisor,w,c
  6892  0016CA  1012               	iorwf	i2___aldiv@divisor+1,w,c
  6893  0016CC  1013               	iorwf	i2___aldiv@divisor+2,w,c
  6894  0016CE  1014               	iorwf	i2___aldiv@divisor+3,w,c
  6895  0016D0  B4D8               	btfsc	status,2,c
  6896  0016D2  D02A               	goto	i2l2770
  6897  0016D4  0E01               	movlw	1
  6898  0016D6  6E15               	movwf	i2___aldiv@counter,c
  6899  0016D8  D006               	goto	i2l2756
  6900  0016DA                     i2l2754:
  6901  0016DA  90D8               	bcf	status,0,c
  6902  0016DC  3611               	rlcf	i2___aldiv@divisor,f,c
  6903  0016DE  3612               	rlcf	i2___aldiv@divisor+1,f,c
  6904  0016E0  3613               	rlcf	i2___aldiv@divisor+2,f,c
  6905  0016E2  3614               	rlcf	i2___aldiv@divisor+3,f,c
  6906  0016E4  2A15               	incf	i2___aldiv@counter,f,c
  6907  0016E6                     i2l2756:
  6908  0016E6  AE14               	btfss	i2___aldiv@divisor+3,7,c
  6909  0016E8  D7F8               	goto	i2l2754
  6910  0016EA                     i2u268_40:
  6911  0016EA  90D8               	bcf	status,0,c
  6912  0016EC  3617               	rlcf	i2___aldiv@quotient,f,c
  6913  0016EE  3618               	rlcf	i2___aldiv@quotient+1,f,c
  6914  0016F0  3619               	rlcf	i2___aldiv@quotient+2,f,c
  6915  0016F2  361A               	rlcf	i2___aldiv@quotient+3,f,c
  6916  0016F4  5011               	movf	i2___aldiv@divisor,w,c
  6917  0016F6  5C0D               	subwf	i2___aldiv@dividend,w,c
  6918  0016F8  5012               	movf	i2___aldiv@divisor+1,w,c
  6919  0016FA  580E               	subwfb	i2___aldiv@dividend+1,w,c
  6920  0016FC  5013               	movf	i2___aldiv@divisor+2,w,c
  6921  0016FE  580F               	subwfb	i2___aldiv@dividend+2,w,c
  6922  001700  5014               	movf	i2___aldiv@divisor+3,w,c
  6923  001702  5810               	subwfb	i2___aldiv@dividend+3,w,c
  6924  001704  A0D8               	btfss	status,0,c
  6925  001706  D009               	goto	i2l2766
  6926  001708  5011               	movf	i2___aldiv@divisor,w,c
  6927  00170A  5E0D               	subwf	i2___aldiv@dividend,f,c
  6928  00170C  5012               	movf	i2___aldiv@divisor+1,w,c
  6929  00170E  5A0E               	subwfb	i2___aldiv@dividend+1,f,c
  6930  001710  5013               	movf	i2___aldiv@divisor+2,w,c
  6931  001712  5A0F               	subwfb	i2___aldiv@dividend+2,f,c
  6932  001714  5014               	movf	i2___aldiv@divisor+3,w,c
  6933  001716  5A10               	subwfb	i2___aldiv@dividend+3,f,c
  6934  001718  8017               	bsf	i2___aldiv@quotient,0,c
  6935  00171A                     i2l2766:
  6936  00171A  90D8               	bcf	status,0,c
  6937  00171C  3214               	rrcf	i2___aldiv@divisor+3,f,c
  6938  00171E  3213               	rrcf	i2___aldiv@divisor+2,f,c
  6939  001720  3212               	rrcf	i2___aldiv@divisor+1,f,c
  6940  001722  3211               	rrcf	i2___aldiv@divisor,f,c
  6941  001724  2E15               	decfsz	i2___aldiv@counter,f,c
  6942  001726  D7E1               	goto	i2u268_40
  6943  001728                     i2l2770:
  6944  001728  5016               	movf	i2___aldiv@sign,w,c
  6945  00172A  B4D8               	btfsc	status,2,c
  6946  00172C  D008               	goto	i2l2774
  6947  00172E  1E1A               	comf	i2___aldiv@quotient+3,f,c
  6948  001730  1E19               	comf	i2___aldiv@quotient+2,f,c
  6949  001732  1E18               	comf	i2___aldiv@quotient+1,f,c
  6950  001734  6C17               	negf	i2___aldiv@quotient,c
  6951  001736  0E00               	movlw	0
  6952  001738  2218               	addwfc	i2___aldiv@quotient+1,f,c
  6953  00173A  2219               	addwfc	i2___aldiv@quotient+2,f,c
  6954  00173C  221A               	addwfc	i2___aldiv@quotient+3,f,c
  6955  00173E                     i2l2774:
  6956  00173E  C017  F00D         	movff	i2___aldiv@quotient,?i2___aldiv
  6957  001742  C018  F00E         	movff	i2___aldiv@quotient+1,?i2___aldiv+1
  6958  001746  C019  F00F         	movff	i2___aldiv@quotient+2,?i2___aldiv+2
  6959  00174A  C01A  F010         	movff	i2___aldiv@quotient+3,?i2___aldiv+3
  6960  00174E  0012               	return		;funcret
  6961  001750                     __end_ofi2___aldiv:
  6962                           	opt callstack 0
  6963                           
  6964 ;; *************** function ___lmul *****************
  6965 ;; Defined at:
  6966 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul32.c"
  6967 ;; Parameters:    Size  Location     Type
  6968 ;;  multiplier      4    0[COMRAM] unsigned long 
  6969 ;;  multiplicand    4    4[COMRAM] unsigned long 
  6970 ;; Auto vars:     Size  Location     Type
  6971 ;;  product         4    8[COMRAM] unsigned long 
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  4    0[COMRAM] unsigned long 
  6974 ;; Registers used:
  6975 ;;		wreg, status,2, status,0
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6981 ;;      Params:         8       0       0       0
  6982 ;;      Locals:         4       0       0       0
  6983 ;;      Temps:          0       0       0       0
  6984 ;;      Totals:        12       0       0       0
  6985 ;;Total ram usage:       12 bytes
  6986 ;; Hardware stack levels used:    1
  6987 ;; This function calls:
  6988 ;;		Nothing
  6989 ;; This function is called by:
  6990 ;;		_setPDC0
  6991 ;;		_setPDC1
  6992 ;;		_setPDC2
  6993 ;;		_setPDC3
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text42
  6998  001DBE                     __ptext42:
  6999                           	opt callstack 0
  7000  001DBE                     ___lmul:
  7001                           	opt callstack 17
  7002                           
  7003                           ;incstack = 0
  7004  001DBE  0E00               	movlw	0
  7005  001DC0  6E09               	movwf	___lmul@product,c
  7006  001DC2  0E00               	movlw	0
  7007  001DC4  6E0A               	movwf	___lmul@product+1,c
  7008  001DC6  0E00               	movlw	0
  7009  001DC8  6E0B               	movwf	___lmul@product+2,c
  7010  001DCA  0E00               	movlw	0
  7011  001DCC  6E0C               	movwf	___lmul@product+3,c
  7012  001DCE                     i2l2616:
  7013  001DCE  A001               	btfss	___lmul@multiplier,0,c
  7014  001DD0  D008               	goto	i2l2620
  7015  001DD2  5005               	movf	___lmul@multiplicand,w,c
  7016  001DD4  2609               	addwf	___lmul@product,f,c
  7017  001DD6  5006               	movf	___lmul@multiplicand+1,w,c
  7018  001DD8  220A               	addwfc	___lmul@product+1,f,c
  7019  001DDA  5007               	movf	___lmul@multiplicand+2,w,c
  7020  001DDC  220B               	addwfc	___lmul@product+2,f,c
  7021  001DDE  5008               	movf	___lmul@multiplicand+3,w,c
  7022  001DE0  220C               	addwfc	___lmul@product+3,f,c
  7023  001DE2                     i2l2620:
  7024  001DE2  90D8               	bcf	status,0,c
  7025  001DE4  3605               	rlcf	___lmul@multiplicand,f,c
  7026  001DE6  3606               	rlcf	___lmul@multiplicand+1,f,c
  7027  001DE8  3607               	rlcf	___lmul@multiplicand+2,f,c
  7028  001DEA  3608               	rlcf	___lmul@multiplicand+3,f,c
  7029  001DEC  90D8               	bcf	status,0,c
  7030  001DEE  3204               	rrcf	___lmul@multiplier+3,f,c
  7031  001DF0  3203               	rrcf	___lmul@multiplier+2,f,c
  7032  001DF2  3202               	rrcf	___lmul@multiplier+1,f,c
  7033  001DF4  3201               	rrcf	___lmul@multiplier,f,c
  7034  001DF6  5001               	movf	___lmul@multiplier,w,c
  7035  001DF8  1002               	iorwf	___lmul@multiplier+1,w,c
  7036  001DFA  1003               	iorwf	___lmul@multiplier+2,w,c
  7037  001DFC  1004               	iorwf	___lmul@multiplier+3,w,c
  7038  001DFE  A4D8               	btfss	status,2,c
  7039  001E00  D7E6               	goto	i2l2616
  7040  001E02  C009  F001         	movff	___lmul@product,?___lmul
  7041  001E06  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  7042  001E0A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  7043  001E0E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  7044  001E12  0012               	return		;funcret
  7045  001E14                     __end_of___lmul:
  7046                           	opt callstack 0
  7047                           
  7048                           	psect	rparam
  7049  0000                     
  7050                           	psect	temp
  7051  00005F                     btemp:
  7052                           	opt callstack 0
  7053  00005F                     	ds	1
  7054  0000                     int$flags	set	btemp
  7055  0000                     wtemp8	set	btemp+1
  7056  0000                     ttemp5	set	btemp+1
  7057  0000                     ttemp6	set	btemp+4
  7058  0000                     ttemp7	set	btemp+8
  7059                           tosu	equ	0xFFF
  7060                           tosh	equ	0xFFE
  7061                           tosl	equ	0xFFD
  7062                           stkptr	equ	0xFFC
  7063                           pclatu	equ	0xFFB
  7064                           pclath	equ	0xFFA
  7065                           pcl	equ	0xFF9
  7066                           tblptru	equ	0xFF8
  7067                           tblptrh	equ	0xFF7
  7068                           tblptrl	equ	0xFF6
  7069                           tablat	equ	0xFF5
  7070                           prodh	equ	0xFF4
  7071                           prodl	equ	0xFF3
  7072                           indf0	equ	0xFEF
  7073                           postinc0	equ	0xFEE
  7074                           postdec0	equ	0xFED
  7075                           preinc0	equ	0xFEC
  7076                           plusw0	equ	0xFEB
  7077                           fsr0h	equ	0xFEA
  7078                           fsr0l	equ	0xFE9
  7079                           wreg	equ	0xFE8
  7080                           indf1	equ	0xFE7
  7081                           postinc1	equ	0xFE6
  7082                           postdec1	equ	0xFE5
  7083                           preinc1	equ	0xFE4
  7084                           plusw1	equ	0xFE3
  7085                           fsr1h	equ	0xFE2
  7086                           fsr1l	equ	0xFE1
  7087                           bsr	equ	0xFE0
  7088                           indf2	equ	0xFDF
  7089                           postinc2	equ	0xFDE
  7090                           postdec2	equ	0xFDD
  7091                           preinc2	equ	0xFDC
  7092                           plusw2	equ	0xFDB
  7093                           fsr2h	equ	0xFDA
  7094                           fsr2l	equ	0xFD9
  7095                           status	equ	0xFD8


Data Sizes:
    Strings     91
    Constant    0
    Data        0
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    116     124
    BANK1           256     46      82
    BANK2           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), STR_9(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), STR_9(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[12]), STR_3(CODE[17]), 
		 -> STR_2(CODE[26]), STR_1(CODE[10]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[12]), STR_3(CODE[17]), 
		 -> STR_2(CODE[26]), STR_1(CODE[10]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[12]), STR_3(CODE[17]), 
		 -> STR_2(CODE[26]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1340_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[12]), STR_3(CODE[17]), 
		 -> STR_2(CODE[26]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[12]), STR_3(CODE[17]), 
		 -> STR_2(CODE[26]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_abs->i2___aomod
    i2___aldiv->___lmul

Critical Paths under _main in BANK0

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    _high_isr->_setPDC0
    _setPDC0->i2_printf
    i2_printf->i2_vfprintf

Critical Paths under _main in BANK1

    _main->_configPWMFreq
    _configPWMFreq->_PWMError
    _PWMError->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   12388
                                             42 BANK1      4     4      0
                _ConfigureOscillator
                            _InitApp
                      _configPWMFreq
                          _enablePWM
 ---------------------------------------------------------------------------------
 (1) _enablePWM                                            1     1      0      22
                                             36 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configPWMFreq                                       14    10      4   12363
                                             28 BANK1     14    10      4
                           _PWMError
                            ___aldiv
                            ___awdiv
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                             36 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1108
                                             36 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8    1008
                                             36 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _PWMError                                             4     4      0    9512
                                             26 BANK1      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               6     4      2    9512
                                             20 BANK1      6     4      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    9048
                                            114 BANK0      2     2      0
                                             14 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           54    48      6    8506
                                            100 BANK0     14     8      6
                                              0 BANK1     14    14      0
                               _dtoa
                              _fputc
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     865
                                             36 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5739
                                             64 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3293
                                             53 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             36 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1475
                                             46 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     975
                                             37 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      31
                                             36 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             54 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             36 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             36 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
                         _init_timer
                         _init_usart
 ---------------------------------------------------------------------------------
 (2) _init_usart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _low_isr                                             1     1      0       0
                                             35 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _high_isr                                            9     9      0   10794
                                             26 BANK0      9     9      0
                            _setPDC0
                           i2_printf
 ---------------------------------------------------------------------------------
 (13) _setPDC0                                            10     6      4    6315
                                             16 BANK0     10     6      4
                             ___lmul
                          i2___aldiv
                          i2___awdiv
                           i2_printf
 ---------------------------------------------------------------------------------
 (13) i2_printf                                           10     4      6    4479
                                              6 BANK0     10     4      6
                          i2___awdiv (ARG)
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (14) i2_vfprintf                                          8     2      6    4293
                                             92 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (15) i2_vfpfcnvrt                                        54    48      6    4085
                                             64 COMRAM    28    22      6
                             i2_dtoa
                            i2_fputc
                          i2_strncmp
 ---------------------------------------------------------------------------------
 (16) i2_strncmp                                          11     5      6     381
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) i2_dtoa                                             36    26     10    2772
                                             28 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (17) i2_pad                                              11     5      6    1421
                                             17 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (18) i2_strlen                                            4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (18) i2_fputs                                             7     3      4     591
                                             10 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (16) i2_fputc                                             9     5      4     390
                                              1 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (17) i2_putch                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) i2_abs                                               4     2      2      92
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___aomod                                          18     2     16     348
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (17) i2___aodiv                                          26    10     16     352
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (14) i2___awdiv                                           8     4      4     404
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (14) i2___aldiv                                          14     6      8     352
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (14) ___lmul                                             12     4      8     826
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
     _init_timer
     _init_usart
   _configPWMFreq
     _PWMError
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _strncmp
     ___aldiv
     ___awdiv
     ___lldiv
   _enablePWM

 _low_isr (ROOT)

 _high_isr (ROOT)
   _setPDC0
     ___lmul
     i2___aldiv
       ___lmul (ARG)
     i2___awdiv
     i2_printf
       i2___awdiv (ARG)
       i2_vfprintf (ARG)
         i2_vfpfcnvrt
           i2_dtoa
             i2___aodiv
             i2___aomod
             i2_abs
               i2___aomod (ARG)
             i2_pad
               i2_fputc
                 i2_putch
               i2_fputs
                 i2_fputc
                   i2_putch
               i2_strlen
           i2_fputc
             i2_putch
           i2_strncmp
   i2_printf
     i2___awdiv (ARG)
     i2_vfprintf (ARG)
       i2_vfpfcnvrt
         i2_dtoa
           i2___aodiv
           i2___aomod
           i2_abs
             i2___aomod (ARG)
           i2_pad
             i2_fputc
               i2_putch
             i2_fputs
               i2_fputc
                 i2_putch
             i2_strlen
         i2_fputc
           i2_putch
         i2_strncmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2E      52       7       32.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     74      7C       5       77.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12C       3        0.0%
DATA                 0      0     12C      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Apr 14 21:15:56 2019

                 ___awdiv@sign 0089                             bsr 000FE0                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000  
                  __CFG_OSC$HS 000000                            l215 2066                            l260 0908  
                          l325 1B9A                            l247 199C                            l258 0900  
                          l973 1F06                   __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000  
           i2___aodiv@quotient 0013                            _abs 1EDC                            _pad 196A  
                          wreg 000FE8                     _TXSTA1bits 000FAC                   __CFG_IESO$ON 000000  
          __end_ofi2_vfpfcnvrt 088C                     i2_dtoa$870 002F                   __CFG_LVP$OFF 000000  
                         ?_abs 0096                           l3000 1E8C                           l3100 12E2  
                         l3004 1F7C                           l3020 1994                           l3110 1340  
                         l3006 1F82                           l3030 19EC                           l3022 19A6  
                         l3016 1984                           l3114 1366                           l3106 132A  
                         l3026 19C0                           l3060 1060                           l3052 1026  
                         l3124 08E4                           l3300 0EF6                           l3070 10BC  
                         l3046 0FFE                           l3142 0932                           l3152 0A2C  
                         l3058 104C                           l3074 10D2                           l3090 1290  
                         l3138 0922                           l3234 05A0                           l3218 044E  
                         l3330 0D40                           l3172 0A92                           l3228 0564  
                         l3244 05C4                           l3308 0F12                           l3078 10F8  
                         l3094 12B4                           l3238 05AC                           l3270 1E2A  
                         l2710 1ADE                           l2630 1B4C                           l3176 0AAA  
                         l3256 1D1E                           l2712 1AE6                           l2704 1AC8  
                         l2632 1B58                           l3098 12CE                           l3186 1840  
                         l3258 1D4C                           l2730 1B1E                           l2722 1B06  
                         l2642 1B8C                           l3282 0E9E                           l3188 184E  
                         l2660 15EC                           l2654 15D4                           l2726 1B10  
                         l3294 0EDA                           l3288 0EBC                           l2666 160E  
                         l2682 165C                           l2668 161A                           l2686 1672  
                         l2678 164E                           ?_pad 0095                           l2698 1AB8  
                         l2986 1C4A                           l2996 1E74                           STR_1 0344  
                         STR_2 0301                           STR_3 031B                           STR_4 032C  
                         STR_5 0338                           STR_6 034E                           STR_7 0356  
                         STR_9 0356                           u3011 102C                           _LATA 000F89  
                         u3030 1064                           _LATB 000F8A                           u3120 08B6  
                         _LATD 000F8C                           _LATE 000F8D                           u3210 0A5E  
                         u3130 08B8                           u3211 0A5C                           u3220 0A6C  
                         u3230 0A70                           u3310 189A                           u2510 1B5C  
                         u3160 08F6                           u3400 0EB0                           u3090 12E6  
                         u3250 0A7C                           u3410 0ECE                           u3180 091C  
                         u3340 03D0                           u2620 1AEA                           u3420 0EEA  
                         u3190 0A3C                           u3430 0F06                           u3360 04AA  
                         u2560 161E                           u3507 0E0C                           u3517 0E2C  
                         u2910 1C8A                           u3390 0E98                           u3527 0E4C  
                         u3447 0D4C                           u3537 0E6C                           u3457 0D6C  
                         u3547 1E38                           u3467 0D8C                           u3557 1E56  
                         u3477 0DAC                           u3487 0DCC                           u3497 0DEC  
                         u2890 1C42                           u2980 1EEC                           i2l89 17F0  
                         _TMR0 000FD6                           _TXIF 007CF4                  __CFG_FCMEN$ON 000000  
                         abs@a 0096                           _dbuf 0130                           _main 0D1C  
                         _dtoa 088C                           _prec 00D6                           _nout 012C  
                         pad@i 009C                           pad@p 0099                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 009E                           fsr2l 000FD9                           btemp 005F  
                         start 0026                __end_ofi2_fputc 1D0A                __end_ofi2_fputs 1EDC  
              __end_ofi2_putch 2082                   ___param_bank 000000                __end_of_InitApp 2090  
         enablePWM@PWM_BITMASK 0084                          ??_abs 0098                          ??_pad 009B  
              ??_configPWMFreq 0120                     i2_vfprintf 1D68                __end_of___aldiv 1684  
              __end_of___aodiv 111A                          ?_main 0001                          ?_dtoa 00A0  
              __end_of___aomod 1388                __end_of___awdiv 1B28                          STR_11 0359  
                        STR_13 0359                __end_of___lldiv 1BAC                ___awdiv@divisor 0086  
                        _PDC0H 000F78                          _PDC1H 000F76                          _PDC0L 000F79  
                        _PDC2H 000F74                          _PDC1L 000F77                          _PDC3H 000F72  
                        _PDC2L 000F75                          _PDC3L 000F73                          i2l215 2078  
                        i2l260 0B50                          i2l247 1A38                          i2l258 0B48  
              ___awdiv@counter 0088                          i2l973 1F38                   vfpfcnvrt@fmt 00C6  
                        _PORTA 000F80                          _PORTB 000F81                          _PORTD 000F83  
                        _PORTE 000F84                          _TRISB 000F93                          _TRISD 000F95  
                        i2_abs 1F10                          _TXREG 000FAD                          _TXSTA 000FAC  
                        i2_pad 1A08            _ConfigureOscillator 209A                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000            ___lmul@multiplicand 0005  
                __CFG_WRT3$OFF 000000                 __CFG_EBTR0$OFF 000000                 __CFG_EBTR1$OFF 000000  
               __CFG_EBTR2$OFF 000000                 __CFG_EBTR3$OFF 000000                  __CFG_WRTB$OFF 000000  
                __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000  
                        _flags 00D8                __end_of_setPDC0 15B6                          _fputc 1C30  
                        _fputs 1E68                          pad@fp 0095                          _width 00D4  
                        _putch 205C                          dtoa@d 00A2                          dtoa@i 00C2  
                        dtoa@n 00BA                          dtoa@p 00B4                          dtoa@s 00B8  
                        dtoa@w 00B6               __end_of_PWMError 1E68                __end_of_low_isr 0026  
               __CFG_BOREN$OFF 000000                          tablat 000FF5                          ttemp5 0060  
                        ttemp6 0063                          ttemp7 0067                          status 000FD8  
                        wtemp8 0060                __end_of_strncmp 18C0             __size_ofi2___aldiv 00CC  
           __size_ofi2___aodiv 0148             __size_ofi2___aomod 0124             __size_ofi2___awdiv 0084  
         ?_ConfigureOscillator 0001               __end_ofi2_printf 1F72               __end_ofi2_strlen 1FF4  
               __CFG_MCLRE$OFF 000000                __initialization 1FA0                 __CFG_HPOL$HIGH 000000  
                 __end_of_main 0E82                   __end_of_dtoa 0AD4                     i2printf@ap 006E  
                  i2_vfpfcnvrt 05FA                  i2vfpfcnvrt@ap 0045                  i2vfpfcnvrt@fp 0041  
                i2vfpfcnvrt@ll 0055                 __CFG_LPOL$HIGH 000000                         ??_main 012A  
                       ??_dtoa 00AA                  __activetblptr 000001                         ?i2_abs 0013  
           __size_ofi2_strncmp 00AA                         ?i2_pad 0012                     i2strncmp@l 0008  
                   i2strncmp@n 0005                     i2strncmp@r 000A                         ?_fputc 0085  
                       ?_fputs 008E               ___awdiv@dividend 0084                 i2___aldiv@sign 0016  
                       ?_putch 0001                         i2l2310 1194                         i2l2054 1CB6  
                       i2l2312 11A8                         i2l2304 116E                         i2l2330 1240  
                       i2l2322 1204                         i2l2170 1EAE                         i2l2180 1FD8  
                       i2l2326 121A                         i2l2350 13F2                         i2l2342 13B4  
                       i2l2174 1EC4                         i2l2352 1406                         i2l2272 1A22  
                       i2l2432 0B2A                         i2l2362 1464                         i2l2346 13D8  
                       i2l2178 1FD4                         i2l2282 1A5A                         i2l2450 0B7A  
                       i2l2620 1DE2                         i2l2276 1A30                         i2l2460 0C72  
                       i2l2366 148A                         i2l2358 144E                         i2l2286 1A88  
                       i2l2278 1A42                         i2l2446 0B6A                         i2l2550 0836  
                       i2l2534 06EA                 __CFG_WDTEN$OFF 000000                         i2l2616 1DCE  
                       i2l2800 1BEE                         i2l2480 0CDA                         i2l2544 07FA  
                       i2l2560 0858                         i2l2810 1C0E                         i2l2298 1146  
                       i2l2554 0840                         i2l2484 0CF2                         i2l2580 1DA2  
                       i2l2742 16A0                         i2l2814 1C18                         i2l2494 18EA  
                       i2l2496 18F8                         i2l2754 16DA                         i2l2770 1728  
                       i2l2818 1C26                         i2l2578 1D7C                         i2l2756 16E6  
                       i2l2748 16B8                         i2l2774 173E                         i2l2766 171A  
                       i2l2942 17EE                         i2l2792 1BD0                         i2l2786 1BC0  
                       i2l2798 1BE6                      ??i2_fputc 0006                      ??i2_fputs 000F  
                       _PTCON0 000F7F                         _PTCON1 000F7E                         _SPBRG1 000FAF  
                    ??i2_putch 0001                 __CFG_WINEN$OFF 000000                         _PTPERH 000F7A  
                       _PTPERL 000F7B                 i2___aodiv@sign 0012                         i2abs@a 0013  
                       i2_dtoa 0AD4                      ??_InitApp 0084          ??_ConfigureOscillator 0084  
                       i2pad@i 0019                         i2pad@p 0016                         i2pad@w 001B  
               __CFG_SSPMX$RC7 000000                   vfprintf@cfmt 00D2               __end_of_high_isr 1814  
               i2___aomod@sign 0012                         ___lmul 1DBE                      ??___aldiv 008C  
                    ??___aodiv 0094                  i2vfprintf@fmt 0062                      ??___aomod 0094  
                    ??___awdiv 0088                 __CFG_STVREN$ON 000000                      ??___lldiv 008C  
                  ?i2_vfprintf 0060                         clear_0 1FA6                         clear_1 1FB2  
             ___awdiv@quotient 008A                         _printf 1FF4                         pad@buf 0097  
                       dtoa@fp 00A0                         _strlen 1F72                 i2___awdiv@sign 0006  
                       fputc@c 0085              __end_ofi2___aldiv 1750                      ??_setPDC0 0074  
                       fputs@c 0092                         fputs@i 0093              __end_ofi2___aodiv 1262  
                       fputs@s 008E              __end_ofi2___aomod 14AC              __end_ofi2___awdiv 1C30  
                 __mediumconst 0000                      ??_low_isr 0083                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8             i2___aomod@dividend 0001  
             __end_of_vfprintf 1D68                      ??_strncmp 008A                     __accesstop 0060  
      __end_of__initialization 1FB8                __CFG_FLTAMX$RC1 000000                  ___rparam_used 000001  
              __CFG_T1OSCMX$ON 000000              __end_ofi2_strncmp 196A                  __end_ofi2_abs 1F42  
                __end_ofi2_pad 1AA2                 __pcstackCOMRAM 0001                  __end_of_fputc 1C9E  
                __end_of_fputs 1EA4                  __end_of_putch 2070                    i2printf@fmt 0066  
                  i2printf@ret 006C                      ?_PWMError 0001             __size_of_enablePWM 000A  
                      ??i2_abs 0015                    i2putch@byte 0001                        ??i2_pad 0018  
               i2vfpfcnvrt@fmt 0043                      ?i2_printf 0066                      ?i2_strlen 0001  
                      ??_fputc 0089                        ??_fputs 0092                        ??_putch 0084  
                   __pbssBANK0 00D4                     __pbssBANK1 012C            __size_ofi2_vfprintf 0056  
                      ?i2_dtoa 001D                    i2strncmp@_l 0001                    i2strncmp@_r 0003  
                      ?___lmul 0001                __CFG_WDPS$32768 000000                 ___lmul@product 0009  
                      ?_printf 0114                     ??_PWMError 011A                        ?_strlen 0084  
              __CFG_PWM4MX$RB5 000000             __size_of_vfpfcnvrt 029C                     ??i2_printf 005F  
                   ??i2_strlen 0003                        _PWMCON0 000F6F                        _PWMCON1 000F6E  
                    ?_high_isr 0001                __CFG_PWMPIN$OFF 000000                        i2_fputc 1C9E  
                      i2_fputs 1EA4                        i2pad@fp 0012                        i2_putch 2070  
                      i2dtoa@d 001F                        i2dtoa@i 003F                        i2dtoa@n 0037  
                      i2dtoa@p 0031                        i2dtoa@s 0035                        i2dtoa@w 0033  
                      _InitApp 2082              i2___aldiv@divisor 0011              __end_of_enablePWM 209A  
              __size_ofi2_dtoa 0248              i2___aldiv@counter 0015                __CFG_PWRTEN$OFF 000000  
                      __Hparam 0000                        __Lparam 0000                        ___aldiv 15B6  
                      ___aodiv 0FD0                        ___aomod 1262                        ___awdiv 1AA2  
              __size_of___lmul 0056                        ___lldiv 1B28                      ?_vfprintf 010E  
               i2vfprintf@cfmt 005D                   __psmallconst 0300                   ?i2_vfpfcnvrt 0041  
                      __pcinit 1FA0                     _init_timer 201C                        __ramtop 0300  
                   _init_usart 2042          __end_of_configPWMFreq 0FD0                        __ptext0 0D1C  
                      __ptext1 2090                        __ptext2 0E82                        __ptext3 1B28  
                      __ptext4 1AA2                        __ptext5 15B6                        __ptext6 1E14  
                      __ptext7 1FF4                        __ptext8 1D0A                        __ptext9 035E  
              __size_of_printf 0028                      _T0CONbits 000FD5                __size_of_strlen 002E  
                 __size_of_abs 0034                        _setPDC0 14AC                   __size_of_pad 009E  
             ___aldiv@dividend 0084                        _low_isr 0018                     ??_high_isr 007A  
                      _strncmp 1814                 __pintcode_body 1750           end_of_initialization 1FB8  
                      fputc@fp 0087                        int_func 1750                        fputs@fp 0090  
              ___lldiv@divisor 0088                ___lldiv@counter 0090              __end_of_vfpfcnvrt 05FA  
             ___aldiv@quotient 008E                        postdec2 000FDD                     _timer0_var 00DA  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                 ??i2_vfprintf 005D                     ??_vfprintf 00D2                        strlen@a 0086  
                      strlen@s 0084                      _PORTBbits 000F81                      _PORTDbits 000F83  
           configPWMFreq@scale 0122              i2___aodiv@divisor 0009              i2___aodiv@counter 0011  
                    _TRISCbits 000F94                      _TRISDbits 000F95                      i2___aldiv 1684  
                    i2___aodiv 111A                      _PWMPeriod 012E                      i2___aomod 1388  
                    i2___awdiv 1BAC    __end_of_ConfigureOscillator 209C             __end_ofi2_vfprintf 1DBE  
           i2___awdiv@dividend 0001                 __end_ofi2_dtoa 0D1C                      i2_strncmp 18C0  
             __CFG_EXCLKMX$RC3 000000                 __end_of___lmul 1E14                    vfpfcnvrt@ap 00C8  
                  vfpfcnvrt@fp 00C4                    vfpfcnvrt@ll 00CA                    _BAUDCONbits 000FAA  
                  ?_init_timer 0001  configPWMFreq@timeBasePreScale 0124                    ?_init_usart 0001  
                    i2fputc@fp 0004                      i2fputs@fp 000D                 __end_of_printf 201C  
               __end_of_strlen 1FA0              __size_of_PWMError 0054            start_initialization 1FA0  
           i2___awdiv@quotient 0007                    __end_of_abs 1F10                    __end_of_pad 1A08  
                   ?i2___aldiv 000D                     ?i2___aodiv 0001                     ?i2___aomod 0001  
                   ?i2___awdiv 0001              __size_ofi2_printf 0030              __size_ofi2_strlen 002A  
                    i2strlen@a 0003                      i2strlen@s 0001                       ??i2_dtoa 0027  
                  vfprintf@fmt 0110                   i2vfprintf@ap 0064                   i2vfprintf@fp 0060  
                     ??___lmul 0009                     ?i2_strncmp 0001                       ??_printf 00D4  
            i2___aomod@divisor 0009                       ??_strlen 0086              i2___aomod@counter 0011  
         __size_ofi2_vfpfcnvrt 0292                  __pcstackBANK0 0060                  __pcstackBANK1 0100  
             ___aodiv@dividend 0084                       ?i2_fputc 0002                       ?i2_fputs 000B  
                     ?i2_putch 0001              __size_of_high_isr 180C            __size_of_init_timer 0026  
          __size_of_init_usart 001A                       ?_InitApp 0001                      __pintcode 0008  
                    _enablePWM 2090                       ?___aldiv 0084                       ?___aodiv 0084  
                     ?___aomod 0084                       ?___awdiv 0084               ___aodiv@quotient 0096  
                     ?___lldiv 0084               setPDC0@dutyCycle 0076                    __pintcodelo 0018  
            __size_of_vfprintf 005E                    __smallconst 0300                       ?_setPDC0 0070  
               __size_ofi2_abs 0032                 __size_ofi2_pad 009A                       ?_low_isr 0001  
                  ??i2___aldiv 0015                    ??i2___aodiv 0011                    ??i2___aomod 0011  
                  ??i2___awdiv 0005                 __size_of_fputc 006E                 __size_of_fputs 003C  
                     ?_strncmp 0084                 __size_of_putch 0014                ___aldiv@divisor 0088  
           setPDC0@dutyCycleQC 0078                ___aldiv@counter 008C                       i2u210_40 140A  
                     i2u202_41 1174                       i2u204_40 11AC                       i2u220_40 0AFC  
                     i2u213_40 1F1E                       i2u221_40 0AFE                       i2u230_40 0CB0  
                     i2u231_40 0CB6                       i2u224_40 0B3E                       i2u153_40 1CAE  
                     i2u233_40 0CC4                       i2u226_40 0B64                       i2u155_40 1CF6  
                     i2u227_40 0C80                       i2u243_40 066C                       i2u229_40 0CA2  
                     i2u245_40 0742                       i2u229_41 0CA0                       i2u239_40 1944  
                     i2u274_40 1BF2                       i2u268_40 16EA                       i2u286_40 17DA  
                     i2u286_46 17DC                       _RCONbits 000FD0                     ?_enablePWM 0001  
                  ??i2_strncmp 0007              configPWMFreq@freq 011C                      _vfpfcnvrt 035E  
                     _PWMError 1E14              i2___awdiv@divisor 0003              i2___awdiv@counter 0005  
                     i2_printf 1F42                       i2pad@buf 0014                       i2dtoa@fp 001D  
                     i2_strlen 1FCA              ___lmul@multiplier 0001                       i2fputc@c 0002  
                     i2fputs@c 000F                       i2fputs@i 0010                       i2fputs@s 000B  
           i2___aldiv@dividend 000D               __size_ofi2_fputc 006C               __size_ofi2_fputs 0038  
             __size_ofi2_putch 0012         __size_of_configPWMFreq 014E               __size_of_InitApp 000E  
                     __Hrparam 0000                     vfprintf@ap 0112                       __Lrparam 0000  
                   vfprintf@fp 010E                   __Lsmallconst 0300               __size_of___aldiv 00CE  
             __size_of___aodiv 014A               __size_of___aomod 0126               __size_of___awdiv 0086  
             __size_of___lldiv 0084                     ?_vfpfcnvrt 00C4                   ??_init_timer 0084  
                 ??_init_usart 0084                ___aodiv@divisor 008C                ___aodiv@counter 0094  
           i2___aldiv@quotient 0017               __size_of_setPDC0 010A                       _dtoa$870 00B2  
             __size_of_low_isr 000E                       __ptext10 1814                       __ptext11 088C  
                     __ptext20 2082                       __ptext12 196A                       __ptext21 2042  
                     __ptext13 1F72                       __ptext30 18C0                       __ptext22 201C  
                     __ptext14 1E68                       __ptext31 0AD4                       __ptext23 209A  
                     __ptext15 1C30                       __ptext40 1BAC                       __ptext32 1A08  
                     __ptext16 205C                       __ptext41 1684                       __ptext33 1FCA  
                     __ptext17 1EDC                       __ptext42 1DBE                       __ptext34 1EA4  
                     __ptext26 14AC                       __ptext18 1262                       __ptext35 1C9E  
                     __ptext27 1F42                       __ptext19 0FD0                       __ptext36 2070  
                     __ptext28 1D68                       __ptext37 1F10                       __ptext29 05FA  
                     __ptext38 1388                       __ptext39 111A                       _high_isr 0008  
             __size_of_strncmp 00AC                  __size_of_main 0166                  __size_of_dtoa 0248  
           __end_of_init_timer 2042             __end_of_init_usart 205C   __size_of_ConfigureOscillator 0002  
                  ??_enablePWM 0084                       int$flags 005F                       _vfprintf 1D0A  
                    printf@fmt 0114               ___aomod@dividend 0084                  _configPWMFreq 0E82  
                    putch@byte 0084                     _INTCONbits 000FF2                       intlevel1 0000  
                     intlevel2 0000               ___lldiv@dividend 0084                     _RCSTA1bits 000FAB  
                    strncmp@_l 0084                      strncmp@_r 0086                    _PWMCON0bits 000F6F  
                     printf@ap 0118                ___aomod@divisor 008C                  ??i2_vfpfcnvrt 0047  
                  ??_vfpfcnvrt 0100                ___aomod@counter 0094                     _PTCON0bits 000F7F  
                   _PTCON1bits 000F7E          configPWMFreq@tempLong 0126                 ?_configPWMFreq 011C  
             ___lldiv@quotient 008C                       strncmp@l 008B                       strncmp@n 0088  
                     strncmp@r 008D                   ___aldiv@sign 008D        setPDC0@dutyCyclePercent 0070  
                 ___aodiv@sign 0095             i2___aodiv@dividend 0001                   ___aomod@sign 0095  
