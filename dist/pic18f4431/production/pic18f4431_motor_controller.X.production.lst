

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr  1 08:09:32 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    25  0000                     
    26                           ; Version 2.05
    27                           ; Generated 20/12/2018 GMT
    28                           ; 
    29                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4431 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     _TMR0	set	4054
    61  0000                     _TXREG	set	4013
    62  0000                     _TXSTA	set	4012
    63  0000                     _RCONbits	set	4048
    64  0000                     _SPBRG1	set	4015
    65  0000                     _BAUDCONbits	set	4010
    66  0000                     _RCSTA1bits	set	4011
    67  0000                     _TXSTA1bits	set	4012
    68  0000                     _TRISCbits	set	3988
    69  0000                     _T0CONbits	set	4053
    70  0000                     _PORTBbits	set	3969
    71  0000                     _TRISBbits	set	3987
    72  0000                     _INTCONbits	set	4082
    73  0000                     _TXIF	set	31988
    74                           
    75                           	psect	smallconst
    76  000300                     __psmallconst:
    77                           	opt callstack 0
    78  000300  00                 	db	0
    79  000301                     STR_1:
    80  000301  68                 	db	104	;'h'
    81  000302  65                 	db	101	;'e'
    82  000303  6C                 	db	108	;'l'
    83  000304  6C                 	db	108	;'l'
    84  000305  6F                 	db	111	;'o'
    85  000306  20                 	db	32
    86  000307  77                 	db	119	;'w'
    87  000308  6F                 	db	111	;'o'
    88  000309  72                 	db	114	;'r'
    89  00030A  6C                 	db	108	;'l'
    90  00030B  64                 	db	100	;'d'
    91  00030C  21                 	db	33
    92  00030D  2F                 	db	47
    93  00030E  72                 	db	114	;'r'
    94  00030F  2F                 	db	47
    95  000310  6E                 	db	110	;'n'
    96  000311  00                 	db	0
    97                           
    98                           ; #config settings
    99  000312  00                 	db	0	; dummy byte at the end
   100  0000                     
   101                           	psect	cinit
   102  0006A8                     __pcinit:
   103                           	opt callstack 0
   104  0006A8                     start_initialization:
   105                           	opt callstack 0
   106  0006A8                     __initialization:
   107                           	opt callstack 0
   108                           
   109                           ; Clear objects allocated to COMRAM (40 bytes)
   110  0006A8  EE00  F001         	lfsr	0,__pbssCOMRAM
   111  0006AC  0E28               	movlw	40
   112  0006AE                     clear_0:
   113  0006AE  6AEE               	clrf	postinc0,c
   114  0006B0  06E8               	decf	wreg,f,c
   115  0006B2  E1FD               	bnz	clear_0
   116  0006B4                     end_of_initialization:
   117                           	opt callstack 0
   118  0006B4                     __end_of__initialization:
   119                           	opt callstack 0
   120  0006B4  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   121  0006B6  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   122  0006B8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   123  0006BA  6EF8               	movwf	tblptru,c
   124  0006BC  0E03               	movlw	high __Lsmallconst
   125  0006BE  6EF7               	movwf	tblptrh,c
   126  0006C0  0100               	movlb	0
   127  0006C2  EF8A  F001         	goto	_main	;jump to C main() function
   128                           
   129                           	psect	bssCOMRAM
   130  000001                     __pbssCOMRAM:
   131                           	opt callstack 0
   132  000001                     	ds	32
   133  000021                     _nout:
   134                           	opt callstack 0
   135  000021                     	ds	2
   136  000023                     _width:
   137                           	opt callstack 0
   138  000023                     	ds	2
   139  000025                     _prec:
   140                           	opt callstack 0
   141  000025                     	ds	2
   142  000027                     _flags:
   143                           	opt callstack 0
   144  000027                     	ds	2
   145                           
   146                           	psect	cstackBANK0
   147  000060                     __pcstackBANK0:
   148                           	opt callstack 0
   149  000060                     ??_low_isr:
   150                           
   151                           ; 1 bytes @ 0x0
   152  000060                     	ds	1
   153  000061                     ??_main:
   154                           
   155                           ; 1 bytes @ 0x1
   156  000061                     	ds	2
   157                           
   158                           	psect	cstackCOMRAM
   159  000029                     __pcstackCOMRAM:
   160                           	opt callstack 0
   161  000029                     putch@byte:
   162                           	opt callstack 0
   163                           
   164                           ; 1 bytes @ 0x0
   165  000029                     	ds	1
   166  00002A                     fputc@c:
   167                           	opt callstack 0
   168                           
   169                           ; 2 bytes @ 0x1
   170  00002A                     	ds	2
   171  00002C                     fputc@fp:
   172                           	opt callstack 0
   173                           
   174                           ; 2 bytes @ 0x3
   175  00002C                     	ds	2
   176  00002E                     ??_fputc:
   177                           
   178                           ; 1 bytes @ 0x5
   179  00002E                     	ds	5
   180  000033                     ?_vfpfcnvrt:
   181                           	opt callstack 0
   182  000033                     vfpfcnvrt@fp:
   183                           	opt callstack 0
   184                           
   185                           ; 2 bytes @ 0xA
   186  000033                     	ds	2
   187  000035                     vfpfcnvrt@fmt:
   188                           	opt callstack 0
   189                           
   190                           ; 2 bytes @ 0xC
   191  000035                     	ds	2
   192  000037                     vfpfcnvrt@ap:
   193                           	opt callstack 0
   194                           
   195                           ; 2 bytes @ 0xE
   196  000037                     	ds	2
   197  000039                     ?_vfprintf:
   198                           	opt callstack 0
   199  000039                     vfprintf@fp:
   200                           	opt callstack 0
   201                           
   202                           ; 2 bytes @ 0x10
   203  000039                     	ds	2
   204  00003B                     vfprintf@fmt:
   205                           	opt callstack 0
   206                           
   207                           ; 2 bytes @ 0x12
   208  00003B                     	ds	2
   209  00003D                     vfprintf@ap:
   210                           	opt callstack 0
   211                           
   212                           ; 2 bytes @ 0x14
   213  00003D                     	ds	2
   214  00003F                     vfprintf@cfmt:
   215                           	opt callstack 0
   216                           
   217                           ; 2 bytes @ 0x16
   218  00003F                     	ds	2
   219  000041                     ?_printf:
   220                           	opt callstack 0
   221  000041                     printf@fmt:
   222                           	opt callstack 0
   223                           
   224                           ; 2 bytes @ 0x18
   225  000041                     	ds	2
   226  000043                     
   227                           ; 1 bytes @ 0x1A
   228  000043                     	ds	2
   229  000045                     printf@ap:
   230                           	opt callstack 0
   231                           
   232                           ; 2 bytes @ 0x1C
   233  000045                     	ds	2
   234  000047                     ??_high_isr:
   235                           
   236                           ; 1 bytes @ 0x1E
   237  000047                     	ds	9
   238                           
   239 ;;
   240 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   241 ;;
   242 ;; *************** function _main *****************
   243 ;; Defined at:
   244 ;;		line 34 in file "main.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;		None
   247 ;; Auto vars:     Size  Location     Type
   248 ;;  val             2    0        int 
   249 ;;  x               1    0        unsigned char 
   250 ;; Return value:  Size  Location     Type
   251 ;;                  1    wreg      void 
   252 ;; Registers used:
   253 ;;		wreg, status,2, status,0, cstack
   254 ;; Tracked objects:
   255 ;;		On entry : 0/0
   256 ;;		On exit  : 0/0
   257 ;;		Unchanged: 0/0
   258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   259 ;;      Params:         0       0       0       0
   260 ;;      Locals:         0       2       0       0
   261 ;;      Temps:          0       2       0       0
   262 ;;      Totals:         0       4       0       0
   263 ;;Total ram usage:        4 bytes
   264 ;; Hardware stack levels required when called:    9
   265 ;; This function calls:
   266 ;;		_ConfigureOscillator
   267 ;;		_InitApp
   268 ;; This function is called by:
   269 ;;		Startup code after reset
   270 ;; This function uses a non-reentrant model
   271 ;;
   272                           
   273                           	psect	text0
   274  000314                     __ptext0:
   275                           	opt callstack 0
   276  000314                     _main:
   277                           	opt callstack 22
   278                           
   279                           ;main.c: 37:     ConfigureOscillator();
   280                           
   281                           ;incstack = 0
   282  000314  EC7E  F003         	call	_ConfigureOscillator	;wreg free
   283                           
   284                           ;main.c: 40:     InitApp();
   285  000318  EC79  F003         	call	_InitApp	;wreg free
   286  00031C                     l1043:
   287                           
   288                           ;main.c: 49:     {;main.c: 52:         PORTBbits.RB0 = 1;
   289  00031C  8081               	bsf	3969,0,c	;volatile
   290                           
   291                           ;main.c: 53:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   292  00031E  0E02               	movlw	2
   293  000320  0100               	movlb	0	; () banked
   294  000322  6F62               	movwf	(??_main+1)& (0+255),b
   295  000324  0EE8               	movlw	232
   296  000326  6F61               	movwf	??_main& (0+255),b
   297  000328  0E51               	movlw	81
   298  00032A                     u267:
   299  00032A  0004               	clrwdt	
   300  00032C  2EE8               	decfsz	wreg,f,c
   301  00032E  D7FD               	bra	u267
   302  000330  2F61               	decfsz	??_main& (0+255),f,b
   303  000332  D7FB               	bra	u267
   304  000334  2F62               	decfsz	(??_main+1)& (0+255),f,b
   305  000336  D7F9               	bra	u267
   306  000338  0004               	clrwdt	
   307  00033A  F000               	nop	
   308  00033C  0004               	clrwdt	
   309                           
   310                           ;main.c: 54:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   311  00033E  0E02               	movlw	2
   312  000340  0100               	movlb	0	; () banked
   313  000342  6F62               	movwf	(??_main+1)& (0+255),b
   314  000344  0EE8               	movlw	232
   315  000346  6F61               	movwf	??_main& (0+255),b
   316  000348  0E51               	movlw	81
   317  00034A                     u277:
   318  00034A  0004               	clrwdt	
   319  00034C  2EE8               	decfsz	wreg,f,c
   320  00034E  D7FD               	bra	u277
   321  000350  2F61               	decfsz	??_main& (0+255),f,b
   322  000352  D7FB               	bra	u277
   323  000354  2F62               	decfsz	(??_main+1)& (0+255),f,b
   324  000356  D7F9               	bra	u277
   325  000358  0004               	clrwdt	
   326  00035A  F000               	nop	
   327  00035C  0004               	clrwdt	
   328                           
   329                           ;main.c: 55:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   330  00035E  0E02               	movlw	2
   331  000360  0100               	movlb	0	; () banked
   332  000362  6F62               	movwf	(??_main+1)& (0+255),b
   333  000364  0EE8               	movlw	232
   334  000366  6F61               	movwf	??_main& (0+255),b
   335  000368  0E51               	movlw	81
   336  00036A                     u287:
   337  00036A  0004               	clrwdt	
   338  00036C  2EE8               	decfsz	wreg,f,c
   339  00036E  D7FD               	bra	u287
   340  000370  2F61               	decfsz	??_main& (0+255),f,b
   341  000372  D7FB               	bra	u287
   342  000374  2F62               	decfsz	(??_main+1)& (0+255),f,b
   343  000376  D7F9               	bra	u287
   344  000378  0004               	clrwdt	
   345  00037A  F000               	nop	
   346  00037C  0004               	clrwdt	
   347                           
   348                           ;main.c: 56:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   349  00037E  0E02               	movlw	2
   350  000380  0100               	movlb	0	; () banked
   351  000382  6F62               	movwf	(??_main+1)& (0+255),b
   352  000384  0EE8               	movlw	232
   353  000386  6F61               	movwf	??_main& (0+255),b
   354  000388  0E51               	movlw	81
   355  00038A                     u297:
   356  00038A  0004               	clrwdt	
   357  00038C  2EE8               	decfsz	wreg,f,c
   358  00038E  D7FD               	bra	u297
   359  000390  2F61               	decfsz	??_main& (0+255),f,b
   360  000392  D7FB               	bra	u297
   361  000394  2F62               	decfsz	(??_main+1)& (0+255),f,b
   362  000396  D7F9               	bra	u297
   363  000398  0004               	clrwdt	
   364  00039A  F000               	nop	
   365  00039C  0004               	clrwdt	
   366                           
   367                           ;main.c: 57:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   368  00039E  0E02               	movlw	2
   369  0003A0  0100               	movlb	0	; () banked
   370  0003A2  6F62               	movwf	(??_main+1)& (0+255),b
   371  0003A4  0EE8               	movlw	232
   372  0003A6  6F61               	movwf	??_main& (0+255),b
   373  0003A8  0E51               	movlw	81
   374  0003AA                     u307:
   375  0003AA  0004               	clrwdt	
   376  0003AC  2EE8               	decfsz	wreg,f,c
   377  0003AE  D7FD               	bra	u307
   378  0003B0  2F61               	decfsz	??_main& (0+255),f,b
   379  0003B2  D7FB               	bra	u307
   380  0003B4  2F62               	decfsz	(??_main+1)& (0+255),f,b
   381  0003B6  D7F9               	bra	u307
   382  0003B8  0004               	clrwdt	
   383  0003BA  F000               	nop	
   384  0003BC  0004               	clrwdt	
   385                           
   386                           ;main.c: 58:         PORTBbits.RB0 = 0;
   387  0003BE  9081               	bcf	3969,0,c	;volatile
   388                           
   389                           ;main.c: 59:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   390  0003C0  0E02               	movlw	2
   391  0003C2  0100               	movlb	0	; () banked
   392  0003C4  6F62               	movwf	(??_main+1)& (0+255),b
   393  0003C6  0EE8               	movlw	232
   394  0003C8  6F61               	movwf	??_main& (0+255),b
   395  0003CA  0E51               	movlw	81
   396  0003CC                     u317:
   397  0003CC  0004               	clrwdt	
   398  0003CE  2EE8               	decfsz	wreg,f,c
   399  0003D0  D7FD               	bra	u317
   400  0003D2  2F61               	decfsz	??_main& (0+255),f,b
   401  0003D4  D7FB               	bra	u317
   402  0003D6  2F62               	decfsz	(??_main+1)& (0+255),f,b
   403  0003D8  D7F9               	bra	u317
   404  0003DA  0004               	clrwdt	
   405  0003DC  F000               	nop	
   406  0003DE  0004               	clrwdt	
   407                           
   408                           ;main.c: 60:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   409  0003E0  0E02               	movlw	2
   410  0003E2  0100               	movlb	0	; () banked
   411  0003E4  6F62               	movwf	(??_main+1)& (0+255),b
   412  0003E6  0EE8               	movlw	232
   413  0003E8  6F61               	movwf	??_main& (0+255),b
   414  0003EA  0E51               	movlw	81
   415  0003EC                     u327:
   416  0003EC  0004               	clrwdt	
   417  0003EE  2EE8               	decfsz	wreg,f,c
   418  0003F0  D7FD               	bra	u327
   419  0003F2  2F61               	decfsz	??_main& (0+255),f,b
   420  0003F4  D7FB               	bra	u327
   421  0003F6  2F62               	decfsz	(??_main+1)& (0+255),f,b
   422  0003F8  D7F9               	bra	u327
   423  0003FA  0004               	clrwdt	
   424  0003FC  F000               	nop	
   425  0003FE  0004               	clrwdt	
   426                           
   427                           ;main.c: 61:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   428  000400  0E02               	movlw	2
   429  000402  0100               	movlb	0	; () banked
   430  000404  6F62               	movwf	(??_main+1)& (0+255),b
   431  000406  0EE8               	movlw	232
   432  000408  6F61               	movwf	??_main& (0+255),b
   433  00040A  0E51               	movlw	81
   434  00040C                     u337:
   435  00040C  0004               	clrwdt	
   436  00040E  2EE8               	decfsz	wreg,f,c
   437  000410  D7FD               	bra	u337
   438  000412  2F61               	decfsz	??_main& (0+255),f,b
   439  000414  D7FB               	bra	u337
   440  000416  2F62               	decfsz	(??_main+1)& (0+255),f,b
   441  000418  D7F9               	bra	u337
   442  00041A  0004               	clrwdt	
   443  00041C  F000               	nop	
   444  00041E  0004               	clrwdt	
   445                           
   446                           ;main.c: 62:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   447  000420  0E02               	movlw	2
   448  000422  0100               	movlb	0	; () banked
   449  000424  6F62               	movwf	(??_main+1)& (0+255),b
   450  000426  0EE8               	movlw	232
   451  000428  6F61               	movwf	??_main& (0+255),b
   452  00042A  0E51               	movlw	81
   453  00042C                     u347:
   454  00042C  0004               	clrwdt	
   455  00042E  2EE8               	decfsz	wreg,f,c
   456  000430  D7FD               	bra	u347
   457  000432  2F61               	decfsz	??_main& (0+255),f,b
   458  000434  D7FB               	bra	u347
   459  000436  2F62               	decfsz	(??_main+1)& (0+255),f,b
   460  000438  D7F9               	bra	u347
   461  00043A  0004               	clrwdt	
   462  00043C  F000               	nop	
   463  00043E  0004               	clrwdt	
   464                           
   465                           ;main.c: 63:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   466  000440  0E02               	movlw	2
   467  000442  0100               	movlb	0	; () banked
   468  000444  6F62               	movwf	(??_main+1)& (0+255),b
   469  000446  0EE8               	movlw	232
   470  000448  6F61               	movwf	??_main& (0+255),b
   471  00044A  0E51               	movlw	81
   472  00044C                     u357:
   473  00044C  0004               	clrwdt	
   474  00044E  2EE8               	decfsz	wreg,f,c
   475  000450  D7FD               	bra	u357
   476  000452  2F61               	decfsz	??_main& (0+255),f,b
   477  000454  D7FB               	bra	u357
   478  000456  2F62               	decfsz	(??_main+1)& (0+255),f,b
   479  000458  D7F9               	bra	u357
   480  00045A  0004               	clrwdt	
   481  00045C  F000               	nop	
   482  00045E  0004               	clrwdt	
   483                           
   484                           ;main.c: 64:        T0CONbits.TMR0ON = !T0CONbits.TMR0ON;
   485  000460  BED5               	btfsc	4053,7,c	;volatile
   486  000462  D004               	goto	u240
   487  000464  0100               	movlb	0	; () banked
   488  000466  6B61               	clrf	??_main& (0+255),b
   489  000468  2B61               	incf	??_main& (0+255),f,b
   490  00046A  D002               	goto	u258
   491  00046C                     u240:
   492  00046C  0100               	movlb	0	; () banked
   493  00046E  6B61               	clrf	??_main& (0+255),b
   494  000470                     u258:
   495  000470  3361               	rrcf	??_main& (0+255),f,b
   496  000472  3361               	rrcf	??_main& (0+255),f,b
   497  000474  50D5               	movf	4053,w,c	;volatile
   498  000476  1961               	xorwf	??_main& (0+255),w,b
   499  000478  0B7F               	andlw	-129
   500  00047A  1961               	xorwf	??_main& (0+255),w,b
   501  00047C  6ED5               	movwf	4053,c	;volatile
   502  00047E  D74E               	goto	l1043
   503  000480                     __end_of_main:
   504                           	opt callstack 0
   505                           
   506 ;; *************** function _InitApp *****************
   507 ;; Defined at:
   508 ;;		line 28 in file "user.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;		None
   511 ;; Auto vars:     Size  Location     Type
   512 ;;		None
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      void 
   515 ;; Registers used:
   516 ;;		wreg, status,2, cstack
   517 ;; Tracked objects:
   518 ;;		On entry : 0/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   522 ;;      Params:         0       0       0       0
   523 ;;      Locals:         0       0       0       0
   524 ;;      Temps:          0       0       0       0
   525 ;;      Totals:         0       0       0       0
   526 ;;Total ram usage:        0 bytes
   527 ;; Hardware stack levels used:    1
   528 ;; Hardware stack levels required when called:    8
   529 ;; This function calls:
   530 ;;		_init_usart
   531 ;; This function is called by:
   532 ;;		_main
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           	psect	text1
   537  0006F2                     __ptext1:
   538                           	opt callstack 0
   539  0006F2                     _InitApp:
   540                           	opt callstack 22
   541                           
   542                           ;user.c: 33:     TRISBbits.TRISB0 = 0;
   543                           
   544                           ; BSR set to: 0
   545                           ;incstack = 0
   546  0006F2  9093               	bcf	3987,0,c	;volatile
   547                           
   548                           ;user.c: 34:     TRISBbits.RB1 = 0;
   549  0006F4  9293               	bcf	3987,1,c	;volatile
   550                           
   551                           ;user.c: 37:     init_usart();
   552  0006F6  EC63  F003         	call	_init_usart	;wreg free
   553  0006FA  0012               	return		;funcret
   554  0006FC                     __end_of_InitApp:
   555                           	opt callstack 0
   556                           
   557 ;; *************** function _init_usart *****************
   558 ;; Defined at:
   559 ;;		line 44 in file "user.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg, status,2
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   573 ;;      Params:         0       0       0       0
   574 ;;      Locals:         0       0       0       0
   575 ;;      Temps:          0       0       0       0
   576 ;;      Totals:         0       0       0       0
   577 ;;Total ram usage:        0 bytes
   578 ;; Hardware stack levels used:    1
   579 ;; Hardware stack levels required when called:    7
   580 ;; This function calls:
   581 ;;		Nothing
   582 ;; This function is called by:
   583 ;;		_InitApp
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           	psect	text2
   588  0006C6                     __ptext2:
   589                           	opt callstack 0
   590  0006C6                     _init_usart:
   591                           	opt callstack 22
   592                           
   593                           ;user.c: 47:     TRISCbits.RC6 = 0;
   594                           
   595                           ;incstack = 0
   596  0006C6  9C94               	bcf	3988,6,c	;volatile
   597                           
   598                           ;user.c: 48:     TRISCbits.RC7 = 1;
   599  0006C8  8E94               	bsf	3988,7,c	;volatile
   600                           
   601                           ;user.c: 50:     TXSTA1bits.SYNC = 0;
   602  0006CA  98AC               	bcf	4012,4,c	;volatile
   603                           
   604                           ;user.c: 51:     TXSTA1bits.TX9 = 0;
   605  0006CC  9CAC               	bcf	4012,6,c	;volatile
   606                           
   607                           ;user.c: 52:     TXSTA1bits.TXEN = 1;
   608  0006CE  8AAC               	bsf	4012,5,c	;volatile
   609                           
   610                           ;user.c: 54:     RCSTA1bits.RX9 = 0;
   611  0006D0  9CAB               	bcf	4011,6,c	;volatile
   612                           
   613                           ;user.c: 55:     RCSTA1bits.CREN = 1;
   614  0006D2  88AB               	bsf	4011,4,c	;volatile
   615                           
   616                           ;user.c: 56:     RCSTA1bits.SPEN = 1;
   617  0006D4  8EAB               	bsf	4011,7,c	;volatile
   618                           
   619                           ;user.c: 59:     BAUDCONbits.BRG16 = 0;
   620  0006D6  96AA               	bcf	4010,3,c	;volatile
   621                           
   622                           ;user.c: 60:     TXSTA1bits.BRGH = 0;
   623  0006D8  94AC               	bcf	4012,2,c	;volatile
   624                           
   625                           ;user.c: 61:     SPBRG1 = 129;
   626  0006DA  0E81               	movlw	129
   627  0006DC  6EAF               	movwf	4015,c	;volatile
   628  0006DE  0012               	return		;funcret
   629  0006E0                     __end_of_init_usart:
   630                           	opt callstack 0
   631                           
   632 ;; *************** function _ConfigureOscillator *****************
   633 ;; Defined at:
   634 ;;		line 24 in file "system.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;		None
   637 ;; Auto vars:     Size  Location     Type
   638 ;;		None
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      void 
   641 ;; Registers used:
   642 ;;		None
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   648 ;;      Params:         0       0       0       0
   649 ;;      Locals:         0       0       0       0
   650 ;;      Temps:          0       0       0       0
   651 ;;      Totals:         0       0       0       0
   652 ;;Total ram usage:        0 bytes
   653 ;; Hardware stack levels used:    1
   654 ;; Hardware stack levels required when called:    7
   655 ;; This function calls:
   656 ;;		Nothing
   657 ;; This function is called by:
   658 ;;		_main
   659 ;; This function uses a non-reentrant model
   660 ;;
   661                           
   662                           	psect	text3
   663  0006FC                     __ptext3:
   664                           	opt callstack 0
   665  0006FC                     _ConfigureOscillator:
   666                           	opt callstack 23
   667                           
   668                           ;incstack = 0
   669  0006FC  0012               	return		;funcret
   670  0006FE                     __end_of_ConfigureOscillator:
   671                           	opt callstack 0
   672                           
   673 ;; *************** function _low_isr *****************
   674 ;; Defined at:
   675 ;;		line 80 in file "interrupts.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;		None
   678 ;; Auto vars:     Size  Location     Type
   679 ;;		None
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		None
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   689 ;;      Params:         0       0       0       0
   690 ;;      Locals:         0       0       0       0
   691 ;;      Temps:          0       1       0       0
   692 ;;      Totals:         0       1       0       0
   693 ;;Total ram usage:        1 bytes
   694 ;; Hardware stack levels used:    1
   695 ;; Hardware stack levels required when called:    6
   696 ;; This function calls:
   697 ;;		Nothing
   698 ;; This function is called by:
   699 ;;		Interrupt level 1
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           	psect	intcodelo
   704  000018                     __pintcodelo:
   705                           	opt callstack 0
   706  000018                     _low_isr:
   707                           	opt callstack 22
   708                           
   709                           ;incstack = 0
   710  000018  8050               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   711  00001A  CFE0 F060          	movff	bsr,??_low_isr
   712  00001E  C060  FFE0         	movff	??_low_isr,bsr
   713  000022  9050               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   714  000024  0010               	retfie	
   715  000026                     __end_of_low_isr:
   716                           	opt callstack 0
   717                           
   718 ;; *************** function _high_isr *****************
   719 ;; Defined at:
   720 ;;		line 27 in file "interrupts.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;		None
   723 ;; Auto vars:     Size  Location     Type
   724 ;;		None
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   734 ;;      Params:         0       0       0       0
   735 ;;      Locals:         0       0       0       0
   736 ;;      Temps:          9       0       0       0
   737 ;;      Totals:         9       0       0       0
   738 ;;Total ram usage:        9 bytes
   739 ;; Hardware stack levels used:    1
   740 ;; Hardware stack levels required when called:    5
   741 ;; This function calls:
   742 ;;		_printf
   743 ;; This function is called by:
   744 ;;		Interrupt level 2
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           	psect	intcode
   749  000008                     __pintcode:
   750                           	opt callstack 0
   751  000008                     _high_isr:
   752                           	opt callstack 22
   753                           
   754                           ;incstack = 0
   755  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   756  00000A  EFA7  F002         	goto	int_func
   757                           
   758                           	psect	intcode_body
   759  00054E                     __pintcode_body:
   760                           	opt callstack 22
   761  00054E                     int_func:
   762                           	opt callstack 22
   763  00054E  CFE1 F048          	movff	fsr1l,??_high_isr+1
   764  000552  CFE2 F049          	movff	fsr1h,??_high_isr+2
   765  000556  CFD9 F04A          	movff	fsr2l,??_high_isr+3
   766  00055A  CFDA F04B          	movff	fsr2h,??_high_isr+4
   767  00055E  CFF6 F04C          	movff	tblptrl,??_high_isr+5
   768  000562  CFF7 F04D          	movff	tblptrh,??_high_isr+6
   769  000566  CFF8 F04E          	movff	tblptru,??_high_isr+7
   770  00056A  CFF5 F04F          	movff	tablat,??_high_isr+8
   771                           
   772                           ;interrupts.c: 62:       if(INTCONbits.T0IF == 1)
   773  00056E  A4F2               	btfss	4082,2,c	;volatile
   774  000570  D017               	goto	i2l14
   775                           
   776                           ;interrupts.c: 63:       {;interrupts.c: 64:         TMR0 = -12500;
   777  000572  0ECF               	movlw	207
   778  000574  6ED7               	movwf	4055,c	;volatile
   779  000576  0E2C               	movlw	44
   780  000578  6ED6               	movwf	4054,c	;volatile
   781                           
   782                           ;interrupts.c: 68:         TRISBbits.RB1 = !TRISBbits.RB1;
   783  00057A  B293               	btfsc	3987,1,c	;volatile
   784  00057C  D003               	goto	i2u22_40
   785  00057E  6A47               	clrf	??_high_isr& (0+255),c
   786  000580  2A47               	incf	??_high_isr& (0+255),f,c
   787  000582  D001               	goto	i2u23_48
   788  000584                     i2u22_40:
   789  000584  6A47               	clrf	??_high_isr& (0+255),c
   790  000586                     i2u23_48:
   791  000586  4647               	rlncf	??_high_isr,f,c
   792  000588  5093               	movf	3987,w,c	;volatile
   793  00058A  1847               	xorwf	??_high_isr,w,c
   794  00058C  0BFD               	andlw	-3
   795  00058E  1847               	xorwf	??_high_isr,w,c
   796  000590  6E93               	movwf	3987,c	;volatile
   797                           
   798                           ;interrupts.c: 70:         INTCONbits.T0IF = 0;
   799  000592  94F2               	bcf	4082,2,c	;volatile
   800                           
   801                           ;interrupts.c: 71:         printf("hello world!/r/n");
   802  000594  0E01               	movlw	low STR_1
   803  000596  6E41               	movwf	printf@fmt,c
   804  000598  0E03               	movlw	high STR_1
   805  00059A  6E42               	movwf	printf@fmt+1,c
   806  00059C  EC41  F003         	call	_printf	;wreg free
   807  0005A0                     i2l14:
   808  0005A0  C04F  FFF5         	movff	??_high_isr+8,tablat
   809  0005A4  C04E  FFF8         	movff	??_high_isr+7,tblptru
   810  0005A8  C04D  FFF7         	movff	??_high_isr+6,tblptrh
   811  0005AC  C04C  FFF6         	movff	??_high_isr+5,tblptrl
   812  0005B0  C04B  FFDA         	movff	??_high_isr+4,fsr2h
   813  0005B4  C04A  FFD9         	movff	??_high_isr+3,fsr2l
   814  0005B8  C049  FFE2         	movff	??_high_isr+2,fsr1h
   815  0005BC  C048  FFE1         	movff	??_high_isr+1,fsr1l
   816  0005C0  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   817  0005C2  0011               	retfie		f
   818  0005C4                     __end_of_high_isr:
   819                           	opt callstack 0
   820                           
   821 ;; *************** function _printf *****************
   822 ;; Defined at:
   823 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;  fmt             2   24[COMRAM] PTR const unsigned char 
   826 ;;		 -> STR_1(17), 
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  ap              2   28[COMRAM] PTR void [1]
   829 ;;		 -> ?_printf(2), 
   830 ;;  ret             2    0        int 
   831 ;; Return value:  Size  Location     Type
   832 ;;                  2   24[COMRAM] int 
   833 ;; Registers used:
   834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   840 ;;      Params:         2       0       0       0
   841 ;;      Locals:         4       0       0       0
   842 ;;      Temps:          0       0       0       0
   843 ;;      Totals:         6       0       0       0
   844 ;;Total ram usage:        6 bytes
   845 ;; Hardware stack levels used:    1
   846 ;; Hardware stack levels required when called:    4
   847 ;; This function calls:
   848 ;;		_vfprintf
   849 ;; This function is called by:
   850 ;;		_high_isr
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           	psect	text6
   855  000682                     __ptext6:
   856                           	opt callstack 0
   857  000682                     _printf:
   858                           	opt callstack 22
   859                           
   860                           ;incstack = 0
   861  000682  0E43               	movlw	low (?_printf+2)
   862  000684  6E45               	movwf	printf@ap,c
   863  000686  0E00               	movlw	high (?_printf+2)
   864  000688  6E46               	movwf	printf@ap+1,c
   865  00068A  0E00               	movlw	0
   866  00068C  6E39               	movwf	vfprintf@fp,c
   867  00068E  0E00               	movlw	0
   868  000690  6E3A               	movwf	vfprintf@fp+1,c
   869  000692  C041  F03B         	movff	printf@fmt,vfprintf@fmt
   870  000696  C042  F03C         	movff	printf@fmt+1,vfprintf@fmt+1
   871  00069A  0E45               	movlw	low printf@ap
   872  00069C  6E3D               	movwf	vfprintf@ap,c
   873  00069E  0E00               	movlw	high printf@ap
   874  0006A0  6E3E               	movwf	vfprintf@ap+1,c
   875  0006A2  EC18  F003         	call	_vfprintf	;wreg free
   876  0006A6  0012               	return		;funcret
   877  0006A8                     __end_of_printf:
   878                           	opt callstack 0
   879                           
   880 ;; *************** function _vfprintf *****************
   881 ;; Defined at:
   882 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
   885 ;;		 -> NULL(0), 
   886 ;;  fmt             2   18[COMRAM] PTR const unsigned char 
   887 ;;		 -> STR_1(17), 
   888 ;;  ap              2   20[COMRAM] PTR PTR void 
   889 ;;		 -> printf@ap(2), 
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  cfmt            2   22[COMRAM] PTR unsigned char 
   892 ;;		 -> STR_1(17), 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  2   16[COMRAM] int 
   895 ;; Registers used:
   896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   902 ;;      Params:         6       0       0       0
   903 ;;      Locals:         2       0       0       0
   904 ;;      Temps:          0       0       0       0
   905 ;;      Totals:         8       0       0       0
   906 ;;Total ram usage:        8 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; Hardware stack levels required when called:    3
   909 ;; This function calls:
   910 ;;		_vfpfcnvrt
   911 ;; This function is called by:
   912 ;;		_printf
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text7
   917  000630                     __ptext7:
   918                           	opt callstack 0
   919  000630                     _vfprintf:
   920                           	opt callstack 22
   921                           
   922                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
   923                           
   924                           ;incstack = 0
   925  000630  C03B  F03F         	movff	vfprintf@fmt,vfprintf@cfmt
   926  000634  C03C  F040         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   927                           
   928                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
   929  000638  0E00               	movlw	0
   930  00063A  6E22               	movwf	_nout+1,c
   931  00063C  0E00               	movlw	0
   932  00063E  6E21               	movwf	_nout,c
   933                           
   934                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
   935  000640  D012               	goto	i2l1013
   936  000642                     i2l1011:
   937                           
   938                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
   939  000642  C039  F033         	movff	vfprintf@fp,vfpfcnvrt@fp
   940  000646  C03A  F034         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   941  00064A  0E3F               	movlw	low vfprintf@cfmt
   942  00064C  6E35               	movwf	vfpfcnvrt@fmt,c
   943  00064E  0E00               	movlw	high vfprintf@cfmt
   944  000650  6E36               	movwf	vfpfcnvrt@fmt+1,c
   945  000652  C03D  F037         	movff	vfprintf@ap,vfpfcnvrt@ap
   946  000656  C03E  F038         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   947  00065A  EC40  F002         	call	_vfpfcnvrt	;wreg free
   948  00065E  5033               	movf	?_vfpfcnvrt,w,c
   949  000660  2621               	addwf	_nout,f,c
   950  000662  5034               	movf	?_vfpfcnvrt+1,w,c
   951  000664  2222               	addwfc	_nout+1,f,c
   952  000666                     i2l1013:
   953                           
   954                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
   955  000666  C03F  FFF6         	movff	vfprintf@cfmt,tblptrl
   956  00066A  C040  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   957  00066E                     	if	0	;tblptru may be non-zero
   958  00066E                     	endif
   959  00066E                     	if	0	;tblptru may be non-zero
   960  00066E                     	endif
   961  00066E  0008               	tblrd		*
   962  000670  50F5               	movf	tablat,w,c
   963  000672  0900               	iorlw	0
   964  000674  A4D8               	btfss	status,2,c
   965  000676  D7E5               	goto	i2l1011
   966                           
   967                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
   968  000678  C021  F039         	movff	_nout,?_vfprintf
   969  00067C  C022  F03A         	movff	_nout+1,?_vfprintf+1
   970  000680  0012               	return		;funcret
   971  000682                     __end_of_vfprintf:
   972                           	opt callstack 0
   973                           
   974 ;; *************** function _vfpfcnvrt *****************
   975 ;; Defined at:
   976 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
   979 ;;		 -> NULL(0), 
   980 ;;  fmt             2   12[COMRAM] PTR PTR unsigned char 
   981 ;;		 -> vfprintf@cfmt(2), 
   982 ;;  ap              2   14[COMRAM] PTR PTR void 
   983 ;;		 -> printf@ap(2), 
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  llu             8    0        unsigned long long 
   986 ;;  ll              8    0        long long 
   987 ;;  f               4    0        long long 
   988 ;;  vp              3    0        PTR void 
   989 ;;  ct              3    0        unsigned char [3]
   990 ;;  cp              3    0        PTR unsigned char 
   991 ;;  i               2    0        int 
   992 ;;  done            2    0        int 
   993 ;;  c               1    0        unsigned char 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  2   10[COMRAM] int 
   996 ;; Registers used:
   997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1003 ;;      Params:         6       0       0       0
  1004 ;;      Locals:         0       0       0       0
  1005 ;;      Temps:          0       0       0       0
  1006 ;;      Totals:         6       0       0       0
  1007 ;;Total ram usage:        6 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; Hardware stack levels required when called:    2
  1010 ;; This function calls:
  1011 ;;		_fputc
  1012 ;; This function is called by:
  1013 ;;		_vfprintf
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           	psect	text8
  1018  000480                     __ptext8:
  1019                           	opt callstack 0
  1020  000480                     _vfpfcnvrt:
  1021                           	opt callstack 22
  1022                           
  1023                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  1024                           
  1025                           ;incstack = 0
  1026  000480  C035  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1027  000484  C036  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1028  000488  CFDE FFF6          	movff	postinc2,tblptrl
  1029  00048C  CFDD FFF7          	movff	postdec2,tblptrh
  1030  000490                     	if	0	;tblptru may be non-zero
  1031  000490                     	endif
  1032  000490                     	if	0	;tblptru may be non-zero
  1033  000490                     	endif
  1034  000490  0008               	tblrd		*
  1035  000492  50F5               	movf	tablat,w,c
  1036  000494  0A25               	xorlw	37
  1037  000496  A4D8               	btfss	status,2,c
  1038  000498  D040               	goto	i2l999
  1039                           
  1040                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  1041  00049A  C035  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1042  00049E  C036  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1043  0004A2  2ADE               	incf	postinc2,f,c
  1044  0004A4  0E00               	movlw	0
  1045  0004A6  22DD               	addwfc	postdec2,f,c
  1046                           
  1047                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  1048  0004A8  0E00               	movlw	0
  1049  0004AA  6E24               	movwf	_width+1,c
  1050  0004AC  0E00               	movlw	0
  1051  0004AE  6E23               	movwf	_width,c
  1052  0004B0  C023  F027         	movff	_width,_flags
  1053  0004B4  C024  F028         	movff	_width+1,_flags+1
  1054                           
  1055                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  1056  0004B8  6825               	setf	_prec,c
  1057  0004BA  6826               	setf	_prec+1,c
  1058                           
  1059                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  1060  0004BC  C035  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1061  0004C0  C036  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1062  0004C4  CFDE FFF6          	movff	postinc2,tblptrl
  1063  0004C8  CFDD FFF7          	movff	postdec2,tblptrh
  1064  0004CC                     	if	0	;tblptru may be non-zero
  1065  0004CC                     	endif
  1066  0004CC                     	if	0	;tblptru may be non-zero
  1067  0004CC                     	endif
  1068  0004CC  0008               	tblrd		*
  1069  0004CE  50F5               	movf	tablat,w,c
  1070  0004D0  0A25               	xorlw	37
  1071  0004D2  A4D8               	btfss	status,2,c
  1072  0004D4  D016               	goto	i2l993
  1073                           
  1074                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  1075  0004D6  C035  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1076  0004DA  C036  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1077  0004DE  2ADE               	incf	postinc2,f,c
  1078  0004E0  0E00               	movlw	0
  1079  0004E2  22DD               	addwfc	postdec2,f,c
  1080                           
  1081                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  1082  0004E4  0E00               	movlw	0
  1083  0004E6  6E2B               	movwf	fputc@c+1,c
  1084  0004E8  0E25               	movlw	37
  1085  0004EA  6E2A               	movwf	fputc@c,c
  1086  0004EC  C033  F02C         	movff	vfpfcnvrt@fp,fputc@fp
  1087  0004F0  C034  F02D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1088  0004F4  ECE2  F002         	call	_fputc	;wreg free
  1089  0004F8                     i2l989:
  1090                           
  1091                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  1092  0004F8  0E00               	movlw	0
  1093  0004FA  6E34               	movwf	?_vfpfcnvrt+1,c
  1094  0004FC  0E01               	movlw	1
  1095  0004FE  6E33               	movwf	?_vfpfcnvrt,c
  1096  000500  0012               	return	
  1097  000502                     i2l993:
  1098                           
  1099                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  1100  000502  C035  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1101  000506  C036  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1102  00050A  2ADE               	incf	postinc2,f,c
  1103  00050C  0E00               	movlw	0
  1104  00050E  22DD               	addwfc	postdec2,f,c
  1105                           
  1106                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  1107  000510  0E00               	movlw	0
  1108  000512  6E34               	movwf	?_vfpfcnvrt+1,c
  1109  000514  0E00               	movlw	0
  1110  000516  6E33               	movwf	?_vfpfcnvrt,c
  1111  000518  0012               	return	
  1112  00051A                     i2l999:
  1113                           
  1114                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  1115  00051A  C035  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1116  00051E  C036  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1117  000522  CFDE FFF6          	movff	postinc2,tblptrl
  1118  000526  CFDD FFF7          	movff	postdec2,tblptrh
  1119  00052A                     	if	0	;tblptru may be non-zero
  1120  00052A                     	endif
  1121  00052A                     	if	0	;tblptru may be non-zero
  1122  00052A                     	endif
  1123  00052A  0008               	tblrd		*
  1124  00052C  50F5               	movf	tablat,w,c
  1125  00052E  6E2A               	movwf	fputc@c,c
  1126  000530  6A2B               	clrf	fputc@c+1,c
  1127  000532  C033  F02C         	movff	vfpfcnvrt@fp,fputc@fp
  1128  000536  C034  F02D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1129  00053A  ECE2  F002         	call	_fputc	;wreg free
  1130                           
  1131                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  1132  00053E  C035  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1133  000542  C036  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1134  000546  2ADE               	incf	postinc2,f,c
  1135  000548  0E00               	movlw	0
  1136  00054A  22DD               	addwfc	postdec2,f,c
  1137  00054C  D7D5               	goto	i2l989
  1138  00054E                     __end_of_vfpfcnvrt:
  1139                           	opt callstack 0
  1140                           
  1141 ;; *************** function _fputc *****************
  1142 ;; Defined at:
  1143 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;  c               2    1[COMRAM] int 
  1146 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  1147 ;;		 -> NULL(0), 
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;		None
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  2    1[COMRAM] int 
  1152 ;; Registers used:
  1153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1159 ;;      Params:         4       0       0       0
  1160 ;;      Locals:         0       0       0       0
  1161 ;;      Temps:          5       0       0       0
  1162 ;;      Totals:         9       0       0       0
  1163 ;;Total ram usage:        9 bytes
  1164 ;; Hardware stack levels used:    1
  1165 ;; Hardware stack levels required when called:    1
  1166 ;; This function calls:
  1167 ;;		_putch
  1168 ;; This function is called by:
  1169 ;;		_vfpfcnvrt
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text9
  1174  0005C4                     __ptext9:
  1175                           	opt callstack 0
  1176  0005C4                     _fputc:
  1177                           	opt callstack 22
  1178                           
  1179                           ;incstack = 0
  1180  0005C4  502C               	movf	fputc@fp,w,c
  1181  0005C6  102D               	iorwf	fputc@fp+1,w,c
  1182  0005C8  B4D8               	btfsc	status,2,c
  1183  0005CA  D004               	goto	i2u15_40
  1184  0005CC  502C               	movf	fputc@fp,w,c
  1185  0005CE  102D               	iorwf	fputc@fp+1,w,c
  1186  0005D0  A4D8               	btfss	status,2,c
  1187  0005D2  D004               	goto	i2l967
  1188  0005D4                     i2u15_40:
  1189  0005D4  502A               	movf	fputc@c,w,c
  1190  0005D6  EC70  F003         	call	_putch
  1191  0005DA  0012               	return	
  1192  0005DC                     i2l967:
  1193  0005DC  EE20 F004          	lfsr	2,4
  1194  0005E0  502C               	movf	fputc@fp,w,c
  1195  0005E2  26D9               	addwf	fsr2l,f,c
  1196  0005E4  502D               	movf	fputc@fp+1,w,c
  1197  0005E6  22DA               	addwfc	fsr2h,f,c
  1198  0005E8  50DE               	movf	postinc2,w,c
  1199  0005EA  10DE               	iorwf	postinc2,w,c
  1200  0005EC  B4D8               	btfsc	status,2,c
  1201  0005EE  D016               	goto	i2u17_40
  1202  0005F0  EE20 F004          	lfsr	2,4
  1203  0005F4  502C               	movf	fputc@fp,w,c
  1204  0005F6  26D9               	addwf	fsr2l,f,c
  1205  0005F8  502D               	movf	fputc@fp+1,w,c
  1206  0005FA  22DA               	addwfc	fsr2h,f,c
  1207  0005FC  EE10 F002          	lfsr	1,2
  1208  000600  502C               	movf	fputc@fp,w,c
  1209  000602  26E1               	addwf	fsr1l,f,c
  1210  000604  502D               	movf	fputc@fp+1,w,c
  1211  000606  22E2               	addwfc	fsr1h,f,c
  1212  000608  50DE               	movf	postinc2,w,c
  1213  00060A  5CE6               	subwf	postinc1,w,c
  1214  00060C  50E6               	movf	postinc1,w,c
  1215  00060E  0A80               	xorlw	128
  1216  000610  6E32               	movwf	(??_fputc+4)& (0+255),c
  1217  000612  50DE               	movf	postinc2,w,c
  1218  000614  0A80               	xorlw	128
  1219  000616  5832               	subwfb	(??_fputc+4)& (0+255),w,c
  1220  000618  B0D8               	btfsc	status,0,c
  1221  00061A  0012               	return	
  1222  00061C                     i2u17_40:
  1223  00061C  EE20 F002          	lfsr	2,2
  1224  000620  502C               	movf	fputc@fp,w,c
  1225  000622  26D9               	addwf	fsr2l,f,c
  1226  000624  502D               	movf	fputc@fp+1,w,c
  1227  000626  22DA               	addwfc	fsr2h,f,c
  1228  000628  2ADE               	incf	postinc2,f,c
  1229  00062A  0E00               	movlw	0
  1230  00062C  22DD               	addwfc	postdec2,f,c
  1231  00062E  0012               	return		;funcret
  1232  000630                     __end_of_fputc:
  1233                           	opt callstack 0
  1234                           
  1235 ;; *************** function _putch *****************
  1236 ;; Defined at:
  1237 ;;		line 89 in file "user.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  byte            1    wreg     unsigned char 
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  byte            1    0[COMRAM] unsigned char 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg, status,2
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1251 ;;      Params:         0       0       0       0
  1252 ;;      Locals:         1       0       0       0
  1253 ;;      Temps:          0       0       0       0
  1254 ;;      Totals:         1       0       0       0
  1255 ;;Total ram usage:        1 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; This function calls:
  1258 ;;		Nothing
  1259 ;; This function is called by:
  1260 ;;		_fputc
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text10
  1265  0006E0                     __ptext10:
  1266                           	opt callstack 0
  1267  0006E0                     _putch:
  1268                           	opt callstack 22
  1269                           
  1270                           ;incstack = 0
  1271                           ;putch@byte stored from wreg
  1272  0006E0  6E29               	movwf	putch@byte,c
  1273                           
  1274                           ;user.c: 90:     TXSTA = 0x26;
  1275  0006E2  0E26               	movlw	38
  1276  0006E4  6EAC               	movwf	4012,c	;volatile
  1277                           
  1278                           ;user.c: 91:     RCSTA1bits.SPEN = 1;
  1279  0006E6  8EAB               	bsf	4011,7,c	;volatile
  1280  0006E8                     i2l80:
  1281  0006E8  A89E               	btfss	3998,4,c	;volatile
  1282  0006EA  D7FE               	goto	i2l80
  1283                           
  1284                           ;user.c: 93:     TXREG = byte;
  1285  0006EC  C029  FFAD         	movff	putch@byte,4013	;volatile
  1286  0006F0  0012               	return		;funcret
  1287  0006F2                     __end_of_putch:
  1288                           	opt callstack 0
  1289                           
  1290                           	psect	rparam
  1291  0000                     
  1292                           	psect	temp
  1293  000050                     btemp:
  1294                           	opt callstack 0
  1295  000050                     	ds	1
  1296  0000                     int$flags	set	btemp
  1297  0000                     wtemp8	set	btemp+1
  1298  0000                     ttemp5	set	btemp+1
  1299  0000                     ttemp6	set	btemp+4
  1300  0000                     ttemp7	set	btemp+8
  1301                           tosu	equ	0xFFF
  1302                           tosh	equ	0xFFE
  1303                           tosl	equ	0xFFD
  1304                           stkptr	equ	0xFFC
  1305                           pclatu	equ	0xFFB
  1306                           pclath	equ	0xFFA
  1307                           pcl	equ	0xFF9
  1308                           tblptru	equ	0xFF8
  1309                           tblptrh	equ	0xFF7
  1310                           tblptrl	equ	0xFF6
  1311                           tablat	equ	0xFF5
  1312                           prodh	equ	0xFF4
  1313                           prodl	equ	0xFF3
  1314                           indf0	equ	0xFEF
  1315                           postinc0	equ	0xFEE
  1316                           postdec0	equ	0xFED
  1317                           preinc0	equ	0xFEC
  1318                           plusw0	equ	0xFEB
  1319                           fsr0h	equ	0xFEA
  1320                           fsr0l	equ	0xFE9
  1321                           wreg	equ	0xFE8
  1322                           indf1	equ	0xFE7
  1323                           postinc1	equ	0xFE6
  1324                           postdec1	equ	0xFE5
  1325                           preinc1	equ	0xFE4
  1326                           plusw1	equ	0xFE3
  1327                           fsr1h	equ	0xFE2
  1328                           fsr1l	equ	0xFE1
  1329                           bsr	equ	0xFE0
  1330                           indf2	equ	0xFDF
  1331                           postinc2	equ	0xFDE
  1332                           postdec2	equ	0xFDD
  1333                           preinc2	equ	0xFDC
  1334                           plusw2	equ	0xFDB
  1335                           fsr2h	equ	0xFDA
  1336                           fsr2l	equ	0xFD9
  1337                           status	equ	0xFD8


Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      79
    BANK0           160      5       5
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    S1117_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0       1
                                              1 BANK0      4     4      0
                _ConfigureOscillator
                            _InitApp
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
                         _init_usart
 ---------------------------------------------------------------------------------
 (2) _init_usart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _low_isr                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                             9     9      0    1635
                                             30 COMRAM     9     9      0
                             _printf
 ---------------------------------------------------------------------------------
 (5) _printf                                               6     4      2    1635
                                             24 COMRAM     6     4      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (6) _vfprintf                                             8     2      6    1507
                                             16 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (7) _vfpfcnvrt                                           40    34      6    1157
                                             10 COMRAM     6     0      6
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     731
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
     _init_usart

 _low_isr (ROOT)

 _high_isr (ROOT)
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5       5       5        3.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     27      4F       1       84.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      54       3        0.0%
DATA                 0      0      54      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr  1 08:09:32 2019

                          bsr 000FE0                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                   __CFG_OSC$HS 000000  
                __CFG_CPB$OFF 000000                           u240 046C                           u307 03AA  
                         u317 03CC                           u327 03EC                           u337 040C  
                         u258 0470                  __CFG_CPD$OFF 000000                           u347 042C  
                         u267 032A                           u357 044C                           u277 034A  
                         u287 036A                           u297 038A                           wreg 000FE8  
                  _TXSTA1bits 000FAC                  __CFG_IESO$ON 000000                  __CFG_LVP$OFF 000000  
                        l1043 031C                          STR_1 0301                          i2l14 05A0  
                        i2l80 06E8                          _TMR0 000FD6                          _TXIF 007CF4  
               __CFG_FCMEN$ON 000000                          _dbuf 0001                          _main 0314  
                        _prec 0025                          _nout 0021                          fsr1h 000FE2  
                        fsr2h 000FDA                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 0050                          start 0026                  ___param_bank 000000  
             __end_of_InitApp 06FC                         ?_main 0029                         i2l967 05DC  
                       i2l993 0502                         i2l989 04F8                         i2l999 051A  
                vfpfcnvrt@fmt 0035                         _TXREG 000FAD                         _TXSTA 000FAC  
         _ConfigureOscillator 06FC                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                         _flags 0027                         _fputc 05C4  
                       _width 0023                         _putch 06E0               __end_of_low_isr 0026  
              __CFG_BOREN$OFF 000000                         tablat 000FF5                         ttemp5 0051  
                       ttemp6 0054                         ttemp7 0058                         status 000FD8  
                       wtemp8 0051          ?_ConfigureOscillator 0029                __CFG_MCLRE$OFF 000000  
             __initialization 06A8                __CFG_HPOL$HIGH 000000                  __end_of_main 0480  
              __CFG_LPOL$HIGH 000000                        ??_main 0061                 __activetblptr 000001  
                      ?_fputc 002A                        ?_putch 0029                        i2l1011 0642  
                      i2l1013 0666                __CFG_WDTEN$OFF 000000                        _SPBRG1 000FAF  
              __CFG_WINEN$OFF 000000                     ??_InitApp 0061         ??_ConfigureOscillator 0061  
              __CFG_SSPMX$RC7 000000                  vfprintf@cfmt 003F              __end_of_high_isr 05C4  
              __CFG_STVREN$ON 000000                        clear_0 06AE                        _printf 0682  
                      fputc@c 002A                  __mediumconst 0000                     ??_low_isr 0060  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
            __end_of_vfprintf 0682                    __accesstop 0060       __end_of__initialization 06B4  
             __CFG_FLTAMX$RC1 000000                 ___rparam_used 000001               __CFG_T1OSCMX$ON 000000  
              __pcstackCOMRAM 0029                 __end_of_fputc 0630                 __end_of_putch 06F2  
                     ??_fputc 002E                       ??_putch 0029               __CFG_WDPS$32768 000000  
                     ?_printf 0041               __CFG_PWM4MX$RB5 000000            __size_of_vfpfcnvrt 00CE  
                     i2u22_40 0584                       i2u15_40 05D4                       i2u23_48 0586  
                     i2u17_40 061C                     ?_high_isr 0029               __CFG_PWMPIN$OFF 000000  
                     _InitApp 06F2               __CFG_PWRTEN$OFF 000000                       __Hparam 0000  
                     __Lparam 0000                     ?_vfprintf 0039                  __psmallconst 0300  
                     __pcinit 06A8                       __ramtop 0300                    _init_usart 06C6  
                     __ptext0 0314                       __ptext1 06F2                       __ptext2 06C6  
                     __ptext3 06FC                       __ptext6 0682                       __ptext7 0630  
                     __ptext8 0480                       __ptext9 05C4               __size_of_printf 0026  
                   _T0CONbits 000FD5                       _low_isr 0018                    ??_high_isr 0047  
              __pintcode_body 054E          end_of_initialization 06B4                       fputc@fp 002C  
                     int_func 054E             __end_of_vfpfcnvrt 054E                       postdec2 000FDD  
                     postinc0 000FEE                       postinc1 000FE6                       postinc2 000FDE  
                  ??_vfprintf 003F                     _PORTBbits 000F81                     _TRISBbits 000F93  
                   _TRISCbits 000F94   __end_of_ConfigureOscillator 06FE              __CFG_EXCLKMX$RC3 000000  
                 vfpfcnvrt@ap 0037                   vfpfcnvrt@fp 0033                   _BAUDCONbits 000FAA  
                 ?_init_usart 0029                __end_of_printf 06A8           start_initialization 06A8  
                 vfprintf@fmt 003B                      ??_printf 0043                   __pbssCOMRAM 0001  
               __pcstackBANK0 0060             __size_of_high_isr 05BC           __size_of_init_usart 001A  
                    ?_InitApp 0029                     __pintcode 0008                   __pintcodelo 0018  
           __size_of_vfprintf 0052                   __smallconst 0300                      ?_low_isr 0029  
              __size_of_fputc 006C                __size_of_putch 0012                      _RCONbits 000FD0  
                   _vfpfcnvrt 0480              __size_of_InitApp 000A                      __Hrparam 0000  
                  vfprintf@ap 003D                      __Lrparam 0000                    vfprintf@fp 0039  
                __Lsmallconst 0300                    ?_vfpfcnvrt 0033                  ??_init_usart 0061  
            __size_of_low_isr 000E                      __ptext10 06E0                      _high_isr 0008  
               __size_of_main 016C            __end_of_init_usart 06E0  __size_of_ConfigureOscillator 0002  
                    int$flags 0050                      _vfprintf 0630                     printf@fmt 0041  
                   putch@byte 0029                    _INTCONbits 000FF2                      intlevel1 0000  
                    intlevel2 0000                    _RCSTA1bits 000FAB                      printf@ap 0045  
                 ??_vfpfcnvrt 0039  
