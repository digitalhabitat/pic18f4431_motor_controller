

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr  1 05:25:08 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24  0000                     
    25                           ; Version 2.05
    26                           ; Generated 20/12/2018 GMT
    27                           ; 
    28                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4431 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     _TRISCbits	set	3988
    60  0000                     _TRISBbits	set	3987
    61  0000                     _PORTBbits	set	3969
    62  0000                     _TXREG	set	4013
    63  0000                     _TXSTA	set	4012
    64  0000                     _SPBRG1	set	4015
    65  0000                     _BAUDCONbits	set	4010
    66  0000                     _RCSTA1bits	set	4011
    67  0000                     _TXSTA1bits	set	4012
    68  0000                     _TXIF	set	31988
    69                           
    70                           	psect	smallconst
    71  000300                     __psmallconst:
    72                           	opt callstack 0
    73  000300  00                 	db	0
    74  000301                     STR_1:
    75  000301  68                 	db	104	;'h'
    76  000302  65                 	db	101	;'e'
    77  000303  6C                 	db	108	;'l'
    78  000304  6C                 	db	108	;'l'
    79  000305  6F                 	db	111	;'o'
    80  000306  20                 	db	32
    81  000307  77                 	db	119	;'w'
    82  000308  6F                 	db	111	;'o'
    83  000309  72                 	db	114	;'r'
    84  00030A  6C                 	db	108	;'l'
    85  00030B  64                 	db	100	;'d'
    86  00030C  2F                 	db	47
    87  00030D  72                 	db	114	;'r'
    88  00030E  2F                 	db	47
    89  00030F  6E                 	db	110	;'n'
    90  000310  00                 	db	0
    91                           
    92                           ; #config settings
    93  000311  00                 	db	0	; dummy byte at the end
    94  0000                     
    95                           	psect	cinit
    96  0005CE                     __pcinit:
    97                           	opt callstack 0
    98  0005CE                     start_initialization:
    99                           	opt callstack 0
   100  0005CE                     __initialization:
   101                           	opt callstack 0
   102                           
   103                           ; Clear objects allocated to COMRAM (40 bytes)
   104  0005CE  EE00  F001         	lfsr	0,__pbssCOMRAM
   105  0005D2  0E28               	movlw	40
   106  0005D4                     clear_0:
   107  0005D4  6AEE               	clrf	postinc0,c
   108  0005D6  06E8               	decf	wreg,f,c
   109  0005D8  E1FD               	bnz	clear_0
   110  0005DA                     end_of_initialization:
   111                           	opt callstack 0
   112  0005DA                     __end_of__initialization:
   113                           	opt callstack 0
   114  0005DA  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   115  0005DC  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   116  0005DE  0E00               	movlw	low (__Lsmallconst shr (0+16))
   117  0005E0  6EF8               	movwf	tblptru,c
   118  0005E2  0E03               	movlw	high __Lsmallconst
   119  0005E4  6EF7               	movwf	tblptrh,c
   120  0005E6  0100               	movlb	0
   121  0005E8  EF89  F001         	goto	_main	;jump to C main() function
   122                           
   123                           	psect	bssCOMRAM
   124  000001                     __pbssCOMRAM:
   125                           	opt callstack 0
   126  000001                     	ds	32
   127  000021                     _nout:
   128                           	opt callstack 0
   129  000021                     	ds	2
   130  000023                     _width:
   131                           	opt callstack 0
   132  000023                     	ds	2
   133  000025                     _prec:
   134                           	opt callstack 0
   135  000025                     	ds	2
   136  000027                     _flags:
   137                           	opt callstack 0
   138  000027                     	ds	2
   139                           
   140                           	psect	cstackCOMRAM
   141  000029                     __pcstackCOMRAM:
   142                           	opt callstack 0
   143  000029                     ??_low_isr:
   144  000029                     
   145                           ; 1 bytes @ 0x0
   146  000029                     	ds	1
   147  00002A                     putch@byte:
   148                           	opt callstack 0
   149                           
   150                           ; 1 bytes @ 0x1
   151  00002A                     	ds	1
   152  00002B                     fputc@c:
   153                           	opt callstack 0
   154                           
   155                           ; 2 bytes @ 0x2
   156  00002B                     	ds	2
   157  00002D                     fputc@fp:
   158                           	opt callstack 0
   159                           
   160                           ; 2 bytes @ 0x4
   161  00002D                     	ds	2
   162  00002F                     ??_fputc:
   163                           
   164                           ; 1 bytes @ 0x6
   165  00002F                     	ds	5
   166  000034                     ?_vfpfcnvrt:
   167                           	opt callstack 0
   168  000034                     vfpfcnvrt@fp:
   169                           	opt callstack 0
   170                           
   171                           ; 2 bytes @ 0xB
   172  000034                     	ds	2
   173  000036                     vfpfcnvrt@fmt:
   174                           	opt callstack 0
   175                           
   176                           ; 2 bytes @ 0xD
   177  000036                     	ds	2
   178  000038                     vfpfcnvrt@ap:
   179                           	opt callstack 0
   180                           
   181                           ; 2 bytes @ 0xF
   182  000038                     	ds	2
   183  00003A                     ?_vfprintf:
   184                           	opt callstack 0
   185  00003A                     vfprintf@fp:
   186                           	opt callstack 0
   187                           
   188                           ; 2 bytes @ 0x11
   189  00003A                     	ds	2
   190  00003C                     vfprintf@fmt:
   191                           	opt callstack 0
   192                           
   193                           ; 2 bytes @ 0x13
   194  00003C                     	ds	2
   195  00003E                     vfprintf@ap:
   196                           	opt callstack 0
   197                           
   198                           ; 2 bytes @ 0x15
   199  00003E                     	ds	2
   200  000040                     vfprintf@cfmt:
   201                           	opt callstack 0
   202                           
   203                           ; 2 bytes @ 0x17
   204  000040                     	ds	2
   205  000042                     ?_printf:
   206                           	opt callstack 0
   207  000042                     printf@fmt:
   208                           	opt callstack 0
   209                           
   210                           ; 2 bytes @ 0x19
   211  000042                     	ds	2
   212  000044                     
   213                           ; 1 bytes @ 0x1B
   214  000044                     	ds	2
   215  000046                     printf@ap:
   216                           	opt callstack 0
   217                           
   218                           ; 2 bytes @ 0x1D
   219  000046                     	ds	2
   220  000048                     ??_main:
   221                           
   222                           ; 1 bytes @ 0x1F
   223  000048                     	ds	2
   224                           
   225 ;;
   226 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   227 ;;
   228 ;; *************** function _main *****************
   229 ;; Defined at:
   230 ;;		line 35 in file "main.c"
   231 ;; Parameters:    Size  Location     Type
   232 ;;		None
   233 ;; Auto vars:     Size  Location     Type
   234 ;;  val             2    0        int 
   235 ;;  x               1    0        unsigned char 
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   240 ;; Tracked objects:
   241 ;;		On entry : 0/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   245 ;;      Params:         0       0       0       0
   246 ;;      Locals:         2       0       0       0
   247 ;;      Temps:          2       0       0       0
   248 ;;      Totals:         4       0       0       0
   249 ;;Total ram usage:        4 bytes
   250 ;; Hardware stack levels required when called:    7
   251 ;; This function calls:
   252 ;;		_ConfigureOscillator
   253 ;;		_InitApp
   254 ;;		_printf
   255 ;; This function is called by:
   256 ;;		Startup code after reset
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           	psect	text0
   261  000312                     __ptext0:
   262                           	opt callstack 0
   263  000312                     _main:
   264                           	opt callstack 24
   265                           
   266                           ;main.c: 38:     ConfigureOscillator();
   267                           
   268                           ;incstack = 0
   269  000312  EC12  F003         	call	_ConfigureOscillator	;wreg free
   270                           
   271                           ;main.c: 41:     InitApp();
   272  000316  EC0C  F003         	call	_InitApp	;wreg free
   273  00031A                     l979:
   274                           
   275                           ;main.c: 50:     {;main.c: 52:         printf("hello world/r/n");
   276  00031A  0E01               	movlw	low STR_1
   277  00031C  6E42               	movwf	printf@fmt,c
   278  00031E  0E03               	movlw	high STR_1
   279  000320  6E43               	movwf	printf@fmt+1,c
   280  000322  ECD4  F002         	call	_printf	;wreg free
   281                           
   282                           ;main.c: 53:         PORTBbits.RB0 = 1;
   283  000326  8081               	bsf	3969,0,c	;volatile
   284                           
   285                           ;main.c: 54:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   286  000328  0E02               	movlw	2
   287  00032A  6E49               	movwf	(??_main+1)& (0+255),c
   288  00032C  0EE8               	movlw	232
   289  00032E  6E48               	movwf	??_main& (0+255),c
   290  000330  0E52               	movlw	82
   291  000332                     u167:
   292  000332  0004               	clrwdt	
   293  000334  2EE8               	decfsz	wreg,f,c
   294  000336  D7FD               	bra	u167
   295  000338  2E48               	decfsz	??_main& (0+255),f,c
   296  00033A  D7FB               	bra	u167
   297  00033C  2E49               	decfsz	(??_main+1)& (0+255),f,c
   298  00033E  D7F9               	bra	u167
   299                           
   300                           ;main.c: 55:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   301  000340  0E02               	movlw	2
   302  000342  6E49               	movwf	(??_main+1)& (0+255),c
   303  000344  0EE8               	movlw	232
   304  000346  6E48               	movwf	??_main& (0+255),c
   305  000348  0E52               	movlw	82
   306  00034A                     u177:
   307  00034A  0004               	clrwdt	
   308  00034C  2EE8               	decfsz	wreg,f,c
   309  00034E  D7FD               	bra	u177
   310  000350  2E48               	decfsz	??_main& (0+255),f,c
   311  000352  D7FB               	bra	u177
   312  000354  2E49               	decfsz	(??_main+1)& (0+255),f,c
   313  000356  D7F9               	bra	u177
   314                           
   315                           ;main.c: 56:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   316  000358  0E02               	movlw	2
   317  00035A  6E49               	movwf	(??_main+1)& (0+255),c
   318  00035C  0EE8               	movlw	232
   319  00035E  6E48               	movwf	??_main& (0+255),c
   320  000360  0E52               	movlw	82
   321  000362                     u187:
   322  000362  0004               	clrwdt	
   323  000364  2EE8               	decfsz	wreg,f,c
   324  000366  D7FD               	bra	u187
   325  000368  2E48               	decfsz	??_main& (0+255),f,c
   326  00036A  D7FB               	bra	u187
   327  00036C  2E49               	decfsz	(??_main+1)& (0+255),f,c
   328  00036E  D7F9               	bra	u187
   329                           
   330                           ;main.c: 57:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   331  000370  0E02               	movlw	2
   332  000372  6E49               	movwf	(??_main+1)& (0+255),c
   333  000374  0EE8               	movlw	232
   334  000376  6E48               	movwf	??_main& (0+255),c
   335  000378  0E52               	movlw	82
   336  00037A                     u197:
   337  00037A  0004               	clrwdt	
   338  00037C  2EE8               	decfsz	wreg,f,c
   339  00037E  D7FD               	bra	u197
   340  000380  2E48               	decfsz	??_main& (0+255),f,c
   341  000382  D7FB               	bra	u197
   342  000384  2E49               	decfsz	(??_main+1)& (0+255),f,c
   343  000386  D7F9               	bra	u197
   344                           
   345                           ;main.c: 58:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   346  000388  0E02               	movlw	2
   347  00038A  6E49               	movwf	(??_main+1)& (0+255),c
   348  00038C  0EE8               	movlw	232
   349  00038E  6E48               	movwf	??_main& (0+255),c
   350  000390  0E52               	movlw	82
   351  000392                     u207:
   352  000392  0004               	clrwdt	
   353  000394  2EE8               	decfsz	wreg,f,c
   354  000396  D7FD               	bra	u207
   355  000398  2E48               	decfsz	??_main& (0+255),f,c
   356  00039A  D7FB               	bra	u207
   357  00039C  2E49               	decfsz	(??_main+1)& (0+255),f,c
   358  00039E  D7F9               	bra	u207
   359                           
   360                           ;main.c: 60:         PORTBbits.RB0 = 0;
   361  0003A0  9081               	bcf	3969,0,c	;volatile
   362                           
   363                           ;main.c: 61:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   364  0003A2  0E02               	movlw	2
   365  0003A4  6E49               	movwf	(??_main+1)& (0+255),c
   366  0003A6  0EE8               	movlw	232
   367  0003A8  6E48               	movwf	??_main& (0+255),c
   368  0003AA  0E52               	movlw	82
   369  0003AC                     u217:
   370  0003AC  0004               	clrwdt	
   371  0003AE  2EE8               	decfsz	wreg,f,c
   372  0003B0  D7FD               	bra	u217
   373  0003B2  2E48               	decfsz	??_main& (0+255),f,c
   374  0003B4  D7FB               	bra	u217
   375  0003B6  2E49               	decfsz	(??_main+1)& (0+255),f,c
   376  0003B8  D7F9               	bra	u217
   377                           
   378                           ;main.c: 62:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   379  0003BA  0E02               	movlw	2
   380  0003BC  6E49               	movwf	(??_main+1)& (0+255),c
   381  0003BE  0EE8               	movlw	232
   382  0003C0  6E48               	movwf	??_main& (0+255),c
   383  0003C2  0E52               	movlw	82
   384  0003C4                     u227:
   385  0003C4  0004               	clrwdt	
   386  0003C6  2EE8               	decfsz	wreg,f,c
   387  0003C8  D7FD               	bra	u227
   388  0003CA  2E48               	decfsz	??_main& (0+255),f,c
   389  0003CC  D7FB               	bra	u227
   390  0003CE  2E49               	decfsz	(??_main+1)& (0+255),f,c
   391  0003D0  D7F9               	bra	u227
   392                           
   393                           ;main.c: 63:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   394  0003D2  0E02               	movlw	2
   395  0003D4  6E49               	movwf	(??_main+1)& (0+255),c
   396  0003D6  0EE8               	movlw	232
   397  0003D8  6E48               	movwf	??_main& (0+255),c
   398  0003DA  0E52               	movlw	82
   399  0003DC                     u237:
   400  0003DC  0004               	clrwdt	
   401  0003DE  2EE8               	decfsz	wreg,f,c
   402  0003E0  D7FD               	bra	u237
   403  0003E2  2E48               	decfsz	??_main& (0+255),f,c
   404  0003E4  D7FB               	bra	u237
   405  0003E6  2E49               	decfsz	(??_main+1)& (0+255),f,c
   406  0003E8  D7F9               	bra	u237
   407                           
   408                           ;main.c: 64:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   409  0003EA  0E02               	movlw	2
   410  0003EC  6E49               	movwf	(??_main+1)& (0+255),c
   411  0003EE  0EE8               	movlw	232
   412  0003F0  6E48               	movwf	??_main& (0+255),c
   413  0003F2  0E52               	movlw	82
   414  0003F4                     u247:
   415  0003F4  0004               	clrwdt	
   416  0003F6  2EE8               	decfsz	wreg,f,c
   417  0003F8  D7FD               	bra	u247
   418  0003FA  2E48               	decfsz	??_main& (0+255),f,c
   419  0003FC  D7FB               	bra	u247
   420  0003FE  2E49               	decfsz	(??_main+1)& (0+255),f,c
   421  000400  D7F9               	bra	u247
   422                           
   423                           ;main.c: 65:         _delaywdt((unsigned long)((100)*(20000000L/4000.0)));
   424  000402  0E02               	movlw	2
   425  000404  6E49               	movwf	(??_main+1)& (0+255),c
   426  000406  0EE8               	movlw	232
   427  000408  6E48               	movwf	??_main& (0+255),c
   428  00040A  0E52               	movlw	82
   429  00040C                     u257:
   430  00040C  0004               	clrwdt	
   431  00040E  2EE8               	decfsz	wreg,f,c
   432  000410  D7FD               	bra	u257
   433  000412  2E48               	decfsz	??_main& (0+255),f,c
   434  000414  D7FB               	bra	u257
   435  000416  2E49               	decfsz	(??_main+1)& (0+255),f,c
   436  000418  D7F9               	bra	u257
   437  00041A  D77F               	goto	l979
   438  00041C                     __end_of_main:
   439                           	opt callstack 0
   440                           
   441 ;; *************** function _printf *****************
   442 ;; Defined at:
   443 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;  fmt             2   25[COMRAM] PTR const unsigned char 
   446 ;;		 -> STR_1(16), 
   447 ;; Auto vars:     Size  Location     Type
   448 ;;  ap              2   29[COMRAM] PTR void [1]
   449 ;;		 -> ?_printf(2), 
   450 ;;  ret             2    0        int 
   451 ;; Return value:  Size  Location     Type
   452 ;;                  2   25[COMRAM] int 
   453 ;; Registers used:
   454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   460 ;;      Params:         2       0       0       0
   461 ;;      Locals:         4       0       0       0
   462 ;;      Temps:          0       0       0       0
   463 ;;      Totals:         6       0       0       0
   464 ;;Total ram usage:        6 bytes
   465 ;; Hardware stack levels used:    1
   466 ;; Hardware stack levels required when called:    6
   467 ;; This function calls:
   468 ;;		_vfprintf
   469 ;; This function is called by:
   470 ;;		_main
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           	psect	text1
   475  0005A8                     __ptext1:
   476                           	opt callstack 0
   477  0005A8                     _printf:
   478                           	opt callstack 24
   479                           
   480                           ;incstack = 0
   481  0005A8  0E44               	movlw	low (?_printf+2)
   482  0005AA  6E46               	movwf	printf@ap,c
   483  0005AC  0E00               	movlw	high (?_printf+2)
   484  0005AE  6E47               	movwf	printf@ap+1,c
   485  0005B0  0E00               	movlw	0
   486  0005B2  6E3A               	movwf	vfprintf@fp,c
   487  0005B4  0E00               	movlw	0
   488  0005B6  6E3B               	movwf	vfprintf@fp+1,c
   489  0005B8  C042  F03C         	movff	printf@fmt,vfprintf@fmt
   490  0005BC  C043  F03D         	movff	printf@fmt+1,vfprintf@fmt+1
   491  0005C0  0E46               	movlw	low printf@ap
   492  0005C2  6E3E               	movwf	vfprintf@ap,c
   493  0005C4  0E00               	movlw	high printf@ap
   494  0005C6  6E3F               	movwf	vfprintf@ap+1,c
   495  0005C8  ECAB  F002         	call	_vfprintf	;wreg free
   496  0005CC  0012               	return		;funcret
   497  0005CE                     __end_of_printf:
   498                           	opt callstack 0
   499                           
   500 ;; *************** function _vfprintf *****************
   501 ;; Defined at:
   502 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
   505 ;;		 -> NULL(0), 
   506 ;;  fmt             2   19[COMRAM] PTR const unsigned char 
   507 ;;		 -> STR_1(16), 
   508 ;;  ap              2   21[COMRAM] PTR PTR void 
   509 ;;		 -> printf@ap(2), 
   510 ;; Auto vars:     Size  Location     Type
   511 ;;  cfmt            2   23[COMRAM] PTR unsigned char 
   512 ;;		 -> STR_1(16), 
   513 ;; Return value:  Size  Location     Type
   514 ;;                  2   17[COMRAM] int 
   515 ;; Registers used:
   516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   517 ;; Tracked objects:
   518 ;;		On entry : 0/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   522 ;;      Params:         6       0       0       0
   523 ;;      Locals:         2       0       0       0
   524 ;;      Temps:          0       0       0       0
   525 ;;      Totals:         8       0       0       0
   526 ;;Total ram usage:        8 bytes
   527 ;; Hardware stack levels used:    1
   528 ;; Hardware stack levels required when called:    5
   529 ;; This function calls:
   530 ;;		_vfpfcnvrt
   531 ;; This function is called by:
   532 ;;		_printf
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           	psect	text2
   537  000556                     __ptext2:
   538                           	opt callstack 0
   539  000556                     _vfprintf:
   540                           	opt callstack 24
   541                           
   542                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
   543                           
   544                           ;incstack = 0
   545  000556  C03C  F040         	movff	vfprintf@fmt,vfprintf@cfmt
   546  00055A  C03D  F041         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   547                           
   548                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
   549  00055E  0E00               	movlw	0
   550  000560  6E22               	movwf	_nout+1,c
   551  000562  0E00               	movlw	0
   552  000564  6E21               	movwf	_nout,c
   553                           
   554                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
   555  000566  D012               	goto	l967
   556  000568                     l965:
   557                           
   558                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
   559  000568  C03A  F034         	movff	vfprintf@fp,vfpfcnvrt@fp
   560  00056C  C03B  F035         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   561  000570  0E40               	movlw	low vfprintf@cfmt
   562  000572  6E36               	movwf	vfpfcnvrt@fmt,c
   563  000574  0E00               	movlw	high vfprintf@cfmt
   564  000576  6E37               	movwf	vfpfcnvrt@fmt+1,c
   565  000578  C03E  F038         	movff	vfprintf@ap,vfpfcnvrt@ap
   566  00057C  C03F  F039         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   567  000580  EC0E  F002         	call	_vfpfcnvrt	;wreg free
   568  000584  5034               	movf	?_vfpfcnvrt,w,c
   569  000586  2621               	addwf	_nout,f,c
   570  000588  5035               	movf	?_vfpfcnvrt+1,w,c
   571  00058A  2222               	addwfc	_nout+1,f,c
   572  00058C                     l967:
   573                           
   574                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
   575  00058C  C040  FFF6         	movff	vfprintf@cfmt,tblptrl
   576  000590  C041  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   577  000594                     	if	0	;tblptru may be non-zero
   578  000594                     	endif
   579  000594                     	if	0	;tblptru may be non-zero
   580  000594                     	endif
   581  000594  0008               	tblrd		*
   582  000596  50F5               	movf	tablat,w,c
   583  000598  0900               	iorlw	0
   584  00059A  A4D8               	btfss	status,2,c
   585  00059C  D7E5               	goto	l965
   586                           
   587                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
   588  00059E  C021  F03A         	movff	_nout,?_vfprintf
   589  0005A2  C022  F03B         	movff	_nout+1,?_vfprintf+1
   590  0005A6  0012               	return		;funcret
   591  0005A8                     __end_of_vfprintf:
   592                           	opt callstack 0
   593                           
   594 ;; *************** function _vfpfcnvrt *****************
   595 ;; Defined at:
   596 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
   599 ;;		 -> NULL(0), 
   600 ;;  fmt             2   13[COMRAM] PTR PTR unsigned char 
   601 ;;		 -> vfprintf@cfmt(2), 
   602 ;;  ap              2   15[COMRAM] PTR PTR void 
   603 ;;		 -> printf@ap(2), 
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  llu             8    0        unsigned long long 
   606 ;;  ll              8    0        long long 
   607 ;;  f               4    0        long long 
   608 ;;  vp              3    0        PTR void 
   609 ;;  ct              3    0        unsigned char [3]
   610 ;;  cp              3    0        PTR unsigned char 
   611 ;;  i               2    0        int 
   612 ;;  done            2    0        int 
   613 ;;  c               1    0        unsigned char 
   614 ;; Return value:  Size  Location     Type
   615 ;;                  2   11[COMRAM] int 
   616 ;; Registers used:
   617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   623 ;;      Params:         6       0       0       0
   624 ;;      Locals:         0       0       0       0
   625 ;;      Temps:          0       0       0       0
   626 ;;      Totals:         6       0       0       0
   627 ;;Total ram usage:        6 bytes
   628 ;; Hardware stack levels used:    1
   629 ;; Hardware stack levels required when called:    4
   630 ;; This function calls:
   631 ;;		_fputc
   632 ;; This function is called by:
   633 ;;		_vfprintf
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text3
   638  00041C                     __ptext3:
   639                           	opt callstack 0
   640  00041C                     _vfpfcnvrt:
   641                           	opt callstack 24
   642                           
   643                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
   644                           
   645                           ;incstack = 0
   646  00041C  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   647  000420  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   648  000424  CFDE FFF6          	movff	postinc2,tblptrl
   649  000428  CFDD FFF7          	movff	postdec2,tblptrh
   650  00042C                     	if	0	;tblptru may be non-zero
   651  00042C                     	endif
   652  00042C                     	if	0	;tblptru may be non-zero
   653  00042C                     	endif
   654  00042C  0008               	tblrd		*
   655  00042E  50F5               	movf	tablat,w,c
   656  000430  0A25               	xorlw	37
   657  000432  A4D8               	btfss	status,2,c
   658  000434  D040               	goto	l953
   659                           
   660                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
   661  000436  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   662  00043A  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   663  00043E  2ADE               	incf	postinc2,f,c
   664  000440  0E00               	movlw	0
   665  000442  22DD               	addwfc	postdec2,f,c
   666                           
   667                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
   668  000444  0E00               	movlw	0
   669  000446  6E24               	movwf	_width+1,c
   670  000448  0E00               	movlw	0
   671  00044A  6E23               	movwf	_width,c
   672  00044C  C023  F027         	movff	_width,_flags
   673  000450  C024  F028         	movff	_width+1,_flags+1
   674                           
   675                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
   676  000454  6825               	setf	_prec,c
   677  000456  6826               	setf	_prec+1,c
   678                           
   679                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
   680  000458  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   681  00045C  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   682  000460  CFDE FFF6          	movff	postinc2,tblptrl
   683  000464  CFDD FFF7          	movff	postdec2,tblptrh
   684  000468                     	if	0	;tblptru may be non-zero
   685  000468                     	endif
   686  000468                     	if	0	;tblptru may be non-zero
   687  000468                     	endif
   688  000468  0008               	tblrd		*
   689  00046A  50F5               	movf	tablat,w,c
   690  00046C  0A25               	xorlw	37
   691  00046E  A4D8               	btfss	status,2,c
   692  000470  D016               	goto	l947
   693                           
   694                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
   695  000472  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   696  000476  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   697  00047A  2ADE               	incf	postinc2,f,c
   698  00047C  0E00               	movlw	0
   699  00047E  22DD               	addwfc	postdec2,f,c
   700                           
   701                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
   702  000480  0E00               	movlw	0
   703  000482  6E2C               	movwf	fputc@c+1,c
   704  000484  0E25               	movlw	37
   705  000486  6E2B               	movwf	fputc@c,c
   706  000488  C034  F02D         	movff	vfpfcnvrt@fp,fputc@fp
   707  00048C  C035  F02E         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   708  000490  EC75  F002         	call	_fputc	;wreg free
   709  000494                     l943:
   710                           
   711                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
   712  000494  0E00               	movlw	0
   713  000496  6E35               	movwf	?_vfpfcnvrt+1,c
   714  000498  0E01               	movlw	1
   715  00049A  6E34               	movwf	?_vfpfcnvrt,c
   716  00049C  0012               	return	
   717  00049E                     l947:
   718                           
   719                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
   720  00049E  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   721  0004A2  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   722  0004A6  2ADE               	incf	postinc2,f,c
   723  0004A8  0E00               	movlw	0
   724  0004AA  22DD               	addwfc	postdec2,f,c
   725                           
   726                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
   727  0004AC  0E00               	movlw	0
   728  0004AE  6E35               	movwf	?_vfpfcnvrt+1,c
   729  0004B0  0E00               	movlw	0
   730  0004B2  6E34               	movwf	?_vfpfcnvrt,c
   731  0004B4  0012               	return	
   732  0004B6                     l953:
   733                           
   734                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
   735  0004B6  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   736  0004BA  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   737  0004BE  CFDE FFF6          	movff	postinc2,tblptrl
   738  0004C2  CFDD FFF7          	movff	postdec2,tblptrh
   739  0004C6                     	if	0	;tblptru may be non-zero
   740  0004C6                     	endif
   741  0004C6                     	if	0	;tblptru may be non-zero
   742  0004C6                     	endif
   743  0004C6  0008               	tblrd		*
   744  0004C8  50F5               	movf	tablat,w,c
   745  0004CA  6E2B               	movwf	fputc@c,c
   746  0004CC  6A2C               	clrf	fputc@c+1,c
   747  0004CE  C034  F02D         	movff	vfpfcnvrt@fp,fputc@fp
   748  0004D2  C035  F02E         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   749  0004D6  EC75  F002         	call	_fputc	;wreg free
   750                           
   751                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
   752  0004DA  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   753  0004DE  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   754  0004E2  2ADE               	incf	postinc2,f,c
   755  0004E4  0E00               	movlw	0
   756  0004E6  22DD               	addwfc	postdec2,f,c
   757  0004E8  D7D5               	goto	l943
   758  0004EA                     __end_of_vfpfcnvrt:
   759                           	opt callstack 0
   760                           
   761 ;; *************** function _fputc *****************
   762 ;; Defined at:
   763 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;  c               2    2[COMRAM] int 
   766 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
   767 ;;		 -> NULL(0), 
   768 ;; Auto vars:     Size  Location     Type
   769 ;;		None
   770 ;; Return value:  Size  Location     Type
   771 ;;                  2    2[COMRAM] int 
   772 ;; Registers used:
   773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   779 ;;      Params:         4       0       0       0
   780 ;;      Locals:         0       0       0       0
   781 ;;      Temps:          5       0       0       0
   782 ;;      Totals:         9       0       0       0
   783 ;;Total ram usage:        9 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; Hardware stack levels required when called:    3
   786 ;; This function calls:
   787 ;;		_putch
   788 ;; This function is called by:
   789 ;;		_vfpfcnvrt
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text4
   794  0004EA                     __ptext4:
   795                           	opt callstack 0
   796  0004EA                     _fputc:
   797                           	opt callstack 24
   798                           
   799                           ;incstack = 0
   800  0004EA  502D               	movf	fputc@fp,w,c
   801  0004EC  102E               	iorwf	fputc@fp+1,w,c
   802  0004EE  B4D8               	btfsc	status,2,c
   803  0004F0  D004               	goto	u100
   804  0004F2  502D               	movf	fputc@fp,w,c
   805  0004F4  102E               	iorwf	fputc@fp+1,w,c
   806  0004F6  A4D8               	btfss	status,2,c
   807  0004F8  D004               	goto	l921
   808  0004FA                     u100:
   809  0004FA  502B               	movf	fputc@c,w,c
   810  0004FC  EC03  F003         	call	_putch
   811  000500  0012               	return	
   812  000502                     l921:
   813  000502  EE20 F004          	lfsr	2,4
   814  000506  502D               	movf	fputc@fp,w,c
   815  000508  26D9               	addwf	fsr2l,f,c
   816  00050A  502E               	movf	fputc@fp+1,w,c
   817  00050C  22DA               	addwfc	fsr2h,f,c
   818  00050E  50DE               	movf	postinc2,w,c
   819  000510  10DE               	iorwf	postinc2,w,c
   820  000512  B4D8               	btfsc	status,2,c
   821  000514  D016               	goto	u120
   822  000516  EE20 F004          	lfsr	2,4
   823  00051A  502D               	movf	fputc@fp,w,c
   824  00051C  26D9               	addwf	fsr2l,f,c
   825  00051E  502E               	movf	fputc@fp+1,w,c
   826  000520  22DA               	addwfc	fsr2h,f,c
   827  000522  EE10 F002          	lfsr	1,2
   828  000526  502D               	movf	fputc@fp,w,c
   829  000528  26E1               	addwf	fsr1l,f,c
   830  00052A  502E               	movf	fputc@fp+1,w,c
   831  00052C  22E2               	addwfc	fsr1h,f,c
   832  00052E  50DE               	movf	postinc2,w,c
   833  000530  5CE6               	subwf	postinc1,w,c
   834  000532  50E6               	movf	postinc1,w,c
   835  000534  0A80               	xorlw	128
   836  000536  6E33               	movwf	(??_fputc+4)& (0+255),c
   837  000538  50DE               	movf	postinc2,w,c
   838  00053A  0A80               	xorlw	128
   839  00053C  5833               	subwfb	(??_fputc+4)& (0+255),w,c
   840  00053E  B0D8               	btfsc	status,0,c
   841  000540  0012               	return	
   842  000542                     u120:
   843  000542  EE20 F002          	lfsr	2,2
   844  000546  502D               	movf	fputc@fp,w,c
   845  000548  26D9               	addwf	fsr2l,f,c
   846  00054A  502E               	movf	fputc@fp+1,w,c
   847  00054C  22DA               	addwfc	fsr2h,f,c
   848  00054E  2ADE               	incf	postinc2,f,c
   849  000550  0E00               	movlw	0
   850  000552  22DD               	addwfc	postdec2,f,c
   851  000554  0012               	return		;funcret
   852  000556                     __end_of_fputc:
   853                           	opt callstack 0
   854                           
   855 ;; *************** function _putch *****************
   856 ;; Defined at:
   857 ;;		line 69 in file "user.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;  byte            1    wreg     unsigned char 
   860 ;; Auto vars:     Size  Location     Type
   861 ;;  byte            1    1[COMRAM] unsigned char 
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, status,2
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   871 ;;      Params:         0       0       0       0
   872 ;;      Locals:         1       0       0       0
   873 ;;      Temps:          0       0       0       0
   874 ;;      Totals:         1       0       0       0
   875 ;;Total ram usage:        1 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    2
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		_fputc
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text5
   886  000606                     __ptext5:
   887                           	opt callstack 0
   888  000606                     _putch:
   889                           	opt callstack 24
   890                           
   891                           ;incstack = 0
   892                           ;putch@byte stored from wreg
   893  000606  6E2A               	movwf	putch@byte,c
   894                           
   895                           ;user.c: 70:     TXSTA = 0x26;
   896  000608  0E26               	movlw	38
   897  00060A  6EAC               	movwf	4012,c	;volatile
   898                           
   899                           ;user.c: 71:     RCSTA1bits.SPEN = 1;
   900  00060C  8EAB               	bsf	4011,7,c	;volatile
   901  00060E                     l60:
   902  00060E  A89E               	btfss	3998,4,c	;volatile
   903  000610  D7FE               	goto	l60
   904                           
   905                           ;user.c: 73:     TXREG = byte;
   906  000612  C02A  FFAD         	movff	putch@byte,4013	;volatile
   907  000616  0012               	return		;funcret
   908  000618                     __end_of_putch:
   909                           	opt callstack 0
   910                           
   911 ;; *************** function _InitApp *****************
   912 ;; Defined at:
   913 ;;		line 29 in file "user.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;		None
   916 ;; Auto vars:     Size  Location     Type
   917 ;;		None
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		wreg, status,2, cstack
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   927 ;;      Params:         0       0       0       0
   928 ;;      Locals:         0       0       0       0
   929 ;;      Temps:          0       0       0       0
   930 ;;      Totals:         0       0       0       0
   931 ;;Total ram usage:        0 bytes
   932 ;; Hardware stack levels used:    1
   933 ;; Hardware stack levels required when called:    3
   934 ;; This function calls:
   935 ;;		_init_usart
   936 ;; This function is called by:
   937 ;;		_main
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text6
   942  000618                     __ptext6:
   943                           	opt callstack 0
   944  000618                     _InitApp:
   945                           	opt callstack 27
   946                           
   947                           ;user.c: 34:     TRISBbits.TRISB0 = 0;
   948                           
   949                           ;incstack = 0
   950  000618  9093               	bcf	3987,0,c	;volatile
   951                           
   952                           ;user.c: 37:     init_usart();
   953  00061A  ECF6  F002         	call	_init_usart	;wreg free
   954  00061E  0012               	return		;funcret
   955  000620                     __end_of_InitApp:
   956                           	opt callstack 0
   957                           
   958 ;; *************** function _init_usart *****************
   959 ;; Defined at:
   960 ;;		line 44 in file "user.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;		None
   963 ;; Auto vars:     Size  Location     Type
   964 ;;		None
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      void 
   967 ;; Registers used:
   968 ;;		wreg, status,2
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   974 ;;      Params:         0       0       0       0
   975 ;;      Locals:         0       0       0       0
   976 ;;      Temps:          0       0       0       0
   977 ;;      Totals:         0       0       0       0
   978 ;;Total ram usage:        0 bytes
   979 ;; Hardware stack levels used:    1
   980 ;; Hardware stack levels required when called:    2
   981 ;; This function calls:
   982 ;;		Nothing
   983 ;; This function is called by:
   984 ;;		_InitApp
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           	psect	text7
   989  0005EC                     __ptext7:
   990                           	opt callstack 0
   991  0005EC                     _init_usart:
   992                           	opt callstack 27
   993                           
   994                           ;user.c: 47:     TRISCbits.RC6 = 0;
   995                           
   996                           ;incstack = 0
   997  0005EC  9C94               	bcf	3988,6,c	;volatile
   998                           
   999                           ;user.c: 48:     TRISCbits.RC7 = 1;
  1000  0005EE  8E94               	bsf	3988,7,c	;volatile
  1001                           
  1002                           ;user.c: 50:     TXSTA1bits.SYNC = 0;
  1003  0005F0  98AC               	bcf	4012,4,c	;volatile
  1004                           
  1005                           ;user.c: 51:     TXSTA1bits.TX9 = 0;
  1006  0005F2  9CAC               	bcf	4012,6,c	;volatile
  1007                           
  1008                           ;user.c: 52:     TXSTA1bits.TXEN = 1;
  1009  0005F4  8AAC               	bsf	4012,5,c	;volatile
  1010                           
  1011                           ;user.c: 54:     RCSTA1bits.RX9 = 0;
  1012  0005F6  9CAB               	bcf	4011,6,c	;volatile
  1013                           
  1014                           ;user.c: 55:     RCSTA1bits.CREN = 1;
  1015  0005F8  88AB               	bsf	4011,4,c	;volatile
  1016                           
  1017                           ;user.c: 56:     RCSTA1bits.SPEN = 1;
  1018  0005FA  8EAB               	bsf	4011,7,c	;volatile
  1019                           
  1020                           ;user.c: 59:     BAUDCONbits.BRG16 = 0;
  1021  0005FC  96AA               	bcf	4010,3,c	;volatile
  1022                           
  1023                           ;user.c: 60:     TXSTA1bits.BRGH = 0;
  1024  0005FE  94AC               	bcf	4012,2,c	;volatile
  1025                           
  1026                           ;user.c: 61:     SPBRG1 = 129;
  1027  000600  0E81               	movlw	129
  1028  000602  6EAF               	movwf	4015,c	;volatile
  1029  000604  0012               	return		;funcret
  1030  000606                     __end_of_init_usart:
  1031                           	opt callstack 0
  1032                           
  1033 ;; *************** function _ConfigureOscillator *****************
  1034 ;; Defined at:
  1035 ;;		line 24 in file "system.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;		None
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		None
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1049 ;;      Params:         0       0       0       0
  1050 ;;      Locals:         0       0       0       0
  1051 ;;      Temps:          0       0       0       0
  1052 ;;      Totals:         0       0       0       0
  1053 ;;Total ram usage:        0 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    2
  1056 ;; This function calls:
  1057 ;;		Nothing
  1058 ;; This function is called by:
  1059 ;;		_main
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           	psect	text8
  1064  000624                     __ptext8:
  1065                           	opt callstack 0
  1066  000624                     _ConfigureOscillator:
  1067                           	opt callstack 28
  1068                           
  1069                           ;incstack = 0
  1070  000624  0012               	return		;funcret
  1071  000626                     __end_of_ConfigureOscillator:
  1072                           	opt callstack 0
  1073                           
  1074 ;; *************** function _low_isr *****************
  1075 ;; Defined at:
  1076 ;;		line 67 in file "interrupts.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;		None
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		None
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1090 ;;      Params:         0       0       0       0
  1091 ;;      Locals:         0       0       0       0
  1092 ;;      Temps:          1       0       0       0
  1093 ;;      Totals:         1       0       0       0
  1094 ;;Total ram usage:        1 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; Hardware stack levels required when called:    1
  1097 ;; This function calls:
  1098 ;;		Nothing
  1099 ;; This function is called by:
  1100 ;;		Interrupt level 1
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           	psect	intcodelo
  1105  000018                     __pintcodelo:
  1106                           	opt callstack 0
  1107  000018                     _low_isr:
  1108                           	opt callstack 24
  1109                           
  1110                           ;incstack = 0
  1111  000018  804A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  1112  00001A  CFE0 F029          	movff	bsr,??_low_isr
  1113  00001E  C029  FFE0         	movff	??_low_isr,bsr
  1114  000022  904A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  1115  000024  0010               	retfie	
  1116  000026                     __end_of_low_isr:
  1117                           	opt callstack 0
  1118                           
  1119 ;; *************** function _high_isr *****************
  1120 ;; Defined at:
  1121 ;;		line 27 in file "interrupts.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		None
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1135 ;;      Params:         0       0       0       0
  1136 ;;      Locals:         0       0       0       0
  1137 ;;      Temps:          0       0       0       0
  1138 ;;      Totals:         0       0       0       0
  1139 ;;Total ram usage:        0 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; This function calls:
  1142 ;;		Nothing
  1143 ;; This function is called by:
  1144 ;;		Interrupt level 2
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	intcode
  1149  000008                     __pintcode:
  1150                           	opt callstack 0
  1151  000008                     _high_isr:
  1152                           	opt callstack 24
  1153                           
  1154                           ;incstack = 0
  1155  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1156  00000A  EF10  F003         	goto	int_func
  1157                           
  1158                           	psect	intcode_body
  1159  000620                     __pintcode_body:
  1160                           	opt callstack 24
  1161  000620                     int_func:
  1162                           	opt callstack 24
  1163  000620  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1164  000622  0011               	retfie		f
  1165  000624                     __end_of_high_isr:
  1166                           	opt callstack 0
  1167                           
  1168                           	psect	rparam
  1169  0000                     
  1170                           	psect	temp
  1171  00004A                     btemp:
  1172                           	opt callstack 0
  1173  00004A                     	ds	1
  1174  0000                     int$flags	set	btemp
  1175  0000                     wtemp8	set	btemp+1
  1176  0000                     ttemp5	set	btemp+1
  1177  0000                     ttemp6	set	btemp+4
  1178  0000                     ttemp7	set	btemp+8
  1179                           tosu	equ	0xFFF
  1180                           tosh	equ	0xFFE
  1181                           tosl	equ	0xFFD
  1182                           stkptr	equ	0xFFC
  1183                           pclatu	equ	0xFFB
  1184                           pclath	equ	0xFFA
  1185                           pcl	equ	0xFF9
  1186                           tblptru	equ	0xFF8
  1187                           tblptrh	equ	0xFF7
  1188                           tblptrl	equ	0xFF6
  1189                           tablat	equ	0xFF5
  1190                           prodh	equ	0xFF4
  1191                           prodl	equ	0xFF3
  1192                           indf0	equ	0xFEF
  1193                           postinc0	equ	0xFEE
  1194                           postdec0	equ	0xFED
  1195                           preinc0	equ	0xFEC
  1196                           plusw0	equ	0xFEB
  1197                           fsr0h	equ	0xFEA
  1198                           fsr0l	equ	0xFE9
  1199                           wreg	equ	0xFE8
  1200                           indf1	equ	0xFE7
  1201                           postinc1	equ	0xFE6
  1202                           postdec1	equ	0xFE5
  1203                           preinc1	equ	0xFE4
  1204                           plusw1	equ	0xFE3
  1205                           fsr1h	equ	0xFE2
  1206                           fsr1l	equ	0xFE1
  1207                           bsr	equ	0xFE0
  1208                           indf2	equ	0xFDF
  1209                           postinc2	equ	0xFDE
  1210                           postdec2	equ	0xFDD
  1211                           preinc2	equ	0xFDC
  1212                           plusw2	equ	0xFDB
  1213                           fsr2h	equ	0xFDA
  1214                           fsr2l	equ	0xFD9
  1215                           status	equ	0xFD8


Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      75
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           239      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    S867_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1636
                                             31 COMRAM     4     4      0
                _ConfigureOscillator
                            _InitApp
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2    1635
                                             25 COMRAM     6     4      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    1507
                                             17 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    34      6    1157
                                             11 COMRAM     6     0      6
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     731
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
                         _init_usart
 ---------------------------------------------------------------------------------
 (2) _init_usart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _low_isr                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
     _init_usart
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2EE      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2            EF      0       0       8        0.0%
BANK2               EF      0       0       9        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      4B       1       79.8%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4B       5        0.0%
DATA                 0      0      4B      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr  1 05:25:08 2019

                          l60 060E                            bsr 000FE0                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                           l921 0502                           l943 0494  
                         l953 04B6                           l947 049E                           l965 0568  
                         l967 058C                           l979 031A                  __CFG_CPB$OFF 000000  
                         u100 04FA                           u120 0542                           u207 0392  
                         u217 03AC                           u227 03C4                           u237 03DC  
                         u247 03F4                           u167 0332                           u257 040C  
                         u177 034A                  __CFG_CPD$OFF 000000                           u187 0362  
                         u197 037A                           wreg 000FE8                    _TXSTA1bits 000FAC  
                __CFG_IESO$ON 000000                  __CFG_LVP$OFF 000000                          STR_1 0301  
                        _TXIF 007CF4                 __CFG_FCMEN$ON 000000                          _dbuf 0001  
                        _main 0312                          _prec 0025                          _nout 0021  
                        fsr1h 000FE2                          fsr2h 000FDA                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 004A                          start 0026  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000               __end_of_InitApp 0620  
                       ?_main 0029                  vfpfcnvrt@fmt 0036                         _TXREG 000FAD  
                       _TXSTA 000FAC           _ConfigureOscillator 0624                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000                         _flags 0027  
                       _fputc 04EA                         _width 0023                         _putch 0606  
             __end_of_low_isr 0026                __CFG_BOREN$OFF 000000                         tablat 000FF5  
                       ttemp5 004B                         ttemp6 004E                         ttemp7 0052  
                       status 000FD8                         wtemp8 004B          ?_ConfigureOscillator 0029  
             __initialization 05CE                __CFG_HPOL$HIGH 000000                  __end_of_main 041C  
              __CFG_LPOL$HIGH 000000                        ??_main 0048                 __activetblptr 000001  
                      ?_fputc 002B                        ?_putch 0029                __CFG_WDTEN$OFF 000000  
                      _SPBRG1 000FAF                __CFG_WINEN$OFF 000000                     ??_InitApp 002A  
       ??_ConfigureOscillator 002A                __CFG_SSPMX$RC7 000000                  vfprintf@cfmt 0040  
            __end_of_high_isr 0624                __CFG_STVREN$ON 000000                        clear_0 05D4  
                      _printf 05A8                        fputc@c 002B                  __mediumconst 0000  
                   ??_low_isr 0029                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8              __end_of_vfprintf 05A8                    __accesstop 0060  
     __end_of__initialization 05DA               __CFG_FLTAMX$RC1 000000                 ___rparam_used 000001  
             __CFG_T1OSCMX$ON 000000                __pcstackCOMRAM 0029                 __end_of_fputc 0556  
               __end_of_putch 0618                       ??_fputc 002F                       ??_putch 002A  
             __CFG_WDPS$32768 000000                       ?_printf 0042               __CFG_PWM4MX$RB5 000000  
          __size_of_vfpfcnvrt 00CE                     ?_high_isr 0029               __CFG_PWMPIN$OFF 000000  
                     _InitApp 0618               __CFG_PWRTEN$OFF 000000                       __Hparam 0000  
                     __Lparam 0000                     ?_vfprintf 003A                  __psmallconst 0300  
                     __pcinit 05CE                       __ramtop 0300                    _init_usart 05EC  
                     __ptext0 0312                       __ptext1 05A8                       __ptext2 0556  
                     __ptext3 041C                       __ptext4 04EA                       __ptext5 0606  
                     __ptext6 0618                       __ptext7 05EC                       __ptext8 0624  
             __size_of_printf 0026                       _low_isr 0018                    ??_high_isr 0029  
              __pintcode_body 0620          end_of_initialization 05DA                       fputc@fp 002D  
                     int_func 0620             __end_of_vfpfcnvrt 04EA                       postdec2 000FDD  
                     postinc0 000FEE                       postinc1 000FE6                       postinc2 000FDE  
                  ??_vfprintf 0040                     _PORTBbits 000F81                     _TRISBbits 000F93  
                   _TRISCbits 000F94   __end_of_ConfigureOscillator 0626              __CFG_EXCLKMX$RC3 000000  
                 vfpfcnvrt@ap 0038                   vfpfcnvrt@fp 0034                   _BAUDCONbits 000FAA  
                 ?_init_usart 0029                __end_of_printf 05CE           start_initialization 05CE  
                 vfprintf@fmt 003C                      ??_printf 0044                   __pbssCOMRAM 0001  
           __size_of_high_isr 061C           __size_of_init_usart 001A                      ?_InitApp 0029  
                   __pintcode 0008                   __pintcodelo 0018             __size_of_vfprintf 0052  
                 __smallconst 0300                      ?_low_isr 0029                __size_of_fputc 006C  
              __size_of_putch 0012                     _vfpfcnvrt 041C              __size_of_InitApp 0008  
                    __Hrparam 0000                    vfprintf@ap 003E                      __Lrparam 0000  
                  vfprintf@fp 003A                  __Lsmallconst 0300                    ?_vfpfcnvrt 0034  
                ??_init_usart 002A              __size_of_low_isr 000E                      _high_isr 0008  
               __size_of_main 010A            __end_of_init_usart 0606  __size_of_ConfigureOscillator 0002  
                    int$flags 004A                      _vfprintf 0556                     printf@fmt 0042  
                   putch@byte 002A                      intlevel1 0000                      intlevel2 0000  
                  _RCSTA1bits 000FAB                      printf@ap 0046                   ??_vfpfcnvrt 003A  
